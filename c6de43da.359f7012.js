(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{164:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return s})),a.d(t,"default",(function(){return b}));var n=a(3),r=a(7),c=(a(0),a(198)),i=a(200),o={id:"match-first",title:"First occurrence"},l={unversionedId:"match-first",id:"match-first",isDocsHomePage:!1,title:"First occurrence",description:"Matching a first occurrence in a string is the most common use-case.",source:"@site/../docs/match-first.mdx",slug:"/match-first",permalink:"/docs/match-first",version:"current",lastUpdatedAt:1611615784,sidebar:"docs",previous:{title:"Match a subject",permalink:"/docs/match"},next:{title:"Optional matches (Find first)",permalink:"/docs/match-find-first"}},s=[{value:"About <code>first()</code>",id:"about-first",children:[]},{value:"Use <code>first()</code> with callback",id:"use-first-with-callback",children:[{value:"Match details",id:"match-details",children:[]},{value:"Groups in match",id:"groups-in-match",children:[]},{value:"Return value",id:"return-value",children:[]},{value:"Variable callbacks",id:"variable-callbacks",children:[]},{value:"Arbitrary return types",id:"arbitrary-return-types",children:[]}]},{value:"<code>findFirst()</code>",id:"findfirst",children:[]}],p={toc:s};function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Matching a first occurrence in a string is the most common use-case."),Object(c.b)("h2",{id:"about-first"},"About ",Object(c.b)("inlineCode",{parentName:"h2"},"first()")),Object(c.b)("p",null,"You can get the first occurrence of a pattern in a subject by calling ",Object(c.b)("inlineCode",{parentName:"p"},"first()"),"."),Object(c.b)(i.a,{tregx:"pattern('[0-9]+')->match(\"I'm 19 years old\")->first();",php:"if (preg::match('/[0-9]+/', \"I'm 19 years old\", $match)) {\n    return $match[0];\n}\nthrow new SubjectNotMatchedException();",mdxType:"CodeTabs"}),Object(c.b)(i.b,{mdxType:"Result"},"'19'"),Object(c.b)("p",null,"If a match is ",Object(c.b)("strong",{parentName:"p"},"not found")," in a subject, ",Object(c.b)("inlineCode",{parentName:"p"},"SubjectNotMatchedException")," is thrown. This is done to relieve you from the\n",Object(c.b)("a",{parentName:"p",href:"/docs/overview#brain-strain"},Object(c.b)("strong",{parentName:"a"},"brain strain")),". It's much easier to develop an application and ",Object(c.b)("em",{parentName:"p"},"just assume")," that this\nmethod ",Object(c.b)("strong",{parentName:"p"},"has")," to return a value and go on. No more bothers about empty arrays and empty strings, or a possible\n",Object(c.b)("inlineCode",{parentName:"p"},"null"),"/",Object(c.b)("inlineCode",{parentName:"p"},"false")," hiding somewhere."),Object(c.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(c.b)("div",{parentName:"div",className:"admonition-heading"},Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",{parentName:"h5",className:"admonition-icon"},Object(c.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(c.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(c.b)("div",{parentName:"div",className:"admonition-content"},Object(c.b)("p",{parentName:"div"},"If you would like to control the subject that ",Object(c.b)("strong",{parentName:"p"},"isn't matched")," with your pattern though;\nyou can do it ",Object(c.b)("strong",{parentName:"p"},"explicitly")," with ",Object(c.b)("a",{parentName:"p",href:"#findfirst"},Object(c.b)("inlineCode",{parentName:"a"},"findFirst()"))," (and ",Object(c.b)("a",{parentName:"p",href:"/docs/match-find-first#orreturn"},Object(c.b)("inlineCode",{parentName:"a"},"orReturn()")),", ",Object(c.b)("a",{parentName:"p",href:"/docs/match-find-first#orelse"},Object(c.b)("inlineCode",{parentName:"a"},"orElse()")),", ",Object(c.b)("a",{parentName:"p",href:"/docs/match-find-first#orthrow"},Object(c.b)("inlineCode",{parentName:"a"},"orThrow()")),")."))),Object(c.b)("h2",{id:"use-first-with-callback"},"Use ",Object(c.b)("inlineCode",{parentName:"h2"},"first()")," with callback"),Object(c.b)("p",null,"You can call an anonymous function for the first matched occurrence. In this example, we'll print the matched text to the\nstandard output."),Object(c.b)(i.a,{tregx:"pattern('\\w+')->match('Apples are cool')->first(function (string $match) {\n    // highlight-next-line\n    echo \"I matched $match\";\n});",php:"if (preg::match('/\\w+/', 'Apples are cool', $match)) {\n    // highlight-next-line\n    echo 'I matched ' . $match[0];\n}\nelse {\n    throw new SubjectNotMatchedException();\n}",mdxType:"CodeTabs"}),Object(c.b)(i.b,{text:!0,mdxType:"Result"},"I matched Apples"),Object(c.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(c.b)("div",{parentName:"div",className:"admonition-heading"},Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",{parentName:"h5",className:"admonition-icon"},Object(c.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(c.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(c.b)("div",{parentName:"div",className:"admonition-content"},Object(c.b)("p",{parentName:"div"},"Casting ",Object(c.b)("a",{parentName:"p",href:"/docs/match-details"},Object(c.b)("inlineCode",{parentName:"a"},"Detail"))," to ",Object(c.b)("inlineCode",{parentName:"p"},"string")," is the same as calling ",Object(c.b)("inlineCode",{parentName:"p"},"text()")," method."))),Object(c.b)("h3",{id:"match-details"},"Match details"),Object(c.b)("p",null,"With ",Object(c.b)("a",{parentName:"p",href:"/docs/match-details"},Object(c.b)("inlineCode",{parentName:"a"},"Detail")),", you can gain access to useful information about the matched occurrence."),Object(c.b)(i.a,{tregx:"pattern('\\w+')->match(\"Apples are cool\")->first(function (Detail $detail) {\n    // highlight-next-line\n    $subject = $detail->subject();\n    echo \"Match '$detail' was matched inside '$subject'.\";\n});",php:"$subject = \"Apples are cool\";\nif (preg::match('/\\w+/', $subject, $match)) {\n    $text = $match[0];\n    echo \"Match '$text' was matched inside '$subject'.\";\n} \nelse {\n    throw new SubjectNotMatchedException();\n}",mdxType:"CodeTabs"}),Object(c.b)(i.b,{text:!0,mdxType:"Result"},"Match 'Apples' was matched inside 'Apples are cool'."),Object(c.b)("p",null,"You can read more extensively about it on ",Object(c.b)("a",{parentName:"p",href:"/docs/match-details"},Object(c.b)("inlineCode",{parentName:"a"},"Detail"))," page."),Object(c.b)("h3",{id:"groups-in-match"},"Groups in match"),Object(c.b)("p",null,"Retrieving capturing groups from a match is really simple."),Object(c.b)(i.a,{tregx:"pattern('(?<capital>[A-Z])')->match('hello there, General Kenobi')->first(function (Detail $detail) {\n    // highlight-next-line\n    return $detail->get('capital');\n});",php:"if (preg::match('~(?<capital>[A-Z])[a-z]+~', 'hello there, General Kenobi', $match)) {\n    // highlight-next-line\n    return $match['capital'][0];\n}\nthrow new SubjectNotMatchedException();",mdxType:"CodeTabs"}),Object(c.b)(i.b,{mdxType:"Result"},"'G'"),Object(c.b)("p",null,"Of course, ",Object(c.b)("inlineCode",{parentName:"p"},"first()")," callback will only be invoked if your pattern matches the subject."),Object(c.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(c.b)("div",{parentName:"div",className:"admonition-heading"},Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",{parentName:"h5",className:"admonition-icon"},Object(c.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(c.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(c.b)("div",{parentName:"div",className:"admonition-content"},Object(c.b)("p",{parentName:"div"},"You can learn more about groups on ",Object(c.b)("a",{parentName:"p",href:"/docs/match-groups"},"Capturing Group")," page."))),Object(c.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(c.b)("div",{parentName:"div",className:"admonition-heading"},Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",{parentName:"h5",className:"admonition-icon"},Object(c.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(c.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(c.b)("div",{parentName:"div",className:"admonition-content"},Object(c.b)("p",{parentName:"div"},"Even more, you can visit ",Object(c.b)("a",{parentName:"p",href:"/docs/match-group"},"Inline groups")," and use ",Object(c.b)("inlineCode",{parentName:"p"},"all()"),", ",Object(c.b)("inlineCode",{parentName:"p"},"first()"),", ",Object(c.b)("inlineCode",{parentName:"p"},"only()")," and ",Object(c.b)("inlineCode",{parentName:"p"},"offsets()"),"\nmethods on groups."))),Object(c.b)("h3",{id:"return-value"},"Return value"),Object(c.b)("p",null,"It's also possible to return your custom value from within ",Object(c.b)("inlineCode",{parentName:"p"},"first()")," callback. This custom value will be then returned\nfrom ",Object(c.b)("inlineCode",{parentName:"p"},"first()")," function."),Object(c.b)(i.a,{tregx:"$first = pattern('\\w+')->match('Apples are cool')->first(function (Detail $detail) {\n    return [\n        $detail->text(),\n        strtoupper($detail->text()),\n        lcfirst($detail->text())\n    ];\n});\n\nreturn $first;",php:"if (preg::match('/\\w+/', 'Apples are cool', $match)) {\n    $first = [\n        $match[0],\n        strtoupper($match[0]),\n        lcfirst($match[0])\n    ];\n}\nelse {\n    throw new SubjectNotMatchedException();\n}\n\nreturn $first;",mdxType:"CodeTabs"}),Object(c.b)(i.b,{mdxType:"Result"},"['Apples', 'APPLES', 'apples']"),Object(c.b)("h3",{id:"variable-callbacks"},"Variable callbacks"),Object(c.b)("p",null,"You can call ",Object(c.b)("inlineCode",{parentName:"p"},"first()")," for any valid PHP ",Object(c.b)("a",{parentName:"p",href:"https://www.php.net/manual/en/language.types.callable.php"},Object(c.b)("inlineCode",{parentName:"a"},"callable"))," which accepts one string parameter (or no parameters)."),Object(c.b)(i.a,{tregx:"return pattern('\\w+')->match('Apples are cool')->first('strtoupper');",php:"if (preg::match('/\\w+/', 'Apples are cool', $match)) {\n    // highlight-next-line\n    return call_user_func('strtoupper', $match[0]);\n}\nthrow new SubjectNotMatchedException();",mdxType:"CodeTabs"}),Object(c.b)(i.b,{mdxType:"Result"},"'APPLES'"),Object(c.b)("p",null,"In this example, ",Object(c.b)("a",{parentName:"p",href:"/docs/match-details"},Object(c.b)("inlineCode",{parentName:"a"},"Detail"))," will be cast to string, which is the same as calling ",Object(c.b)("inlineCode",{parentName:"p"},"Detail.text()")," method."),Object(c.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(c.b)("div",{parentName:"div",className:"admonition-heading"},Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",{parentName:"h5",className:"admonition-icon"},Object(c.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(c.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(c.b)("div",{parentName:"div",className:"admonition-content"},Object(c.b)("p",{parentName:"div"},"Of course, ",Object(c.b)("inlineCode",{parentName:"p"},"strtoupper")," (or any other callback) is only invoked ",Object(c.b)("strong",{parentName:"p"},"if")," your subject is matched with the pattern."))),Object(c.b)("h3",{id:"arbitrary-return-types"},"Arbitrary return types"),Object(c.b)("p",null,"From within ",Object(c.b)("inlineCode",{parentName:"p"},"first()")," callback, you can return any value:"),Object(c.b)(i.a,{tregx:"return pattern('\\w+')->match('Apples are cool')->first('str_split');",php:"if (preg::match('/\\w+/', 'Apples are cool', $match)) {\n    return call_user_func('str_split', $match[0]);\n}\nthrow new SubjectNotMatchedException();",mdxType:"CodeTabs"}),Object(c.b)(i.b,{mdxType:"Result"},"['A', 'p', 'p', 'l', 'e', 's']"),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"first()")," callback accepts all return types, including: numbers, objects, arrays, booleans and ",Object(c.b)("inlineCode",{parentName:"p"},"null"),":"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-php"},"$pattern = '(?<value>\\d+)(?<unit>cm|mm)';\n$subject = '192mm and 168cm or 18mm and 12cm';\n\npattern($pattern)->match($subject)->first();                 // '192mm'\npattern($pattern)->match($subject)->first('str_split');      // ['1', '9', '2', 'm', 'm']\npattern($pattern)->match($subject)->first('strlen')          // 5\n")),Object(c.b)("h2",{id:"findfirst"},Object(c.b)("inlineCode",{parentName:"h2"},"findFirst()")),Object(c.b)("p",null,"This method allows you to explicitly specify how to handle an unmatched subject. Just chain ",Object(c.b)("a",{parentName:"p",href:"/docs/match-find-first"},Object(c.b)("inlineCode",{parentName:"a"},"findFirst()"))," with\none of the following ",Object(c.b)("a",{parentName:"p",href:"/docs/match-find-first#orreturn"},Object(c.b)("inlineCode",{parentName:"a"},"orReturn()")),", ",Object(c.b)("a",{parentName:"p",href:"/docs/match-find-first#orelse"},Object(c.b)("inlineCode",{parentName:"a"},"orElse()"))," or ",Object(c.b)("a",{parentName:"p",href:"/docs/match-find-first#orthrow"},Object(c.b)("inlineCode",{parentName:"a"},"orThrow()")),"."),Object(c.b)(i.a,{tregx:"echo pattern('w+')->match('Dog')\n    ->findFirst(function (Detail $match) {\n        // highlight-next-line\n        return \"Yay $match\";\n    })\n    ->orReturn('Aw, man :/');",php:"if (preg::match('/w+/', 'Dog', $match)) {\n    // highlight-next-line\n    echo \"Yay {$match[0]}\";\n}\nelse {\n    echo 'Aw, man :/';\n}",mdxType:"CodeTabs"}),Object(c.b)(i.b,{text:!0,mdxType:"Result"},"Yay Dog"),Object(c.b)("p",null,"Read on to learn more about ",Object(c.b)("a",{parentName:"p",href:"/docs/match-find-first"},Object(c.b)("inlineCode",{parentName:"a"},"findFirst()")),"."))}b.isMDXComponent=!0},198:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},b=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(a),d=n,u=b["".concat(i,".").concat(d)]||b[d]||m[d]||c;return a?r.a.createElement(u,o(o({ref:t},s),{},{components:a})):r.a.createElement(u,o({ref:t},s))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,i=new Array(c);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var s=2;s<c;s++)i[s]=a[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},200:function(e,t,a){"use strict";a.d(t,"a",(function(){return j})),a.d(t,"b",(function(){return N}));var n=a(0),r=a.n(n),c=a(204),i=a(199),o=a(53),l=a.n(o),s=37,p=39;var b=function(e){var t=e.lazy,a=e.block,o=e.defaultValue,b=e.values,m=e.groupId,d=e.className,u=Object(c.a)(),h=u.tabGroupChoices,f=u.setTabGroupChoices,j=Object(n.useState)(o),O=j[0],v=j[1],g=n.Children.toArray(e.children);if(null!=m){var N=h[m];null!=N&&N!==O&&b.some((function(e){return e.value===N}))&&v(N)}var w=function(e){v(e),null!=m&&f(m,e)},y=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":a},d)},b.map((function(e){var t=e.value,a=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":O===t,className:Object(i.a)("tabs__item",l.a.tabItem,{"tabs__item--active":O===t}),key:t,ref:function(e){return y.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case p:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(y,e.target,e)},onFocus:function(){return w(t)},onClick:function(){w(t)}},a)}))),t?Object(n.cloneElement)(g.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},g.map((function(e,t){return Object(n.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))};var m=function(e){var t=e.children,a=e.hidden,n=e.className;return r.a.createElement("div",{role:"tabpanel",hidden:a,className:n},t)},d=a(205),u=a(54),h=a.n(u),f=function(e){var t=e.children,a=e.language;return r.a.createElement("div",{className:h.a.code},r.a.createElement(d.a,{className:"language-"+(a||"php")},function(e){if("string"==typeof e)return e;if(!Array.isArray(e))throw console.log(this.props.children),"Unexpected child of <Code>";if(e.every((function(e){return"string"==typeof e})))return e.join("")}(t)))};var j=function(e){var t=e.tregx,a=e.php;return r.a.createElement(b,{defaultValue:"t-regx",values:O(t,a)},t&&r.a.createElement(m,{value:"t-regx"},r.a.createElement(f,null,t)),a&&r.a.createElement(m,{value:"php"},r.a.createElement(f,null,a)))};function O(e,t){return[e?{label:"T-Regx",value:"t-regx"}:{},t?{label:"PHP",value:"php"}:{}].filter((function(e){return e.value}))}var v=a(55),g=a.n(v),N=function(e){var t=e.text,a=e.children;return r.a.createElement("div",{className:g.a.result},r.a.createElement(f,{language:t?"text":"php"},a))}}}]);