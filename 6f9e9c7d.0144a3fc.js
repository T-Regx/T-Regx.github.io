(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{112:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return s}));var n=a(2),c=a(6),r=(a(0),a(161)),b=a(162),i={id:"match",title:"Match a subject"},o={unversionedId:"match",id:"match",isDocsHomePage:!1,title:"Match a subject",description:"Using pattern()->match() you can:",source:"@site/..\\docs\\match.mdx",permalink:"/docs/match",lastUpdatedAt:1596999510,sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/introduction"},next:{title:"First occurrence",permalink:"/docs/match-first"}},l=[{value:"Test a subject",id:"test-a-subject",children:[]},{value:"Retrieve matches",id:"retrieve-matches",children:[{value:"Many",id:"many",children:[]},{value:"One",id:"one",children:[]}]},{value:"Unmatched subject",id:"unmatched-subject",children:[{value:"<code>all()</code>/<code>only()</code>",id:"allonly",children:[]},{value:"<code>first()</code>",id:"first",children:[]}]},{value:"Protect the developer",id:"protect-the-developer",children:[]}],p={rightToc:l};function s(e){var t=e.components,a=Object(c.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Using ",Object(r.b)("inlineCode",{parentName:"p"},"pattern()->match()")," you can:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Test a subject against a pattern: ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#test-a-subject"}),Object(r.b)("inlineCode",{parentName:"a"},"test()")),"/",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#test-a-subject"}),Object(r.b)("inlineCode",{parentName:"a"},"fails()"))),Object(r.b)("li",{parentName:"ul"},"Retrieve matches from the subject: ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/match-first#use-first-with-callback"}),Object(r.b)("inlineCode",{parentName:"a"},"first()")),"/",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#many"}),Object(r.b)("inlineCode",{parentName:"a"},"all()")),"/",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#many"}),Object(r.b)("inlineCode",{parentName:"a"},"only()"))),Object(r.b)("li",{parentName:"ul"},"Get capturing groups from matches: ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/match-details"}),Object(r.b)("inlineCode",{parentName:"a"},"group()")),"/",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/match-details"}),Object(r.b)("inlineCode",{parentName:"a"},"Match.group()")),"/",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/match-details"}),Object(r.b)("inlineCode",{parentName:"a"},"groups()"))),Object(r.b)("li",{parentName:"ul"},"Invoke callbacks for matches: ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/match-first#use-first-with-callback"}),Object(r.b)("inlineCode",{parentName:"a"},"first()")),"/",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/match-find-first"}),Object(r.b)("inlineCode",{parentName:"a"},"findFirst()")),"/",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/match-for-each"}),Object(r.b)("inlineCode",{parentName:"a"},"forEach()")),"/",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/match-map"}),Object(r.b)("inlineCode",{parentName:"a"},"map()")),"/",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/match-flat-map"}),Object(r.b)("inlineCode",{parentName:"a"},"flatMap()")))),Object(r.b)("h2",{id:"test-a-subject"},"Test a subject"),Object(r.b)("p",null,"If you only need to check whether a pattern matches a subject, use:"),Object(r.b)(b.a,{tregx:"pattern('[0-9]+')->test(\"I'm 19 years old\");",php:"preg::match('/[0-9]+/', \"I'm 19 years old\") > 0;",mdxType:"CodeTabs"}),Object(r.b)("p",null,"...or to check whether it doesn't:"),Object(r.b)(b.a,{tregx:"pattern('[0-9]{3}')->fails(\"I'm 19 years old\");",php:"preg::match('/[0-9]{3}/', \"I'm 19 years old\") === 0;",mdxType:"CodeTabs"}),Object(r.b)("p",null,"Of course ",Object(r.b)("inlineCode",{parentName:"p"},"pattern()->match()")," throws an exception if the pattern is invalid (or in case of any other error)."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"You can also use ",Object(r.b)("inlineCode",{parentName:"p"},"pattern()->match()->test()")," and ",Object(r.b)("inlineCode",{parentName:"p"},"pattern()->match()->fails()"),".")),Object(r.b)("h2",{id:"retrieve-matches"},"Retrieve matches"),Object(r.b)("h3",{id:"many"},"Many"),Object(r.b)("p",null,"You can easily retrieve matched occurrences of a pattern in your subject."),Object(r.b)(b.a,{tregx:"pattern('[0-9]+')->match(\"I'm 19. I was born in 1999, on May 12\")->all();",php:"preg::match_all('/[0-9]+/', \"I'm 19. I was born in 1999, on May 12\", $matches);\nreturn $matches[0];",mdxType:"CodeTabs"}),Object(r.b)(b.b,{mdxType:"Result"},"['19', '1999', '12']"),Object(r.b)("p",null,"You can limit your matches with ",Object(r.b)("inlineCode",{parentName:"p"},"only(int)"),"."),Object(r.b)(b.a,{tregx:"pattern('[0-9]+')->match(\"I'm 19. I was born in 1999, on May 12\")->only(2);",php:"preg::match_all('/[0-9]+/', \"I'm 19. I was born in 1999, on May 12\", $matches);\nreturn array_slice($matches[0], 0, 2);",mdxType:"CodeTabs"}),Object(r.b)(b.b,{mdxType:"Result"},"['19', '1999']"),Object(r.b)("h3",{id:"one"},"One"),Object(r.b)("p",null,"To get the first occurrence of a matched pattern, call ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-first#use-first-with-callback"}),Object(r.b)("inlineCode",{parentName:"a"},"first()")),"."),Object(r.b)(b.a,{tregx:"pattern('[0-9]+')->match(\"I'm 19 years old. I was born in 1999\")->first();",php:"if (preg::match('/[0-9]+/', \"I'm 19 years old. I was born in 1999\", $match)) {\n    return $match[0];\n}\nthrow new SubjectNotMatchedException();",mdxType:"CodeTabs"}),Object(r.b)(b.b,{mdxType:"Result"},"'19'"),Object(r.b)("p",null,"Read on the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-first"}),"next page")," to learn more about ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-first#use-first-with-callback"}),Object(r.b)("inlineCode",{parentName:"a"},"first()")),"."),Object(r.b)("h2",{id:"unmatched-subject"},"Unmatched subject"),Object(r.b)("h3",{id:"allonly"},Object(r.b)("inlineCode",{parentName:"h3"},"all()"),"/",Object(r.b)("inlineCode",{parentName:"h3"},"only()")),Object(r.b)("p",null,"If you call ",Object(r.b)("inlineCode",{parentName:"p"},"all()")," or ",Object(r.b)("inlineCode",{parentName:"p"},"only()")," on a subject that doesn't match your pattern, you'll receive an empty array."),Object(r.b)(b.a,{tregx:"pattern('d+')->match('Word')->all();",php:"preg::match_all('/d+/', 'Word', $match);\nreturn $match[0];",mdxType:"CodeTabs"}),Object(r.b)(b.b,{mdxType:"Result"},"[]"),Object(r.b)("h3",{id:"first"},Object(r.b)("inlineCode",{parentName:"h3"},"first()")),Object(r.b)("p",null,"If, however, subject doesn't match your pattern and you use ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-first#use-first-with-callback"}),Object(r.b)("inlineCode",{parentName:"a"},"first()"))," - ",Object(r.b)("inlineCode",{parentName:"p"},"SubjectNotMatchedException")," is thrown."),Object(r.b)(b.a,{tregx:"try {\n    return pattern('d+')->match('Word')->first();\n}\ncatch (SubjectNotMatchedException $e) {\n    // handle\n}",php:"try {\n    if (preg::match('/d+/', 'Word', $match)) {\n        return $match[0];\n    }\n    throw new SubjectNotMatchedException();\n}\ncatch (SubjectNotMatchedException $e) {\n    // handle\n}",mdxType:"CodeTabs"}),Object(r.b)("h2",{id:"protect-the-developer"},"Protect the developer"),Object(r.b)("p",null,"Please, keep in mind that T-Regx aims to relieve you (a programmer) from any ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/overview#brain-strain"}),Object(r.b)("strong",{parentName:"a"},"brain strain")),",\ntherefore if you "))}s.isMDXComponent=!0},162:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return m}));var n=a(0),c=a.n(n),r=a(165),b=a(166),i=a(164),o=a(47),l=a.n(o);class p extends c.a.Component{render(){return c.a.createElement("div",{className:l.a.code},c.a.createElement(i.a,{className:"language-"+this.language},this.code))}get language(){return this.props.language||"php"}get code(){let e=this.props.children;if("string"==typeof e)return e;if(Array.isArray(e)&&e.every(e=>"string"==typeof e))return e.join("");throw console.log(this.props.children),"Unexpected child of <Code>"}}class s extends c.a.Component{render(){return c.a.createElement(r.a,{defaultValue:"t-regx",values:this.values,groupId:"language"},this.props.tregx&&c.a.createElement(b.a,{value:"t-regx"},c.a.createElement(p,null,this.props.tregx)),this.props.php&&c.a.createElement(b.a,{value:"php"},c.a.createElement(p,null,this.props.php)))}get values(){return[this.props.tregx?{label:"T-Regx",value:"t-regx"}:{},this.props.php?{label:"PHP",value:"php"}:{}].filter(e=>e.value)}}var d=a(48),h=a.n(d),m=({text:e,children:t})=>c.a.createElement("div",{className:h.a.result},c.a.createElement(p,{language:e?"text":"php"},t))}}]);