(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{183:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return b}));var a=n(1),r=n(6),c=(n(0),n(207)),i=n(213),l={id:"replace-with",title:"Replace with a constant value"},o={id:"replace-with",title:"Replace with a constant value",description:"import {CodeTabs, Result} from './code';\r",source:"@site/..\\docs\\replace-with.mdx",permalink:"/docs/replace-with",lastUpdatedAt:1587076805,sidebar:"docs",previous:{title:"Replacing a string",permalink:"/docs/replace"},next:{title:"Replace with callback",permalink:"/docs/replace-callback"}},p=[{value:"Limits",id:"limits",children:[{value:"First occurrence - first()",id:"first-occurrence---first",children:[]},{value:"All occurrences - <code>all()</code>",id:"all-occurrences---all",children:[]},{value:"Limited occurrences - <code>only()</code>",id:"limited-occurrences---only",children:[]}]},{value:"Regular expression references",id:"regular-expression-references",children:[]},{value:"Intentional references",id:"intentional-references",children:[]}],s={rightToc:p};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"After ",Object(c.b)("inlineCode",{parentName:"p"},"replace()"),", you need to explicitly use one of ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/match-first"}),Object(c.b)("inlineCode",{parentName:"a"},"first()")),"/",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/match#many"}),Object(c.b)("inlineCode",{parentName:"a"},"all()")),"/",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/match#many"}),Object(c.b)("inlineCode",{parentName:"a"},"only(int)"))," methods, to express how many\nreplacements should be done."),Object(c.b)("p",null,"Specifying limits is done to relieve you from ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"overview.md#brain-strain"}),Object(c.b)("strong",{parentName:"a"},"brain strain"))," - so you can immediately\nrecognize author's intentions."),Object(c.b)("h2",{id:"limits"},"Limits"),Object(c.b)("p",null,"Using ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/match-first"}),Object(c.b)("inlineCode",{parentName:"a"},"first()")),"/",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/match#many"}),Object(c.b)("inlineCode",{parentName:"a"},"all()")),"/",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/match#many"}),Object(c.b)("inlineCode",{parentName:"a"},"only(int)"))," is semantically identical to passing ",Object(c.b)("inlineCode",{parentName:"p"},"$limit")," argument to\n","[",Object(c.b)("inlineCode",{parentName:"p"},"preg::replace()"),"]","/","[",Object(c.b)("inlineCode",{parentName:"p"},"preg::replace_callback()"),"]","."),Object(c.b)("p",null,"Neither of methods ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/match-first"}),Object(c.b)("inlineCode",{parentName:"a"},"first()")),"/",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/match#many"}),Object(c.b)("inlineCode",{parentName:"a"},"all()")),"/",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/match#many"}),Object(c.b)("inlineCode",{parentName:"a"},"only(int)"))," modify the subject if it wasn't matched by a pattern."),Object(c.b)("h3",{id:"first-occurrence---first"},"First occurrence - ",Object(c.b)("a",Object(a.a)({parentName:"h3"},{href:"/docs/match-first"}),Object(c.b)("inlineCode",{parentName:"a"},"first()"))),Object(c.b)(i.a,{tregx:"$subject = 'I like scandinavia: Sweden, Norway and Denmark';\n\npattern('[A-Z][a-z]+')->replace($subject)->first()->with('___');",php:"$subject = 'I like scandinavia: Sweden, Norway and Denmark';\n\npreg_replace('/[A-Z][a-z]+/', '___', $subject, 1);",mdxType:"CodeTabs"}),Object(c.b)(i.b,{mdxType:"Result"},"'I like scandinavia: ___, Norway and Denmark'"),Object(c.b)("h3",{id:"all-occurrences---all"},"All occurrences - ",Object(c.b)("inlineCode",{parentName:"h3"},"all()")),Object(c.b)(i.a,{tregx:"$subject = 'I like scandinavia: Sweden, Norway and Denmark';\n\npattern('[A-Z][a-z]+')->replace($subject)->all()->with('___');",php:"$subject = 'I like scandinavia: Sweden, Norway and Denmark';\n\npreg::replace('/[A-Z][a-z]+/', '___', $subject);",mdxType:"CodeTabs"}),Object(c.b)(i.b,{mdxType:"Result"},"'I like scandinavia: ___, ___ and ___'"),Object(c.b)("h3",{id:"limited-occurrences---only"},"Limited occurrences - ",Object(c.b)("inlineCode",{parentName:"h3"},"only()")),Object(c.b)(i.a,{tregx:"$subject = 'I like scandinavia: Sweden, Norway and Denmark';\n\npattern('[A-Z][a-z]+')->replace($subject)->only(2)->with('___');",php:"$subject = 'I like scandinavia: Sweden, Norway and Denmark';\n\npreg::replace('/[A-Z][a-z]+/', '___', $subject, 2);",mdxType:"CodeTabs"}),Object(c.b)(i.b,{mdxType:"Result"},"'I like scandinavia: ___, ___ and Denmark'"),Object(c.b)("p",null,"Read on to learn more about replacing with ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"replace-callback.md"}),"a callback"),"."),Object(c.b)("h2",{id:"regular-expression-references"},"Regular expression references"),Object(c.b)("p",null,"Normally, had you passed a replacement to ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.php.net/manual/en/function.preg-replace.php"}),Object(c.b)("inlineCode",{parentName:"a"},"preg_replace()")),", that contains a backslash or a dollar sign followed by a\nnumber (eg. ",Object(c.b)("inlineCode",{parentName:"p"},"\\1")," or ",Object(c.b)("inlineCode",{parentName:"p"},"$2"),") - that reference would be replaced by a corresponding capturing group (or by an empty string,\nif the group wasn't matched)."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"preg::replace('/(\\d+)cm/', '<$1>', 'I have 15cm and 192cm');\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"I have <15> and <192>\n")),Object(c.b)("p",null,"Resolving such references won't happen with T-Regx."),Object(c.b)("p",null,"This is done to relieve you from the ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"overview.md#brain-strain"}),Object(c.b)("strong",{parentName:"a"},"brain strain")),". A programmer should be able to merely\nreplace a string with a constant value without ","[cognitive load]"," about possible ",Object(c.b)("inlineCode",{parentName:"p"},"\\")," or ",Object(c.b)("inlineCode",{parentName:"p"},"$")," hiding somewhere."),Object(c.b)(i.a,{tregx:"pattern('(\\d+)cm')->replace('I have 15cm and 192cm')->all()->with('<$1>');",php:"preg::replace('/(\\d+)cm/', '<\\$1>', 'I have 15cm and 192cm');\n//                            \u2191\n// in T-Regx, special function is used to quote all references",mdxType:"CodeTabs"}),Object(c.b)(i.b,{text:!0,mdxType:"Result"},"I have <$1> and <$1>"),Object(c.b)("p",null,"You can be sure, what's put into ",Object(c.b)("inlineCode",{parentName:"p"},"with()")," will certainly be present unchanged in your final result."),Object(c.b)("p",null,"Some replacement strings containing a backslash or a dollar sign (like file system paths, URL addresses or even user input)\nmight interfere with logic and cause bugs that are very hard to find."),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Neither of types of references are resolved: ",Object(c.b)("inlineCode",{parentName:"p"},"$12"),", ",Object(c.b)("inlineCode",{parentName:"p"},"\\12")," nor ",Object(c.b)("inlineCode",{parentName:"p"},"${12}"),".")),Object(c.b)("h2",{id:"intentional-references"},"Intentional references"),Object(c.b)("p",null,"If you, however, would like to intentionally use regular expression references and have validated your input\nagainst ",Object(c.b)("em",{parentName:"p"},"an unexpected")," ",Object(c.b)("inlineCode",{parentName:"p"},"\\")," or ",Object(c.b)("inlineCode",{parentName:"p"},"$")," - feel free to use ",Object(c.b)("inlineCode",{parentName:"p"},"withReferences()")," which ",Object(c.b)("strong",{parentName:"p"},"will")," resolve replacement references."),Object(c.b)(i.a,{tregx:"pattern('(\\d+)cm')->replace('I have 15cm and 192cm')->all()->withReferences('<$1>');",php:"preg::replace('/(\\d+)cm/', '<$1>', 'I have 15cm and 192cm');\n//                            \u2191\n// using withReferences(), back references are preserved",mdxType:"CodeTabs"}),Object(c.b)(i.b,{text:!0,mdxType:"Result"},"I have <15> and <192>"))}b.isMDXComponent=!0},207:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},b=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),b=s(n),d=a,m=b["".concat(i,".").concat(d)]||b[d]||u[d]||c;return n?r.a.createElement(m,l({ref:t},p,{components:n})):r.a.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,i=new Array(c);i[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<c;p++)i[p]=n[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},209:function(e,t,n){"use strict";var a=n(0),r=n.n(a);t.a=function(e){return r.a.createElement("div",null,e.children)}},210:function(e,t,n){"use strict";var a=n(0),r=n.n(a),c=n(215);var i=function(){return Object(a.useContext)(c.a)},l=n(208),o=n.n(l),p=n(93),s=n.n(p);const b=37,u=39;t.a=function(e){const{block:t,children:n,defaultValue:c,values:l,groupId:p}=e,{tabGroupChoices:d,setTabGroupChoices:m}=i(),[f,h]=Object(a.useState)(c);if(null!=p){const e=d[p];null!=e&&e!==f&&h(e)}const j=e=>{h(e),null!=p&&m(p,e)},O=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:o()("tabs",{"tabs--block":t})},l.map(({value:e,label:t})=>r.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":f===e,className:o()("tab-item",s.a.tabItem,{"tab-item--active":f===e}),key:e,ref:e=>O.push(e),onKeyDown:e=>((e,t,n)=>{switch(n.keyCode){case u:((e,t)=>{const n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()})(e,t);break;case b:((e,t)=>{const n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()})(e,t)}})(O,e.target,e),onFocus:()=>j(e),onClick:()=>j(e)},t))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(n).filter(e=>e.props.value===f)[0]))}},211:function(e,t,n){"use strict";var a=n(212),r={};r[n(11)("toStringTag")]="z",r+""!="[object z]"&&n(19)(Object.prototype,"toString",(function(){return"[object "+a(this)+"]"}),!0)},212:function(e,t,n){var a=n(53),r=n(11)("toStringTag"),c="Arguments"==a(function(){return arguments}());e.exports=function(e){var t,n,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(n){}}(t=Object(e),r))?n:c?a(t):"Object"==(i=a(t))&&"function"==typeof t.callee?"Arguments":i}},213:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));n(12),n(52),n(211);function a(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var r=n(5),c=n(0),i=n.n(c),l=n(210),o=n(209),p=n(216),s=n(94),b=n.n(s);class u extends i.a.Component{render(){return i.a.createElement("div",{className:b.a.code},i.a.createElement(p.a,{className:`language-${this.language}`},this.code))}get language(){return this.props.language||"php"}get code(){let e=this.props.children;if("string"==typeof e)return e;if(Array.isArray(e)&&e.every(e=>"string"==typeof e))return e.join("");throw console.log(this.props.children),"Unexpected child of <Code>"}}var d=function(e){function t(){return e.apply(this,arguments)||this}var n,c,p;return Object(r.a)(t,e),t.prototype.render=function(){return i.a.createElement(i.a.Fragment,null,i.a.createElement(l.a,{defaultValue:"t-regx",values:this.values},this.props.tregx&&i.a.createElement(o.a,{value:"t-regx"},i.a.createElement(u,null,this.props.tregx)),this.props.php&&i.a.createElement(o.a,{value:"php"},i.a.createElement(u,null,this.props.php))))},n=t,(c=[{key:"values",get:function(){return[this.props.tregx?{label:"T-Regx",value:"t-regx"}:{},this.props.php?{label:"PHP",value:"php"}:{}].filter((function(e){return e.value}))}}])&&a(n.prototype,c),p&&a(n,p),t}(i.a.Component),m=n(95),f=n.n(m),h=function(e){var t=e.text,n=e.children;return i.a.createElement("div",{className:f.a.result},i.a.createElement(u,{language:t?"text":"php"},n))}}}]);