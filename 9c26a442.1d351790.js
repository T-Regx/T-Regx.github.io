(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{167:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return b})),t.d(a,"rightToc",(function(){return p})),t.d(a,"default",(function(){return u}));t(215);var n=t(207),l=t(210),r=t(211);function c(){return(c=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}const b={id:"is-valid",title:"Validate a pattern"},p=[],i={rightToc:p},o="wrapper";function u({components:e,...a}){return Object(n.b)(o,c({},i,a,{components:e,mdxType:"MDXLayout"}),Object(n.b)("p",null,"You can check whether a pattern is valid with ",Object(n.b)("inlineCode",{parentName:"p"},"pattern()->valid()")," method."),Object(n.b)(l.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"}],mdxType:"Tabs"},Object(n.b)(r.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),"pattern('I am a valid pattern')->valid();\n")))),Object(n.b)("div",{className:"output-block"},Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),"true\n"))),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"Remember, ",Object(n.b)("inlineCode",{parentName:"p"},"pattern()->valid()")," doesn't throw any exception nor issues any warnings. It only returns ",Object(n.b)("inlineCode",{parentName:"p"},"true"),"/",Object(n.b)("inlineCode",{parentName:"p"},"false"),".")),Object(n.b)(l.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"}],mdxType:"Tabs"},Object(n.b)(r.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),"pattern('I am an (( invalid }} pattern')->valid();\n")))),Object(n.b)("div",{className:"output-block"},Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),"false\n"))),Object(n.b)("h1",{id:"old-school-patterns"},"Old-school patterns"),Object(n.b)("p",null,"Undelimited patterns can be validated with ",Object(n.b)("inlineCode",{parentName:"p"},"pattern()"),"/",Object(n.b)("inlineCode",{parentName:"p"},"Pattern::of()"),". To validate old-school patterns (e.g. ",Object(n.b)("inlineCode",{parentName:"p"},"/Hello/i"),"), use ",Object(n.b)("inlineCode",{parentName:"p"},"Pattern::pcre()"),":"),Object(n.b)(l.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"}],mdxType:"Tabs"},Object(n.b)(r.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),"Pattern::pcre('/I am an valid pattern/m')->valid();\n")))),Object(n.b)("div",{className:"output-block"},Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),"true\n"))))}u.isMDXComponent=!0},210:function(e,a,t){"use strict";var n=t(0),l=t.n(n),r=t(212),c=t.n(r);a.a=function(e){const{block:a,children:t,defaultValue:r,values:b}=e,[p,i]=Object(n.useState)(r);return l.a.createElement("div",null,l.a.createElement("ul",{className:c()("tabs",{"tabs--block":a})},b.map(({value:e,label:a})=>l.a.createElement("li",{className:c()("tab-item",{"tab-item--active":p===e}),key:e,onClick:()=>i(e)},a))),l.a.createElement("div",{className:"margin-vert--md"},n.Children.toArray(t).filter(e=>e.props.value===p)[0]))}},211:function(e,a,t){"use strict";var n=t(0),l=t.n(n);a.a=function(e){return l.a.createElement("div",null,e.children)}}}]);