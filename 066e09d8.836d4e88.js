(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{177:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),l=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=l(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,o=e.parentName,p=b(e,["components","mdxType","originalType","parentName"]),s=l(a),m=n,d=s["".concat(o,".").concat(m)]||s[m]||u[m]||c;return a?r.a.createElement(d,i(i({ref:t},p),{},{components:a})):r.a.createElement(d,i({ref:t},p))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,o=new Array(c);o[0]=m;var i={};for(var b in t)hasOwnProperty.call(t,b)&&(i[b]=t[b]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var p=2;p<c;p++)o[p]=a[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},69:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return l}));var n=a(2),r=a(6),c=(a(0),a(177)),o={title:"Release 0.9.13",author:"Daniel Wilkowski"},i={permalink:"/blog/2020/12/08/release-0.9.13",source:"@site/blog/2020-12-08-release-0.9.13.md",description:"Bueno!",date:"2020-12-08T00:00:00.000Z",tags:[],title:"Release 0.9.13",readingTime:.965,truncated:!1,nextItem:{title:"Release 0.9.12 Oopsie",permalink:"/blog/2020/11/04/release-0.9.12-oopsie"}},b=[],p={rightToc:b};function l(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Bueno!"),Object(c.b)("p",null,"We're making big steps towards PHP 8!"),Object(c.b)("p",null,"In this release, apart from some cool features, we're deprecating ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match"}),Object(c.b)("inlineCode",{parentName:"a"},"Match")),"/",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/replace-match-details"}),Object(c.b)("inlineCode",{parentName:"a"},"ReplaceMatch")),", since\nPHP8 brings new ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://wiki.php.net/rfc/match_expression_v2"}),Object(c.b)("inlineCode",{parentName:"a"},"match"))," keyword, and on PHP8 ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match"}),Object(c.b)("inlineCode",{parentName:"a"},"Match"))," is a parse error. Since now, you whould\nbe using ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match"}),Object(c.b)("inlineCode",{parentName:"a"},"Detail")),"/",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/replace-match-details"}),Object(c.b)("inlineCode",{parentName:"a"},"ReplaceDetail"))," instead."),Object(c.b)("p",null,"We're in a process of rewriting our documentation with the changes and suggestions to use ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match"}),Object(c.b)("inlineCode",{parentName:"a"},"Detail"))," now."),Object(c.b)("p",null,"From now on, the first couple of versions include deprecated ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match"}),Object(c.b)("inlineCode",{parentName:"a"},"Match")),"/",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/replace-match-details"}),Object(c.b)("inlineCode",{parentName:"a"},"ReplaceMatch")),", as well\nas new ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match"}),Object(c.b)("inlineCode",{parentName:"a"},"Detail")),"/",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/replace-match-details"}),Object(c.b)("inlineCode",{parentName:"a"},"ReplaceDetail")),", so there's some time to update. We'd wish to keep the deprecation\nforever, to keep backwards compatibility but that's impossible! :/ There's an ugly ultimatum."),Object(c.b)("p",null,"We can either:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Keep ",Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/match"}),Object(c.b)("inlineCode",{parentName:"a"},"Match")),", deprecated or not; only on PHP7"),Object(c.b)("li",{parentName:"ul"},"Run it on PHP8, but without ",Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/match"}),Object(c.b)("inlineCode",{parentName:"a"},"Match")))),Object(c.b)("p",null,"We can't declare ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match"}),Object(c.b)("inlineCode",{parentName:"a"},"Match"))," for backwards compatibility, because then we couldn't run it on PHP8. So once\nwe start supporting PHP8, we stop supporting deprecated ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match"}),Object(c.b)("inlineCode",{parentName:"a"},"Match")),". We're sorry there's no other way\naround. "),Object(c.b)("p",null,"In the future, we'll release version ",Object(c.b)("inlineCode",{parentName:"p"},"0.10.0"),", and it will support PHP8 fully; but there\nwill no longer be ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match"}),Object(c.b)("inlineCode",{parentName:"a"},"Match")),", only ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match"}),Object(c.b)("inlineCode",{parentName:"a"},"Detail")),"."),Object(c.b)("p",null,"As always, everything is described in ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/T-Regx/T-Regx/blob/develop/ChangeLog.md"}),"ChangeLog.md")," on github."))}l.isMDXComponent=!0}}]);