(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{179:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return s}));var n=a(1),r=(a(0),a(204)),c=a(208);const o={id:"match-first",title:"First occurrence"},i={id:"match-first",title:"First occurrence",description:"Matching a first occurrence in a string is the most common use-case.",source:"@site/../docs/match-first.mdx",permalink:"/docs/match-first",lastUpdatedAt:1586997896,sidebar:"docs",previous:{title:"Match a subject",permalink:"/docs/match"},next:{title:"Optional matches (Find first)",permalink:"/docs/match-find-first"}},l=[{value:"Return from <code>first()</code>",id:"return-from-first",children:[]},{value:"Use <code>first()</code> with callback",id:"use-first-with-callback",children:[{value:"Match details",id:"match-details",children:[]},{value:"Groups in match",id:"groups-in-match",children:[]},{value:"Return value",id:"return-value",children:[]},{value:"Variable callbacks",id:"variable-callbacks",children:[]},{value:"Arbitrary return types",id:"arbitrary-return-types",children:[]}]},{value:"<code>findFirst()</code>",id:"findfirst",children:[]}],p={rightToc:l};function s({components:e,...t}){return Object(r.b)("wrapper",Object(n.a)({},p,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Matching a first occurrence in a string is the most common use-case."),Object(r.b)("h2",{id:"return-from-first"},"Return from ",Object(r.b)("inlineCode",{parentName:"h2"},"first()")),Object(r.b)("p",null,"You can get the first occurrence of a pattern in a subject by calling ",Object(r.b)("inlineCode",{parentName:"p"},"first()"),"."),Object(r.b)(c.a,{tregx:"pattern('[0-9]+')->match(\"I'm 19 years old\")->first();",php:"if (preg::match('/[0-9]+/', \"I'm 19 years old\", $match)) {\n    return $match[0];\n}\nthrow new SubjectNotMatchedException();",mdxType:"CodeTabs"}),Object(r.b)(c.b,{mdxType:"Result"},"'19'"),Object(r.b)("p",null,"If a match is ",Object(r.b)("strong",{parentName:"p"},"not found")," in a subject, ",Object(r.b)("inlineCode",{parentName:"p"},"SubjectNotMatchedException")," is thrown. This is done to relieve you from the\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"overview.md#brain-strain"}),Object(r.b)("strong",{parentName:"a"},"brain strain")),". It's much easier to develop an application and ",Object(r.b)("em",{parentName:"p"},"just assume")," that this\nmethod ",Object(r.b)("strong",{parentName:"p"},"has")," to return a value and go on. No more bothers about empty arrays and empty strings, or a possible\n",Object(r.b)("inlineCode",{parentName:"p"},"null"),"/",Object(r.b)("inlineCode",{parentName:"p"},"false")," hiding somewhere."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"If you would like to control the subject that ",Object(r.b)("strong",{parentName:"p"},"isn't matched")," with your pattern though;\nyou can do it ",Object(r.b)("strong",{parentName:"p"},"explicitly")," with ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#findfirst"}),Object(r.b)("inlineCode",{parentName:"a"},"findFirst()"))," (and ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-find-first#orreturn"}),Object(r.b)("inlineCode",{parentName:"a"},"orReturn()")),", ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-find-first#orelse"}),Object(r.b)("inlineCode",{parentName:"a"},"orElse()")),", ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-find-first#orthrow"}),Object(r.b)("inlineCode",{parentName:"a"},"orThrow()")),").")),Object(r.b)("h2",{id:"use-first-with-callback"},"Use ",Object(r.b)("inlineCode",{parentName:"h2"},"first()")," with callback"),Object(r.b)("p",null,"You can call an anonymous function for the first matched occurrence. In this example, we'll print the matched text to the\nstandard output."),Object(r.b)(c.a,{tregx:"pattern('\\w+')->match('Apples are cool')->first(function (string $match) {\n    echo \"I matched $match\";\n});",php:"if (preg::match('/\\w+/', 'Apples are cool', $match)) {\n    echo 'I matched ' . $match[0];\n}\nelse {\n    throw new SubjectNotMatchedException();\n}",mdxType:"CodeTabs"}),Object(r.b)(c.b,{text:!0,mdxType:"Result"},"I matched Apples"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Casting ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-details"}),Object(r.b)("inlineCode",{parentName:"a"},"Match"))," to a string is the same as calling a ",Object(r.b)("inlineCode",{parentName:"p"},"text()")," method.")),Object(r.b)("h3",{id:"match-details"},"Match details"),Object(r.b)("p",null,"With ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-details"}),Object(r.b)("inlineCode",{parentName:"a"},"Match"))," details, you can gain access to useful information about the matched occurrence."),Object(r.b)(c.a,{tregx:"pattern('\\w+')->match(\"Apples are cool\")->first(function (Match $match) {\n    $subject = $match->subject();\n    echo \"Match '$match' was matched inside '$subject'.\";\n});",php:"$subject = \"Apples are cool\";\nif (preg::match('/\\w+/', $subject, $match)) {\n    $text = $match[0];\n    echo \"Match '$text' was matched inside '$subject'.\";\n} \nelse {\n    throw new SubjectNotMatchedException();\n}",mdxType:"CodeTabs"}),Object(r.b)(c.b,{text:!0,mdxType:"Result"},"Match 'Apples' was matched inside 'Apples are cool'."),Object(r.b)("p",null,"You can read more extensively about ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-details"}),Object(r.b)("inlineCode",{parentName:"a"},"Match"))," on ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-details"}),Object(r.b)("inlineCode",{parentName:"a"},"Match")," details")," page."),Object(r.b)("h3",{id:"groups-in-match"},"Groups in match"),Object(r.b)("p",null,"Retrieving capturing groups from a match is really simple."),Object(r.b)(c.a,{tregx:"pattern('(?<capital>[A-Z])')->match('hello there, General Kenobi')->first(function (Match $match) {\n    $capital = $match->group('capital')->text();\n\n    return $capital;\n});",php:"if (preg::match('~(?<capital>[A-Z])[a-z]+~', 'hello there, General Kenobi', $match)) {\n    $capital = $match['capital'][0];\n\n    return $capital;\n}\nelse {\n    throw new SubjectNotMatchedException();\n}",mdxType:"CodeTabs"}),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-php"}),"'G'\n")),Object(r.b)("p",null,"Of course, ",Object(r.b)("inlineCode",{parentName:"p"},"first()")," callback will only be invoked if your pattern matches the subject."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"You can learn more about groups on ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-groups"}),"Capturing Group")," page. ")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Even more, you can visit ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"match-group.md"}),"Inline groups")," and use familiar ",Object(r.b)("inlineCode",{parentName:"p"},"all()"),", ",Object(r.b)("inlineCode",{parentName:"p"},"first()"),", ",Object(r.b)("inlineCode",{parentName:"p"},"only()")," and ",Object(r.b)("inlineCode",{parentName:"p"},"offsets()"),"\nmethods on groups. ")),Object(r.b)("h3",{id:"return-value"},"Return value"),Object(r.b)("p",null,"It's also possible to return your custom value from within ",Object(r.b)("inlineCode",{parentName:"p"},"first()")," callback. This custom value will be then returned\nfrom ",Object(r.b)("inlineCode",{parentName:"p"},"first()")," function."),Object(r.b)(c.a,{tregx:"$first = pattern('\\w+')->match('Apples are cool')->first(function (Match $match) {\n    return [\n        $match->text(), \n        strtoupper($match->text()),\n        lcfirst($match->text())\n    ];\n});\n\nreturn $first;",php:"if (preg::match('/\\w+/', 'Apples are cool', $match)) {\n    $first = [\n        $match[0],\n        strtoupper($match[0]),\n        lcfirst($match[0])\n    ];\n}\nelse {\n    throw new SubjectNotMatchedException();\n}\n\nreturn $first;",mdxType:"CodeTabs"}),Object(r.b)(c.b,{mdxType:"Result"},"['Apples', 'APPLES', 'apples']"),Object(r.b)("h3",{id:"variable-callbacks"},"Variable callbacks"),Object(r.b)("p",null,"You can call ",Object(r.b)("inlineCode",{parentName:"p"},"first()")," for any valid PHP ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.php.net/manual/en/language.types.callable.php"}),Object(r.b)("inlineCode",{parentName:"a"},"callable"))," which accepts one string parameter (or no parameters)."),Object(r.b)(c.a,{tregx:"return pattern('\\w+')->match('Apples are cool')->first('strtoupper');",php:"if (preg::match('/\\w+/', 'Apples are cool', $match)) {\n    return call_user_func('strtoupper', $match[0]);\n}\nelse {\n    throw new SubjectNotMatchedException();\n}",mdxType:"CodeTabs"}),Object(r.b)(c.b,{mdxType:"Result"},"'APPLES'"),Object(r.b)("p",null,"In this example, ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-details"}),Object(r.b)("inlineCode",{parentName:"a"},"Match"))," will be cast to string, which is the same as calling ",Object(r.b)("inlineCode",{parentName:"p"},"Match.text()")," method."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Of course, ",Object(r.b)("inlineCode",{parentName:"p"},"strtoupper")," (or any other callback) is only invoked ",Object(r.b)("strong",{parentName:"p"},"if")," your subject is matched with the pattern.")),Object(r.b)("h3",{id:"arbitrary-return-types"},"Arbitrary return types"),Object(r.b)("p",null,"From within ",Object(r.b)("inlineCode",{parentName:"p"},"first()")," callback, you can return any value:"),Object(r.b)(c.a,{tregx:"return pattern('\\w+')->match('Apples are cool')->first('str_split');",php:"if (preg::match('/\\w+/', 'Apples are cool', $match)) {\n    return call_user_func('str_split', $match[0]);\n}\nelse {\n    throw new SubjectNotMatchedException();\n}",mdxType:"CodeTabs"}),Object(r.b)(c.b,{mdxType:"Result"},"['A', 'p', 'p', 'l', 'e', 's']"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"first()")," callback accepts all return types, including: numbers, objects, arrays, booleans and ",Object(r.b)("inlineCode",{parentName:"p"},"null"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-php"}),"$pattern = '(?<value>\\d+)(?<unit>cm|mm)';\n$subject = '192mm and 168cm or 18mm and 12cm';\n\npattern($pattern)->match($subject)->first();                 // '192mm'\npattern($pattern)->match($subject)->first('str_split');      // ['1', '9', '2', 'm', 'm']\npattern($pattern)->match($subject)->first('strlen')          // 5\n")),Object(r.b)("h2",{id:"findfirst"},Object(r.b)("inlineCode",{parentName:"h2"},"findFirst()")),Object(r.b)("p",null,"This method allows you to explicitly specify how to handle an unmatched subject. Just chain ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-find-first"}),Object(r.b)("inlineCode",{parentName:"a"},"findFirst()"))," with\none of the following ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-find-first#orreturn"}),Object(r.b)("inlineCode",{parentName:"a"},"orReturn()")),", ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-find-first#orelse"}),Object(r.b)("inlineCode",{parentName:"a"},"orElse()"))," or ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-find-first#orthrow"}),Object(r.b)("inlineCode",{parentName:"a"},"orThrow()")),"."),Object(r.b)(c.a,{tregx:"echo pattern('w+')->match('Dog')\n    ->findFirst(function (Match $match) {\n        return \"Yay $match\";\n    })\n    ->orReturn('Aw, man :/');",php:"if (preg::match('/w+/', 'Dog', $match)) {\n    echo \"Yay {$match[0]}\";\n}\nelse {\n    echo 'Aw, man :/';\n}",mdxType:"CodeTabs"}),Object(r.b)(c.b,{text:!0,mdxType:"Result"},"Yay Dog"),Object(r.b)("hr",null),Object(r.b)("p",null,"Read on to learn more about ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-find-first"}),Object(r.b)("inlineCode",{parentName:"a"},"findFirst()")),"."))}s.isMDXComponent=!0},204:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return h}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i({},t,{},e)),a},b=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),b=s(a),m=n,h=b["".concat(o,".").concat(m)]||b[m]||u[m]||c;return a?r.a.createElement(h,i({ref:t},p,{components:a})):r.a.createElement(h,i({ref:t},p))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,o=new Array(c);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var p=2;p<c;p++)o[p]=a[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},206:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){return r.a.createElement("div",null,e.children)}},207:function(e,t,a){"use strict";var n=a(0),r=a.n(n),c=a(210);var o=function(){return Object(n.useContext)(c.a)},i=a(205),l=a.n(i),p=a(93),s=a.n(p);const b=37,u=39;t.a=function(e){const{block:t,children:a,defaultValue:c,values:i,groupId:p}=e,{tabGroupChoices:m,setTabGroupChoices:h}=o(),[d,f]=Object(n.useState)(c);if(null!=p){const e=m[p];null!=e&&e!==d&&f(e)}const j=e=>{f(e),null!=p&&h(p,e)},O=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:l()("tabs",{"tabs--block":t})},i.map(({value:e,label:t})=>r.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":d===e,className:l()("tab-item",s.a.tabItem,{"tab-item--active":d===e}),key:e,ref:e=>O.push(e),onKeyDown:e=>((e,t,a)=>{switch(a.keyCode){case u:((e,t)=>{const a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()})(e,t);break;case b:((e,t)=>{const a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()})(e,t)}})(O,e.target,e),onFocus:()=>j(e),onClick:()=>j(e)},t))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter(e=>e.props.value===d)[0]))}},208:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return h}));a(12);var n=a(0),r=a.n(n),c=a(207),o=a(206),i=a(211),l=a(94),p=a.n(l);class s extends r.a.Component{render(){return r.a.createElement("div",{className:p.a.code},r.a.createElement(i.a,{className:"language-"+this.language},this.code))}get language(){return this.props.language||"php"}get code(){let e=this.props.children;if("string"==typeof e)return e;if(Array.isArray(e)&&e.every(e=>"string"==typeof e))return e.join("");throw console.log(this.props.children),"Unexpected child of <Code>"}}class b extends r.a.Component{render(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(c.a,{defaultValue:"t-regx",values:this.values},this.props.tregx&&r.a.createElement(o.a,{value:"t-regx"},r.a.createElement(s,null,this.props.tregx)),this.props.php&&r.a.createElement(o.a,{value:"php"},r.a.createElement(s,null,this.props.php))))}get values(){return[this.props.tregx?{label:"T-Regx",value:"t-regx"}:{},this.props.php?{label:"PHP",value:"php"}:{}].filter(e=>e.value)}}var u=a(95),m=a.n(u),h=({text:e,children:t})=>r.a.createElement("div",{className:m.a.result},r.a.createElement(s,{language:e?"text":"php"},t))}}]);