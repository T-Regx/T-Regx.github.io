(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{126:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return i})),t.d(a,"rightToc",(function(){return b})),t.d(a,"default",(function(){return m}));t(211);var n=t(207),l=t(208),r=t(209);function c(){return(c=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}const i={id:"replace",title:"Replacing a string"},b=[{value:"Limiting replacements",id:"limiting-replacements",children:[]}],p={rightToc:b},o="wrapper";function m({components:e,...a}){return Object(n.b)(o,c({},p,a,{components:e,mdxType:"MDXLayout"}),Object(n.b)("p",null,"Using ",Object(n.b)("inlineCode",{parentName:"p"},"pattern()->replace()")," you can:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Limit replacements with:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"replace()->first()")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"replace()->all()")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"replace()->only(int)")))),Object(n.b)("li",{parentName:"ul"},"replace with a constant value - ",Object(n.b)("a",c({parentName:"li"},{href:"/docs/replace-with"}),Object(n.b)("inlineCode",{parentName:"a"},"with()")),"/",Object(n.b)("a",c({parentName:"li"},{href:"/docs/replace-with"}),Object(n.b)("inlineCode",{parentName:"a"},"withReferences()"))),Object(n.b)("li",{parentName:"ul"},"replace with a computed value - ",Object(n.b)("a",c({parentName:"li"},{href:"/docs/replace-callback"}),Object(n.b)("inlineCode",{parentName:"a"},"callback()"))),Object(n.b)("li",{parentName:"ul"},"replace based on an associative array - ",Object(n.b)("a",c({parentName:"li"},{href:"/docs/replace-by-map"}),Object(n.b)("inlineCode",{parentName:"a"},"by()->map()"))),Object(n.b)("li",{parentName:"ul"},"replace with a capturing group - ",Object(n.b)("a",c({parentName:"li"},{href:"/docs/replace-by-group"}),Object(n.b)("inlineCode",{parentName:"a"},"by()->group()"))),Object(n.b)("li",{parentName:"ul"},"handle subjects that don't match the pattern for replacements - ",Object(n.b)("inlineCode",{parentName:"li"},"orElse()"),"/",Object(n.b)("inlineCode",{parentName:"li"},"orReturn()"),"/",Object(n.b)("inlineCode",{parentName:"li"},"orThrow()"))),Object(n.b)("h2",{id:"limiting-replacements"},"Limiting replacements"),Object(n.b)("p",null,"After ",Object(n.b)("inlineCode",{parentName:"p"},"replace()"),", you need to explicitly use one of ",Object(n.b)("inlineCode",{parentName:"p"},"first()"),"/",Object(n.b)("inlineCode",{parentName:"p"},"all()"),"/",Object(n.b)("inlineCode",{parentName:"p"},"only(int)")," methods, to express how many\nreplacements should be done."),Object(n.b)(l.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(r.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),"$subject = \"I'm 19, I have 192cm and I was born in 1999\";\n\npattern('\\d+')->replace($subject)->first()->with('___');\npattern('\\d+')->replace($subject)->only(2)->with('___');\npattern('\\d+')->replace($subject)->all()->with('___');\n"))),Object(n.b)(r.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),"$subject = \"I'm 19, I have 192cm and I was born in 1999\";\n\npreg_replace('/\\d+/', '___', $subject, 1);\npreg_replace('/\\d+/', '___', $subject, 2);\npreg_replace('/\\d+/', '___', $subject);\n")))),Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),'"I\'m ___, I have 192cm and I was born in 1999"\n"I\'m ___, I have ___cm and I was born in 1999"\n"I\'m ___, I have ___cm and I was born in ___"\n')),Object(n.b)("hr",null),Object(n.b)("p",null,"Read on to learn more about replacing with ",Object(n.b)("a",c({parentName:"p"},{href:"/docs/replace-with"}),"a constant value"),"."))}m.isMDXComponent=!0},208:function(e,a,t){"use strict";var n=t(0),l=t.n(n),r=t(210),c=t.n(r);a.a=function(e){const{block:a,children:t,defaultValue:r,values:i}=e,[b,p]=Object(n.useState)(r);return l.a.createElement("div",null,l.a.createElement("ul",{className:c()("tabs",{"tabs--block":a})},i.map(({value:e,label:a})=>l.a.createElement("li",{className:c()("tab-item",{"tab-item--active":b===e}),key:e,onClick:()=>p(e)},a))),l.a.createElement("div",{className:"margin-vert--md"},n.Children.toArray(t).filter(e=>e.props.value===b)[0]))}},209:function(e,a,t){"use strict";var n=t(0),l=t.n(n);a.a=function(e){return l.a.createElement("div",null,e.children)}}}]);