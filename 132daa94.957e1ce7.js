(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{104:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return u}));n(227),n(12),n(53),n(217),n(219),n(0);var a=n(207);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var i={title:"Match details update",author:"Daniel Wilkowski",authorFBID:0x5af34da0d14b},o=[],c={rightToc:o},s="wrapper";function u(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(s,r({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Most changes in T-Regx since the last Blog post were to ",Object(a.b)("a",r({parentName:"p"},{href:"/docs/match-details"}),Object(a.b)("inlineCode",{parentName:"a"},"Match")," details"),". We\nadded ",Object(a.b)("a",r({parentName:"p"},{href:"/docs/match-details#user-data"}),"user data")," (",Object(a.b)("a",r({parentName:"p"},{href:"/docs/match-details#user-data"}),Object(a.b)("inlineCode",{parentName:"a"},"getUserData()"),"/",Object(a.b)("inlineCode",{parentName:"a"},"setUserData()")),")\nwhich can be used in chained calls (e.g. ",Object(a.b)("inlineCode",{parentName:"p"},"filter()->map()"),")."),Object(a.b)("p",null,"The second change is ",Object(a.b)("a",r({parentName:"p"},{href:"/docs/match-details#integers"}),Object(a.b)("inlineCode",{parentName:"a"},"isInt()"),"/",Object(a.b)("inlineCode",{parentName:"a"},"parseInt()")),' which allow you to handle "real" integers safetly -\nwithout the fear of "PHP smart" integers (e.g. PHP thinks that ',Object(a.b)("inlineCode",{parentName:"p"},'"1e3"')," is ",Object(a.b)("inlineCode",{parentName:"p"},"1000"),"). T-Regx understands that robust applications\ncan't allow numbers to be ",Object(a.b)("inlineCode",{parentName:"p"},"10e4")," - it should be treated as an invalid integer by default!"),Object(a.b)("p",null,"And last, ",Object(a.b)("inlineCode",{parentName:"p"},"Match.group(int|string)")," is now validated (T-Regx was waiting a bit for this change!). We believe that using an\ninvalid group name is a sign of a bug, so using ",Object(a.b)("inlineCode",{parentName:"p"},"group(-1)")," or ",Object(a.b)("inlineCode",{parentName:"p"},"group('!@#')")," now throws ",Object(a.b)("inlineCode",{parentName:"p"},"\\InvalidArgumentException"),",\nas it's more suitable than assuming that ",Object(a.b)("inlineCode",{parentName:"p"},"-1")," is just an unmatched group."))}u.isMDXComponent=!0},217:function(e,t,n){"use strict";var a=n(218),r={};r[n(11)("toStringTag")]="z",r+""!="[object z]"&&n(18)(Object.prototype,"toString",(function(){return"[object "+a(this)+"]"}),!0)},218:function(e,t,n){var a=n(54),r=n(11)("toStringTag"),i="Arguments"==a(function(){return arguments}());e.exports=function(e){var t,n,o;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(n){}}(t=Object(e),r))?n:i?a(t):"Object"==(o=a(t))&&"function"==typeof t.callee?"Arguments":o}},219:function(e,t,n){var a=n(52),r=n(34);n(220)("keys",(function(){return function(e){return r(a(e))}}))},220:function(e,t,n){var a=n(51),r=n(17),i=n(33);e.exports=function(e,t){var n=(r.Object||{})[e]||Object[e],o={};o[e]=t(n),a(a.S+a.F*i((function(){n(1)})),"Object",o)}},227:function(e,t,n){var a=n(51);a(a.S+a.F,"Object",{assign:n(228)})},228:function(e,t,n){"use strict";var a=n(34),r=n(229),i=n(230),o=n(52),c=n(55),s=Object.assign;e.exports=!s||n(33)((function(){var e={},t={},n=Symbol(),a="abcdefghijklmnopqrst";return e[n]=7,a.split("").forEach((function(e){t[e]=e})),7!=s({},e)[n]||Object.keys(s({},t)).join("")!=a}))?function(e,t){for(var n=o(e),s=arguments.length,u=1,b=r.f,p=i.f;s>u;)for(var l,d=c(arguments[u++]),f=b?a(d).concat(b(d)):a(d),h=f.length,g=0;h>g;)p.call(d,l=f[g++])&&(n[l]=d[l]);return n}:s},229:function(e,t){t.f=Object.getOwnPropertySymbols},230:function(e,t){t.f={}.propertyIsEnumerable}}]);