(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{251:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));n(51),n(24),n(19),n(20),n(52),n(0);var r=n(275);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var o={title:"Release 0.9.4 - Exception changes and groupBy()",author:"Daniel Wilkowski",authorFBID:0x5af34da0d14b},c=[{value:"Exceptions",id:"exceptions",children:[]},{value:"<code>groupBy()</code>",id:"groupby",children:[]}],i={rightToc:c};function p(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(r.b)("wrapper",a({},i,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"This release brings updates in exceptions (namespaces, new detailed exceptions) and a ",Object(r.b)("inlineCode",{parentName:"p"},"groupBy()")," method."),Object(r.b)("h3",{id:"exceptions"},"Exceptions"),Object(r.b)("p",null,"In previous release we renamed ",Object(r.b)("inlineCode",{parentName:"p"},"SafeRegexException")," to ",Object(r.b)("inlineCode",{parentName:"p"},"PregException"),". In this, we're renaming ",Object(r.b)("inlineCode",{parentName:"p"},"CleanRegexException")," to ",Object(r.b)("inlineCode",{parentName:"p"},"PatternException"),". So now, those two general exceptions sync nicely with their base methods:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-php"}),"try {\n  return preg::match('/Foo/', $subject);\n} catch (PregException $e) {\n")),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-php"}),"try {\n  return pattern('Foo')->test($subject);\n} catch (PatternException $e) {\n")),Object(r.b)("p",null,"They both extend ",Object(r.b)("inlineCode",{parentName:"p"},"RegexException")," - base for all exceptions thrown by T-Regx. So that's the first thing."),Object(r.b)("p",null,"The second exception update - previously, every exception thrown based on ",Object(r.b)("inlineCode",{parentName:"p"},"preg_last_error()")," method was ",Object(r.b)("inlineCode",{parentName:"p"},"RuntimePregException"),". Now, each error has a dedicated exception, which can be caught separately:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-php"}),"try {\n  return preg::match($pattern, $subject);\n} catch (BacktrackLimitPregException $exception) {\n} catch (Utf8OffsetPregException $exception) {\n")),Object(r.b)("p",null,"The detailed list of changes is in ",Object(r.b)("a",a({parentName:"p"},{href:"https://github.com/T-Regx/T-Regx/blob/master/ChangeLog.md"}),"ChangeLog.md"),"."),Object(r.b)("h3",{id:"groupby"},Object(r.b)("inlineCode",{parentName:"h3"},"groupBy()")),Object(r.b)("p",null,"This release also comes with a brand new method - ",Object(r.b)("inlineCode",{parentName:"p"},"groupBy()")," which groups matches by a capturing group (name or index). It can match strings, offsets and also map them with ",Object(r.b)("inlineCode",{parentName:"p"},"map()")," and ",Object(r.b)("inlineCode",{parentName:"p"},"flatMap()"),". Additionally, it can be chained with ",Object(r.b)("inlineCode",{parentName:"p"},"filter()")," to leave out unwanted matches:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-php"}),"return pattern('(\\d)(?<unit>cm|mm)')->match($strings)\n  ->filter(function (Match $match) {\n    return $match->group(1)->toInt() % 2 == 0;\n  })\n  ->groupBy('unit')\n  ->map(function (Match $match) {\n    return $match->group(1)->toInt() * 100;\n  });\n")))}p.isMDXComponent=!0},275:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},b=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),b=u(n),m=r,d=b["".concat(c,".").concat(m)]||b[m]||s[m]||o;return n?a.a.createElement(d,i({ref:t},l,{components:n})):a.a.createElement(d,i({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var l=2;l<o;l++)c[l]=n[l];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);