(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{159:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return p})),t.d(n,"default",(function(){return u}));var a=t(1),r=t(6),o=(t(0),t(207)),i=t(213),c=(t(210),t(209),{id:"replace-by-map",title:"Replace by map"}),l={id:"replace-by-map",title:"Replace by map",description:"import {CodeTabs, Result} from './code';\r",source:"@site/..\\docs\\replace-by-map.mdx",permalink:"/docs/replace-by-map",lastUpdatedAt:1586997896,sidebar:"docs",previous:{title:"Replace by group",permalink:"/docs/replace-by-group"},next:{title:"Handling user input",permalink:"/docs/handling-user-input"}},p=[{value:"Standard map",id:"standard-map",children:[{value:"Superfluous matches",id:"superfluous-matches",children:[]},{value:"Ignored replacements",id:"ignored-replacements",children:[]}]},{value:"Groups",id:"groups",children:[]}],s={rightToc:p};function u(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"There are cases when you have to use more than one replacement, but you also don't need ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/match-details"}),Object(o.b)("inlineCode",{parentName:"a"},"Match"))," details or\nany replacement logic, really, so both ",Object(o.b)("inlineCode",{parentName:"p"},"with()")," and ",Object(o.b)("inlineCode",{parentName:"p"},"callback()")," are a little unfit."),Object(o.b)("p",null,"Replacing by map allows T-Regx to save a little performance overhead, by not creating ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/match-details"}),Object(o.b)("inlineCode",{parentName:"a"},"Match"))," object."),Object(o.b)("h2",{id:"standard-map"},"Standard map"),Object(o.b)(i.a,{tregx:"$message = 'My words: \"mp3\", \"mp4\", \"gif\"';\n\npattern('\\b\\w{3}\\b')->replace($message)->all()->by()->map([\n    'mp3' => 'Audio file',\n    'mp4' => 'Video file',\n    'gif' => 'Animation'\n]);",php:"$message = 'My words: \"mp3\", \"mp4\", \"gif\"';\n\npreg::replace_callback('/\\b\\w{3}\\b/', function ($match) {\n    $map = [\n        'mp3' => 'Audio file',\n        'mp4' => 'Video file',\n        'gif' => 'Animation'\n    ];\n    if (!array_key_exists($match[0], $map)) {\n        throw new MissingReplacementKeyException();\n    }\n    $result = $map[$match[0]];\n    if (!is_string($result)) {\n        throw new InvalidArgumentException();\n    }\n    return $result;\n}, $message);",mdxType:"CodeTabs"}),Object(o.b)(i.b,{text:!0,mdxType:"Result"},'My words: "Audio file", "Video file", "Animation"'),Object(o.b)("p",null,"And of course ",Object(o.b)("inlineCode",{parentName:"p"},"all()"),"/",Object(o.b)("inlineCode",{parentName:"p"},"first()"),"/",Object(o.b)("inlineCode",{parentName:"p"},"only(int)")," modifiers are taken into account."),Object(o.b)("h3",{id:"superfluous-matches"},"Superfluous matches"),Object(o.b)("p",null,"Normally, had you found a match that's not present in your map - ",Object(o.b)("inlineCode",{parentName:"p"},"MissingReplacementKeyException")," would be thrown\n(as long as ",Object(o.b)("inlineCode",{parentName:"p"},"gif")," is matched by your pattern, of course):"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"$message = 'My words: \"mp3\", \"mp4\", \"gif\"';\n\npattern('\\w{3}')->replace($message)->all()->by()->map([\n   'mp3'   => 'Audio file',\n   'mp4'   => 'Video file'\n  // 'gif'  => 'Animation'\n]);\n")),Object(o.b)("p",null,"If you don't need to specify all your possible ",Object(o.b)("inlineCode",{parentName:"p"},"[match => replacement]")," pairs, you should use one of the below ",Object(o.b)("inlineCode",{parentName:"p"},"mapIfExists()"),"."),Object(o.b)("h3",{id:"ignored-replacements"},"Ignored replacements"),Object(o.b)("p",null,"With ",Object(o.b)("inlineCode",{parentName:"p"},"mapIfExists()")," - superfluous occurrences are left unchanged:"),Object(o.b)(i.a,{tregx:"$message = \"Extensions: mp3, mp4, jpg, jpeg, png, gif\";\n\npattern('\\b\\w{3,4}\\b')->replace($message)->all()->by()->mapIfExists([\n   'mp3' => 'Audio',\n   'gif' => 'Animation'\n]);",php:"$message = \"Extensions: mp3, mp4, jpg, jpeg, png, gif\";\n\npreg::replace_callback('/\\b\\w{3}\\b/', function ($match) {\n    $map = [\n        'mp3' => 'Audio',\n        'gif' => 'Animation'\n    ];\n    if (!array_key_exists($match[0], $map)) {\n        return $match[0];\n    }\n    $result = $map[$match[0]];\n    if (!is_string($result)) {\n        throw new InvalidArgumentException();\n    }\n    return $result;\n}, $message);",mdxType:"CodeTabs"}),Object(o.b)(i.b,{text:!0,mdxType:"Result"},"Extensions: Audio, mp4, jpg, jpeg, png, Animation"),Object(o.b)("h2",{id:"groups"},"Groups"),Object(o.b)("p",null,"Resolving a replacement based on a ",Object(o.b)("strong",{parentName:"p"},"whole match")," however, is both uncommon and unpractical. It's much more elastic to resolve\nit based on a specific capturing group, using ",Object(o.b)("inlineCode",{parentName:"p"},"by()->group()->map()"),":"),Object(o.b)(i.a,{tregx:"$links = 'Links: www.google.com, http://socket.io, facebook.com, https://t-regx.com';\n\npattern('(https?://)?(www\\.)?(?<domain>[\\w-]+)\\.(com|io)')\n    ->replace($links)\n    ->all()\n    ->by()\n    ->group('domain')\n    ->map([\n       'google'   => 'Search Engine',\n       'socket'   => 'Documentation',\n       'facebook' => 'Social Portal',\n       't-regx'   => 'Documentation',\n    ])\n    ->orThrow();",php:"$links = 'Links: www.google.com, http://socket.io, facebook.com, https://t-regx.com';\n\npreg::replace_callback('#(https?://)?(www\\.)?(?<domain>[\\w-]+)\\.(com|io)#', function (array $match) {\n    // possible invalid group, e.g. \"2group\" or -2\n    validateGroupName('domain');\n\n    $group = $match['domain'];\n    if (!array_key_exists('domain', $match)) {\n        // group is either un-matched or non-existent\n        if (validateGroupExists('domain', $match)) {\n            $group = $match['domain'];\n        } else {\n            throw new NonexistentGroupException('domain');\n        }\n    }\n    if ($match['domain'] === '') {\n        // group is either un-matched or matched an empty string\n        if (validateGroupMatched('domain', $match)) {\n            $group = $match['domain'];\n        } else {\n            throw new GroupNotMatchedException();\n        }\n    }\n\n    $map = [\n        'google'   => 'Search Engine',\n        'socket'   => 'Documentation',\n        'facebook' => 'Social Portal',\n        't-regx'   => 'Documentation',\n    ];\n    if (!array_key_exists($group, $map)) {\n        throw new MissingReplacementKeyException();\n    }\n    $result = $map[$group];\n    if (!is_string($result)) {\n        throw new InvalidArgumentException();\n    }\n    return $result;\n}, $links);",mdxType:"CodeTabs"}),Object(o.b)(i.b,{text:!0,mdxType:"Result"},"Links: Search Engine, Documentation, Social Portal, Documentation"))}u.isMDXComponent=!0},207:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return d}));var a=t(0),r=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=r.a.createContext({}),s=function(e){var n=r.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},u=function(e){var n=s(e.components);return r.a.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},b=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),b=a,d=u["".concat(i,".").concat(b)]||u[b]||m[b]||o;return t?r.a.createElement(d,c({ref:n},p,{components:t})):r.a.createElement(d,c({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=b;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=t[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},209:function(e,n,t){"use strict";var a=t(0),r=t.n(a);n.a=function(e){return r.a.createElement("div",null,e.children)}},210:function(e,n,t){"use strict";var a=t(0),r=t.n(a),o=t(215);var i=function(){return Object(a.useContext)(o.a)},c=t(208),l=t.n(c),p=t(93),s=t.n(p);const u=37,m=39;n.a=function(e){const{block:n,children:t,defaultValue:o,values:c,groupId:p}=e,{tabGroupChoices:b,setTabGroupChoices:d}=i(),[f,g]=Object(a.useState)(o);if(null!=p){const e=b[p];null!=e&&e!==f&&g(e)}const h=e=>{g(e),null!=p&&d(p,e)},y=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:l()("tabs",{"tabs--block":n})},c.map(({value:e,label:n})=>r.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":f===e,className:l()("tab-item",s.a.tabItem,{"tab-item--active":f===e}),key:e,ref:e=>y.push(e),onKeyDown:e=>((e,n,t)=>{switch(t.keyCode){case m:((e,n)=>{const t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()})(e,n);break;case u:((e,n)=>{const t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()})(e,n)}})(y,e.target,e),onFocus:()=>h(e),onClick:()=>h(e)},n))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(t).filter(e=>e.props.value===f)[0]))}},211:function(e,n,t){"use strict";var a=t(212),r={};r[t(11)("toStringTag")]="z",r+""!="[object z]"&&t(19)(Object.prototype,"toString",(function(){return"[object "+a(this)+"]"}),!0)},212:function(e,n,t){var a=t(53),r=t(11)("toStringTag"),o="Arguments"==a(function(){return arguments}());e.exports=function(e){var n,t,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(t=function(e,n){try{return e[n]}catch(t){}}(n=Object(e),r))?t:o?a(n):"Object"==(i=a(n))&&"function"==typeof n.callee?"Arguments":i}},213:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return g}));t(12),t(52),t(211);function a(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var r=t(5),o=t(0),i=t.n(o),c=t(210),l=t(209),p=t(216),s=t(94),u=t.n(s);class m extends i.a.Component{render(){return i.a.createElement("div",{className:u.a.code},i.a.createElement(p.a,{className:`language-${this.language}`},this.code))}get language(){return this.props.language||"php"}get code(){let e=this.props.children;if("string"==typeof e)return e;if(Array.isArray(e)&&e.every(e=>"string"==typeof e))return e.join("");throw console.log(this.props.children),"Unexpected child of <Code>"}}var b=function(e){function n(){return e.apply(this,arguments)||this}var t,o,p;return Object(r.a)(n,e),n.prototype.render=function(){return i.a.createElement(i.a.Fragment,null,i.a.createElement(c.a,{defaultValue:"t-regx",values:this.values},this.props.tregx&&i.a.createElement(l.a,{value:"t-regx"},i.a.createElement(m,null,this.props.tregx)),this.props.php&&i.a.createElement(l.a,{value:"php"},i.a.createElement(m,null,this.props.php))))},t=n,(o=[{key:"values",get:function(){return[this.props.tregx?{label:"T-Regx",value:"t-regx"}:{},this.props.php?{label:"PHP",value:"php"}:{}].filter((function(e){return e.value}))}}])&&a(t.prototype,o),p&&a(t,p),n}(i.a.Component),d=t(95),f=t.n(d),g=function(e){var n=e.text,t=e.children;return i.a.createElement("div",{className:f.a.result},i.a.createElement(m,{language:n?"text":"php"},t))}}}]);