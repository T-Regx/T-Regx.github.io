(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{199:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),b=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=b(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=b(n),m=a,u=d["".concat(c,".").concat(m)]||d[m]||s[m]||l;return n?r.a.createElement(u,i(i({ref:t},p),{},{components:n})):r.a.createElement(u,i({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,c=new Array(l);c[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var p=2;p<l;p++)c[p]=n[p];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(7),l=(n(0),n(199)),c={id:"replace-match-details",title:"Advanced replace details"},i={unversionedId:"replace-match-details",id:"replace-match-details",isDocsHomePage:!1,title:"Advanced replace details",description:"Introduction",source:"@site/../docs/replace-match-details.md",slug:"/replace-match-details",permalink:"/docs/replace-match-details",version:"current",lastUpdatedAt:1611615683,sidebar:"docs",previous:{title:"Capturing groups - J modifier",permalink:"/docs/match-groups-j-modifier"},next:{title:"Prepared Patterns in details",permalink:"/docs/prepared-patterns-in-details"}},o=[{value:"Introduction",id:"introduction",children:[]},{value:"Examples",id:"examples",children:[{value:"<code>modifiedSubject()</code> example",id:"modifiedsubject-example",children:[]},{value:"<code>modifiedOffset()</code> example",id:"modifiedoffset-example",children:[]},{value:"Capturing groups",id:"capturing-groups",children:[]}]},{value:"Performance",id:"performance",children:[]},{value:"Bytes vs. characters",id:"bytes-vs-characters",children:[]}],p={toc:o};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"introduction"},"Introduction"),Object(l.b)("p",null,"When using ",Object(l.b)("inlineCode",{parentName:"p"},"pattern()->match()")," all ",Object(l.b)("a",{parentName:"p",href:"/docs/match-for-each"},"callbacks")," receive one parameter when\ncalled - ",Object(l.b)("a",{parentName:"p",href:"/docs/match-details"},Object(l.b)("inlineCode",{parentName:"a"},"Detail")),". You can learn more about it on ",Object(l.b)("a",{parentName:"p",href:"/docs/match-details"},Object(l.b)("inlineCode",{parentName:"a"},"Detail"))," page."),Object(l.b)("p",null,"However, when using ",Object(l.b)("inlineCode",{parentName:"p"},"pattern()->replace()")," the callback receives ",Object(l.b)("inlineCode",{parentName:"p"},"ReplaceMatch")," details object.\nIt extends ",Object(l.b)("a",{parentName:"p",href:"/docs/match-details"},Object(l.b)("inlineCode",{parentName:"a"},"Detail"))," object, so they have exactly alike interfaces."),Object(l.b)("p",null,"Additionally, ",Object(l.b)("inlineCode",{parentName:"p"},"ReplaceMatch")," has two separate methods:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"ReplaceMatch.modifiedSubject(): string")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"ReplaceMatch.modifiedOffset(): int"))),Object(l.b)("p",null,"They work similarly to ",Object(l.b)("a",{parentName:"p",href:"/docs/match-offsets"},Object(l.b)("inlineCode",{parentName:"a"},"offset()"))," and ",Object(l.b)("a",{parentName:"p",href:"/docs/match-details#subject"},Object(l.b)("inlineCode",{parentName:"a"},"subject()"))," methods,\nbut they take into account ",Object(l.b)("strong",{parentName:"p"},"results of previous callbacks"),". Basically, you can see into\nthe process of the new string being built."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"modifiedSubject()")," - current state of a subject being built."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"modifiedOffset()")," - occurrence's offset, but according to a current the ",Object(l.b)("inlineCode",{parentName:"li"},"modifiedSubject()"))),Object(l.b)("h2",{id:"examples"},"Examples"),Object(l.b)("h3",{id:"modifiedsubject-example"},Object(l.b)("inlineCode",{parentName:"h3"},"modifiedSubject()")," example"),Object(l.b)("p",null,"Given a pattern, that matches capitalized words:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-php"},"$subject = 'Me, Rihanna and my Mom really like Sweden';\n\n$result = pattern(\"[A-Z][a-z]+\")->replace($subject)->all()->callback(function ($detail) {\n    // highlight-next-line\n    $detail->subject(); // Me, Rihanna and my Mom really like Sweden\n\n    return '____';\n});\n")),Object(l.b)("p",null,"having iterated the subject looking for ",Object(l.b)("inlineCode",{parentName:"p"},"[A-Z][a-z]+")," - for each ",Object(l.b)("a",{parentName:"p",href:"/docs/match-details"},Object(l.b)("inlineCode",{parentName:"a"},"Detail"))," the result of ",Object(l.b)("inlineCode",{parentName:"p"},"Detail.subject()"),"\nmethod would always be the same. There are 4 occurrences matched by the pattern, so callback is invoked 4 times,\nand each time ",Object(l.b)("inlineCode",{parentName:"p"},"$detail->subject()")," is equal to:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-text"},"Me, Rihanna and my Mom really like Sweden\n")),Object(l.b)("hr",null),Object(l.b)("p",null,"However, results of ",Object(l.b)("inlineCode",{parentName:"p"},"ReplaceMatch.modifiedSubject()")," would also contain results of ",Object(l.b)("strong",{parentName:"p"},"previous replacements"),"."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-text"},"Me, Rihanna and my Mom really like Sweden\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-text"},"____, Rihanna and my Mom really like Sweden\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-text"},"____, ____ and my Mom really like Sweden\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-text"},"____, ____ and my ____ really like Sweden\n")),Object(l.b)("p",null,"And the ",Object(l.b)("inlineCode",{parentName:"p"},"$result")," would be equal to"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-text"},"____, ____ and my ____ really like ____\n")),Object(l.b)("h3",{id:"modifiedoffset-example"},Object(l.b)("inlineCode",{parentName:"h3"},"modifiedOffset()")," example"),Object(l.b)("p",null,"Have you iterated the subject looking for ",Object(l.b)("inlineCode",{parentName:"p"},"[A-Z][a-z]+"),", these would be the results of ",Object(l.b)("inlineCode",{parentName:"p"},"Detail.offset()")," method."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-text"},"Me, Rihanna and my Mom really like Sweden\n\u2191\noffset() // 0\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-text"},"Me, Rihanna and my Mom really like Sweden\n    \u2191\n    offset() // 4\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-text"},"Me, Rihanna and my Mom really like Sweden\n                   \u2191\n                   offset() // 19\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-text"},"Me, Rihanna and my Mom really like Sweden\n                                   \u2191\n                                   offset() // 35\n")),Object(l.b)("hr",null),Object(l.b)("p",null,"But, if instead of ",Object(l.b)("inlineCode",{parentName:"p"},"ReplaceMatch.offset()")," you use ",Object(l.b)("inlineCode",{parentName:"p"},"ReplaceMatch.modifiedOffset()"),", these are the results:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-text"},"Me, Rihanna and my Mom really like Sweden\n\u2191\nmodifiedOffset()  // 0\noffset()          // 0\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-text"},"____, Rihanna and my Mom really like Sweden\n      \u2191\n      modifiedOffset() // 6\n    \u2191\n    offset()           // 4\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-text"},"____, ____ and my Mom really like Sweden\n                  \u2191\n                  modifiedOffset()  // 18\n                   \u2191\n                   offset()         // 19\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-text"},"____, ____ and my ____ really like Sweden\n                                   \u2191\n                                   modifiedOffset()  // 35\n                                   offset()          // 35\n")),Object(l.b)("h3",{id:"capturing-groups"},"Capturing groups"),Object(l.b)("p",null,"Method ",Object(l.b)("inlineCode",{parentName:"p"},"modifiedOffset()")," as well as ",Object(l.b)("inlineCode",{parentName:"p"},"modifiedSubject()")," are available for groups (which when replacing are of type\n",Object(l.b)("inlineCode",{parentName:"p"},"ReplaceDetailGroup extends DetailGroup"),"."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-php"},"$subject = 'Me, Rihanna and my Mom really like Sweden';\n\n$result = pattern(\"[A-Z]([a-z]+)\")->replace($subject)->all()->callback(function ($detail) {\n    // highlight-next-line\n    $group = $detail->group(1);\n\n    // highlight-next-line\n    $group->modifiedSubject();\n    // highlight-next-line\n    $group->modifiedOffset();\n\n    return '____';\n});\n")),Object(l.b)("p",null,"When used on group, the ",Object(l.b)("inlineCode",{parentName:"p"},"modifiedOffset()")," returns the offset at which the captured group is present in the\nmodified subject, not the offset at which the whole match was captured."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"modifiedSubject()")," for groups returns exactly the same value as ",Object(l.b)("inlineCode",{parentName:"p"},"modifiedSubject()")," for ",Object(l.b)("inlineCode",{parentName:"p"},"ReplaceDetail"),"."),Object(l.b)("h2",{id:"performance"},"Performance"),Object(l.b)("p",null,"But be sure, each and every of those examples only uses one call to ",Object(l.b)("a",{parentName:"p",href:"https://www.php.net/manual/en/function.preg-replace-callback.php"},Object(l.b)("inlineCode",{parentName:"a"},"preg_replace_callback()")),". T-Regx\nsimply remembers the length of the replacement returned from ",Object(l.b)("inlineCode",{parentName:"p"},"callback()"),", and adds it to ",Object(l.b)("inlineCode",{parentName:"p"},"modifiedOffset()"),",\nwhen called."),Object(l.b)("h2",{id:"bytes-vs-characters"},"Bytes vs. characters"),Object(l.b)("p",null,"When used on ",Object(l.b)("inlineCode",{parentName:"p"},"ReplaceDetail")," (whole match) or ",Object(l.b)("inlineCode",{parentName:"p"},"ReplaceDetailGroup")," (capturing group), method ",Object(l.b)("inlineCode",{parentName:"p"},"modifiedOffset()"),"\nreturns ",Object(l.b)("strong",{parentName:"p"},"character")," position."),Object(l.b)("p",null,"To read ",Object(l.b)("strong",{parentName:"p"},"byte")," position, use ",Object(l.b)("inlineCode",{parentName:"p"},"byteModifiedOffset()"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-php"},"$subject = 'F\xf3\xf3, L\u0119\u0119, \u015a\u0107\u0107';\n\n$result = pattern(\"(\\w+)\", 'u')->replace($subject)->all()->callback(function (ReplaceDetail $detail) {\n    // highlight-next-line\n    $matchOffset = $detail->byteModifiedOffset();\n    // highlight-next-line\n    $groupOffset = $detail->group(1)->byteModifiedOffset();\n\n    return '\u0119';\n});\n")),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"Use ",Object(l.b)("inlineCode",{parentName:"p"},"modifiedOffset()")," with multibyte-safe methods like ",Object(l.b)("a",{parentName:"p",href:"https://www.php.net/manual/en/function.mb-substr.php"},Object(l.b)("inlineCode",{parentName:"a"},"mb_substr()")),", and ",Object(l.b)("inlineCode",{parentName:"p"},"byteModifiedOffset()")," with methods\nlike ",Object(l.b)("a",{parentName:"p",href:"https://www.php.net/manual/en/function.substr.php"},Object(l.b)("inlineCode",{parentName:"a"},"substr()")),"."))))}b.isMDXComponent=!0}}]);