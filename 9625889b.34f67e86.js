/*! For license information please see 9625889b.34f67e86.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{167:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return p}));var a=n(1),c=n(6),r=(n(0),n(196)),o=n(199),l=n(198),i={id:"match-find-first",title:"Optional matches"},b={id:"match-find-first",title:"Optional matches",description:"If you call [`first()`](match-first.md) on a subject that isn't matched by a pattern - `SubjectNotMatchedException` is thrown. We discussed",source:"@site/..\\docs\\match-find-first.md",permalink:"/docs/match-find-first",lastUpdatedAt:1584222424,sidebar:"docs",previous:{title:"First occurrence",permalink:"/docs/match-first"},next:{title:"For Each/Iterate",permalink:"/docs/match-for-each"}},u=[{value:"Optional matches with <code>findFirst()</code>",id:"optional-matches-with-findfirst",children:[{value:"<code>orReturn()</code>",id:"orreturn",children:[]},{value:"<code>orElse()</code>",id:"orelse",children:[]},{value:"<code>orThrow()</code>",id:"orthrow",children:[]},{value:"Custom exceptions for <code>orThrow()</code>",id:"custom-exceptions-for-orthrow",children:[]}]},{value:"I don&#39;t like functional",id:"i-dont-like-functional",children:[]}],s={rightToc:u};function p(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"If you call ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/match-first"}),Object(r.b)("inlineCode",{parentName:"a"},"first()"))," on a subject that isn't matched by a pattern - ",Object(r.b)("inlineCode",{parentName:"p"},"SubjectNotMatchedException")," is thrown. We discussed\nthat in the previous chapter. "),Object(r.b)("p",null,"But what if you ",Object(r.b)("strong",{parentName:"p"},"expected")," the subject not to be matched? And how do you to react to it? "),Object(r.b)("h2",{id:"optional-matches-with-findfirst"},"Optional matches with ",Object(r.b)("inlineCode",{parentName:"h2"},"findFirst()")),Object(r.b)("p",null,"Method ",Object(r.b)("inlineCode",{parentName:"p"},"findFirst()")," can be called with a callback (that accepts ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/match-details"}),Object(r.b)("inlineCode",{parentName:"a"},"Match"))," details) just like ",Object(r.b)("inlineCode",{parentName:"p"},"first()"),". The difference is:\n",Object(r.b)("inlineCode",{parentName:"p"},"findFirst()")," never throws ",Object(r.b)("inlineCode",{parentName:"p"},"SubjectNotMatchedException"),", and allows you to control an unmatched subject by appropriate\ncontrol methods: ",Object(r.b)("inlineCode",{parentName:"p"},"orThrow()"),", ",Object(r.b)("inlineCode",{parentName:"p"},"orReturn()")," and ",Object(r.b)("inlineCode",{parentName:"p"},"orElse()"),"."),Object(r.b)("p",null,"For example:"),Object(r.b)(o.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"T-Regx",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"$first = pattern('[0-9]+')->match(\"I'm 19 years old\")\n   ->findFirst(function (Match $match) {\n       return \"I was born $match years ago\";\n   })\n   ->orReturn('Unmatched :/');\n\nreturn $first;\n"))),Object(r.b)(l.a,{value:"PHP",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"if (preg::match('/[0-9]+/', \"I'm 19 years old\", $match)) {\n    $text = $match[0];\n    return \"I was born $text years ago\";\n}\nreturn 'Unmatched :/';\n")))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"'I was born 19 years ago'\n")),Object(r.b)("p",null,"If a match is found, then the result of ",Object(r.b)("inlineCode",{parentName:"p"},"findFirst()")," callback is returned. If a match is not found, however, then the\nhandling of an unmatched subject relies in the chained method."),Object(r.b)("h3",{id:"orreturn"},Object(r.b)("inlineCode",{parentName:"h3"},"orReturn()")),Object(r.b)("p",null,"If a match is not found, it returns a default value."),Object(r.b)(o.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"T-Regx",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"$first = pattern('[0-9]+')->match(\"I'm a dog\")\n    ->findFirst(function (Match $match) {\n        return 'Match is found!';\n    })\n    ->orReturn('Match is not found');\n\nreturn $first;\n"))),Object(r.b)(l.a,{value:"PHP",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"if (preg::match('/[0-9]+/', \"I'm a dog\")) {\n    $first = 'Match is found!';\n} else {\n    $first = 'Match is not found';\n}\n\nreturn $first;\n")))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"'Match is not found'\n")),Object(r.b)("h3",{id:"orelse"},Object(r.b)("inlineCode",{parentName:"h3"},"orElse()")),Object(r.b)("p",null,"If a match is not found, it calls ",Object(r.b)("inlineCode",{parentName:"p"},"orElse()")," callback and uses ",Object(r.b)("em",{parentName:"p"},"it")," to evaluate a return value."),Object(r.b)(o.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"T-Regx",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"$first = pattern('[0-9]+')->match(\"I'm a dog\")\n    ->findFirst(function (Match $match) {\n        return 'Match is found!';\n    })\n    ->orElse(function (NotMatched $notMatched) { \n        return \"I couldn't match subject: \" . $notMatched->subject();\n    });\n    \nreturn $first;\n"))),Object(r.b)(l.a,{value:"PHP",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"$subject = \"I'm a dog\";\nif (preg::match('/[0-9]+/', $subject)) {\n    $first = 'Match is found!';\n} else {\n    $first = \"I couldn't match subject: $subject\";\n}\n\nreturn $first;\n")))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"\"I couldn't match subject: I'm a dog\"\n")),Object(r.b)("h3",{id:"orthrow"},Object(r.b)("inlineCode",{parentName:"h3"},"orThrow()")),Object(r.b)("p",null,"If a match is not found, it throws ",Object(r.b)("inlineCode",{parentName:"p"},"SubjectNotMatchedException")," by default."),Object(r.b)(o.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"T-Regx",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"try {\n    return pattern('[0-9]+')->match(\"I'm a dog\")\n        ->findFirst(function (Match $match) {\n            return 'Match is found!';\n        })\n        ->orThrow();\n}\ncatch (SubjectNotMatchedException $e) {\n    // React to an unmatched subject\n    echo 'Not matched';\n}\n"))),Object(r.b)(l.a,{value:"PHP",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"try {\n    if (preg::match('/[0-9]+/', \"I'm a dog\")) {\n        return 'Match is found!';\n    } \n    throw new SubjectNotMatchedException();\n}\ncatch (SubjectNotMatchedException $e) {\n    // React to an unmatched subject\n    echo 'Not matched';\n}\n")))),Object(r.b)("h3",{id:"custom-exceptions-for-orthrow"},"Custom exceptions for ",Object(r.b)("inlineCode",{parentName:"h3"},"orThrow()")),Object(r.b)("p",null,"You can also supply your own exception class name."),Object(r.b)(o.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"T-Regx",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"class MyException extends \\Exception {}\n\ntry {\n    return pattern('[0-9]+')->match(\"I'm a dog\")\n        ->findFirst(function (Match $match) {\n            return 'Match is found!';\n        })\n        ->orThrow(MyException::class);\n}\ncatch (MyException $e) {\n    // React to an unmatched subject\n    echo 'Not matched';\n}\n"))),Object(r.b)(l.a,{value:"PHP",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"class MyException extends \\Exception {}\n\ntry {\n    if (preg::match('/[0-9]+/', \"I'm a dog\")) {\n        return 'Match is found!';\n    } \n    throw new MyException();\n}\ncatch (MyException $e) {\n    // React to an unmatched subject\n    echo 'Not matched';\n}\n")))),Object(r.b)("p",null,"Of course, your custom exception must meet certain requirements:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"It has to be a class")),Object(r.b)("p",{parentName:"li"},"Trying to instantiate interfaces or abstract classes would break our ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"whats-the-point#t-regx-to-the-rescue"}),'"Explicity rule"'),".\nThe class must be concrete and explicit.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"It has to implement ",Object(r.b)("inlineCode",{parentName:"strong"},"\\Throwable"))),Object(r.b)("p",{parentName:"li"},"Obviously.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"It must have a suitable constructor")),Object(r.b)("p",{parentName:"li"},"The class must be instantiable with one of the following signatures and parameter types."),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"__construct()")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"__construct($message)"),", where ",Object(r.b)("inlineCode",{parentName:"li"},"$message")," can be a string"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"__construct($message, $subject)"),", where ",Object(r.b)("inlineCode",{parentName:"li"},"$message")," and ",Object(r.b)("inlineCode",{parentName:"li"},"$subject")," can be strings")))),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Notice, that using ",Object(r.b)("inlineCode",{parentName:"p"},"findFirst()->orThrow()")," without your custom exception is ",Object(r.b)("strong",{parentName:"p"},"identical")," to ",Object(r.b)("inlineCode",{parentName:"p"},"first()"),".")),Object(r.b)("h2",{id:"i-dont-like-functional"},"I don't like functional"),Object(r.b)("p",null,"If you don't like functional programming style, you are free to use ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/match-first"}),Object(r.b)("inlineCode",{parentName:"a"},"first()"))," (which throws an exception)\nand just catch it."),Object(r.b)(o.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"T-Regx",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"try {\n    return pattern('[0-9]+')->match(\"I'm a dog\")->first();\n}\ncatch (SubjectNotMatchedException $e) {\n    return 'Some other value';\n}\n"))),Object(r.b)(l.a,{value:"PHP",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"try {\n    if (preg::match('/[0-9]+/', \"I'm a dog\", $match)) {\n        return $match[0];\n    }\n    throw new SubjectNotMatchedException();\n}\ncatch (SubjectNotMatchedException $e) {\n    return 'Some other value';\n}\n")))))}p.isMDXComponent=!0},196:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var a=n(0),c=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,c=function(e,t){if(null==e)return{};var n,a,c={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var b=c.a.createContext({}),u=function(e){var t=c.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},s=function(e){var t=u(e.components);return c.a.createElement(b.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},d=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),s=u(n),d=a,m=s["".concat(o,".").concat(d)]||s[d]||p[d]||r;return n?c.a.createElement(m,l({ref:t},b,{components:n})):c.a.createElement(m,l({ref:t},b))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var b=2;b<r;b++)o[b]=n[b];return c.a.createElement.apply(null,o)}return c.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},197:function(e,t,n){var a;!function(){"use strict";var n={}.hasOwnProperty;function c(){for(var e=[],t=0;t<arguments.length;t++){var a=arguments[t];if(a){var r=typeof a;if("string"===r||"number"===r)e.push(a);else if(Array.isArray(a)&&a.length){var o=c.apply(null,a);o&&e.push(o)}else if("object"===r)for(var l in a)n.call(a,l)&&a[l]&&e.push(l)}}return e.join(" ")}e.exports?(c.default=c,e.exports=c):void 0===(a=function(){return c}.apply(t,[]))||(e.exports=a)}()},198:function(e,t,n){"use strict";var a=n(0),c=n.n(a);t.a=function(e){return c.a.createElement("div",null,e.children)}},199:function(e,t,n){"use strict";var a=n(0),c=n.n(a),r=n(200);var o=function(){return Object(a.useContext)(r.a)},l=n(197),i=n.n(l),b=n(93),u=n.n(b);const s=37,p=39;t.a=function(e){const{block:t,children:n,defaultValue:r,values:l,groupId:b}=e,{tabGroupChoices:d,setTabGroupChoices:m}=o(),[h,j]=Object(a.useState)(r);if(null!=b){const e=d[b];null!=e&&e!==h&&j(e)}const f=e=>{j(e),null!=b&&m(b,e)},O=[];return c.a.createElement("div",null,c.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:i()("tabs",{"tabs--block":t})},l.map(({value:e,label:t})=>c.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":h===e,className:i()("tab-item",u.a.tabItem,{"tab-item--active":h===e}),key:e,ref:e=>O.push(e),onKeyDown:e=>((e,t,n)=>{switch(n.keyCode){case p:((e,t)=>{const n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()})(e,t);break;case s:((e,t)=>{const n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()})(e,t)}})(O,e.target,e),onFocus:()=>f(e),onClick:()=>f(e)},t))),c.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(n).filter(e=>e.props.value===h)[0]))}},200:function(e,t,n){"use strict";var a=n(0);const c=Object(a.createContext)({tabGroupChoices:{},setTabGroupChoices:()=>{}});t.a=c}}]);