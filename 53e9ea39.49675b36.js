(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{105:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return p})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return m}));var r=a(2),n=a(6),c=(a(0),a(161)),l=a(163),p={id:"match-map",title:"Map occurrences"},s={unversionedId:"match-map",id:"match-map",isDocsHomePage:!1,title:"Map occurrences",description:"Mapping works a bit like a combination of [all()] and [forEach()]. It returns all matched elements, after",source:"@site/..\\docs\\match-map.mdx",permalink:"/docs/match-map",lastUpdatedAt:1596999510,sidebar:"docs",previous:{title:"Iterate matches (For each)",permalink:"/docs/match-for-each"},next:{title:"Map with keys (Flat map)",permalink:"/docs/match-flat-map"}},o=[{value:"Map matched occurrences",id:"map-matched-occurrences",children:[]},{value:"Variable callbacks",id:"variable-callbacks",children:[]},{value:"Arbitrary return types",id:"arbitrary-return-types",children:[]},{value:"<code>flatMap()</code>",id:"flatmap",children:[]}],i={rightToc:o};function m(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Mapping works a bit like a combination of ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/match#many"}),Object(c.b)("inlineCode",{parentName:"a"},"all()"))," and ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/match-for-each"}),Object(c.b)("inlineCode",{parentName:"a"},"forEach()")),". It returns all matched elements, after\nthey have been iterated (and potentially altered) using ",Object(c.b)("inlineCode",{parentName:"p"},"map()")," callback (which accepts ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/match-details"}),Object(c.b)("inlineCode",{parentName:"a"},"Match"))," details)."),Object(c.b)("h2",{id:"map-matched-occurrences"},"Map matched occurrences"),Object(c.b)("p",null,"So instead of returning all elements:"),Object(c.b)(l.a,{tregx:'pattern("[\\w\']+")->match("I\'m 19 years old")->all();',php:'preg::match_all("/[\\w\']+/", "I\'m 19 years old", $matches);\nreturn $matches[0];',mdxType:"CodeTabs"}),Object(c.b)(l.b,{mdxType:"Result"},"[\"I'm\", '19', 'years', 'old']"),Object(c.b)("p",null,"...you can map them - to any other value, by callback:"),Object(c.b)(l.a,{tregx:'pattern("[\\w\']+")->match("I\'m 19 years old")->map(function (Match $match) {\n    return strlen($match->text());\n});',php:'preg::match_all("/[\\w\']+/", "I\'m 19 years old", $matches);\nreturn array_map(function ($text) {\n    return strlen($text);\n}, $matches[0]);',mdxType:"CodeTabs"}),Object(c.b)(l.b,{mdxType:"Result"},"[3, 2, 5, 3]"),Object(c.b)("h2",{id:"variable-callbacks"},"Variable callbacks"),Object(c.b)("p",null,"You can invoke ",Object(c.b)("inlineCode",{parentName:"p"},"map()")," with any valid PHP ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.php.net/manual/en/language.types.callable.php"}),Object(c.b)("inlineCode",{parentName:"a"},"callable"))," which accepts one\nstring parameter (or no parameters) - just like ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/match-first"}),Object(c.b)("inlineCode",{parentName:"a"},"first()")),"."),Object(c.b)(l.a,{tregx:"pattern(\"[\\w']+\")->match(\"I'm 19 years old\")->map('strtoupper');",php:"preg::match_all(\"/[\\w']+/\", \"I'm 19 years old\", $matches);\nreturn array_map('strtoupper', $matches[0]);",mdxType:"CodeTabs"}),Object(c.b)(l.b,{mdxType:"Result"},'["I\'M", "19", "YEARS", "OLD"]'),Object(c.b)("h2",{id:"arbitrary-return-types"},"Arbitrary return types"),Object(c.b)("p",null,"Again, just like ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/match-first"}),Object(c.b)("inlineCode",{parentName:"a"},"first()")),", this method can return values of any type, including: objects, arrays,\nbooleans and ",Object(c.b)("inlineCode",{parentName:"p"},"null"),"."),Object(c.b)(l.a,{tregx:"pattern(\"[\\w']+\")->match(\"I'm 19 years old\")->map('str_split');",php:"preg::match_all(\"/[\\w']+/\", \"I'm 19 years old\", $matches);\nreturn array_map('str_split', $matches[0]);",mdxType:"CodeTabs"}),Object(c.b)(l.b,{mdxType:"Result"},"[ ['I', '\\'', 'm'], ['1', '9'], ['y', 'e', 'a', 'r', 's'], ['o', 'l', 'd'] ]"),Object(c.b)("h2",{id:"flatmap"},Object(c.b)("inlineCode",{parentName:"h2"},"flatMap()")),Object(c.b)("p",null,"You can just as easily create a flattened map."),Object(c.b)(l.a,{tregx:"pattern(\"[\\w']+\")->match(\"I'm 19 years old\")->flatMap('str_split');",php:"preg::match_all(\"/[\\w']+/\", \"I'm 19 years old\", $matches);\nreturn array_merge(...array_map('str_split', $matches[0]));",mdxType:"CodeTabs"}),Object(c.b)(l.b,{mdxType:"Result"},"['I', '\\'', 'm', '1', '9', 'y', 'e', 'a', 'r', 's', 'o', 'l', 'd']"),Object(c.b)("p",null,"Read more about ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/match-flat-map"}),Object(c.b)("inlineCode",{parentName:"a"},"flatMap()"))," on the next page."))}m.isMDXComponent=!0},163:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return y}));var r=a(162),n=a(3),c=a(0),l=a.n(c),p=a(166),s=a(167),o=a(165),i=a(47),m=a.n(i),b=function(e){function t(){return e.apply(this,arguments)||this}return Object(n.a)(t,e),t.prototype.render=function(){return l.a.createElement("div",{className:m.a.code},l.a.createElement(o.a,{className:"language-"+this.language},this.code))},Object(r.a)(t,[{key:"language",get:function(){return this.props.language||"php"}},{key:"code",get:function(){var e=this.props.children;if("string"==typeof e)return e;if(Array.isArray(e)&&e.every((function(e){return"string"==typeof e})))return e.join("");throw console.log(this.props.children),"Unexpected child of <Code>"}}]),t}(l.a.Component),u=function(e){function t(){return e.apply(this,arguments)||this}return Object(n.a)(t,e),t.prototype.render=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(p.a,{defaultValue:"t-regx",values:this.values},this.props.tregx&&l.a.createElement(s.a,{value:"t-regx"},l.a.createElement(b,null,this.props.tregx)),this.props.php&&l.a.createElement(s.a,{value:"php"},l.a.createElement(b,null,this.props.php))))},Object(r.a)(t,[{key:"values",get:function(){return[this.props.tregx?{label:"T-Regx",value:"t-regx"}:{},this.props.php?{label:"PHP",value:"php"}:{}].filter((function(e){return e.value}))}}]),t}(l.a.Component),d=a(48),h=a.n(d),y=function(e){var t=e.text,a=e.children;return l.a.createElement("div",{className:h.a.result},l.a.createElement(b,{language:t?"text":"php"},a))}}}]);