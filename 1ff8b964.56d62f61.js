(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{200:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),b=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=b(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=b(n),m=r,d=u["".concat(i,".").concat(m)]||u[m]||s[m]||l;return n?a.a.createElement(d,o(o({ref:t},p),{},{components:n})):a.a.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},91:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return b}));var r=n(3),a=n(7),l=(n(0),n(200)),i={title:"Implicit all() in replace()",author:"Daniel Wilkowski"},o={permalink:"/blog/2021/03/06/release-0.10.2",source:"@site/blog/2021-03-06-release-0.10.2.md",description:"Rawwrrrr!",date:"2021-03-06T00:00:00.000Z",tags:[],title:"Implicit all() in replace()",readingTime:1.055,truncated:!1,nextItem:{title:"Valentine's release",permalink:"/blog/2021/02/14/release-0.10.1"}},c=[],p={toc:c};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Rawwrrrr!"),Object(l.b)("p",null,"We've release T-Regx ",Object(l.b)("a",{parentName:"p",href:"https://github.com/T-Regx/T-Regx/releases/tag/v0.10.2"},"0.10.2"),"."),Object(l.b)("p",null,"Normally, when doing replacements, you always had to specify explicitly the number of them, so:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"replace()->all()->with()")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"replace()->first()->by()")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"replace()->only(2)->focus()"))),Object(l.b)("p",null,"Since ",Object(l.b)("a",{parentName:"p",href:"https://github.com/T-Regx/T-Regx/releases/tag/v0.10.2"},"0.10.2"),", you can skip the quantifier, and just use ",Object(l.b)("inlineCode",{parentName:"p"},"with()"),"/",Object(l.b)("inlineCode",{parentName:"p"},"callback()"),"/",Object(l.b)("inlineCode",{parentName:"p"},"by()"),"/",Object(l.b)("inlineCode",{parentName:"p"},"focus()")," or\nany other replace methods, like so:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"replace()->with()")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"replace()->by()")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"replace()->focus()"))),Object(l.b)("p",null,"And they will replace every occurrence, just like ",Object(l.b)("inlineCode",{parentName:"p"},"all()"),"."),Object(l.b)("p",null,"Don't worry, we don't use any kind of meta-programing with magic methods or anything. We used simple\npolymorphism and design patterns (delegation and adapter in this case), so if you\nclick ",Object(l.b)("inlineCode",{parentName:"p"},"Ctrl"),"+",Object(l.b)("inlineCode",{parentName:"p"},"B"),"/",Object(l.b)("inlineCode",{parentName:"p"},"Go to declaration")," in your IDE, you will see exactly what code is being run."),Object(l.b)("p",null,"Additionally, we customized some exceptions messages. Now, depending on the nature of your exception,\nyou will see one of these additional exception messages:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Expected to get the 3-nth element from fluent pattern, but the subject backing the feed was not matched")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Expected to get the first match as integer, but subject was not matched")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Expected to get the first element from fluent pattern, but the elements feed has 0 element(s)")),Object(l.b)("li",{parentName:"ul"},"and more. You can see them all on ",Object(l.b)("a",{parentName:"li",href:"https://github.com/T-Regx/T-Regx/tree/master/src/CleanRegex/Internal/Exception/Messages"},"github in /CleanRegex/Internal/Exception/Messages"))),Object(l.b)("p",null,"As always, everything is described in ",Object(l.b)("a",{parentName:"p",href:"https://github.com/T-Regx/T-Regx/blob/develop/ChangeLog.md"},"ChangeLog.md")," on github."))}b.isMDXComponent=!0}}]);