(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{175:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return s}));var n=a(1),r=(a(0),a(204)),c=a(208);const i={id:"replace-with",title:"Replace with a constant value"},l={id:"replace-with",title:"Replace with a constant value",description:"After `replace()`, you need to explicitly use one of [`first()`]/[`all()`]/[`only(int)`] methods, to express how many",source:"@site/../docs/replace-with.mdx",permalink:"/docs/replace-with",lastUpdatedAt:1587076805,sidebar:"docs",previous:{title:"Replacing a string",permalink:"/docs/replace"},next:{title:"Replace with callback",permalink:"/docs/replace-callback"}},o=[{value:"Limits",id:"limits",children:[{value:"First occurrence - first()",id:"first-occurrence---first",children:[]},{value:"All occurrences - <code>all()</code>",id:"all-occurrences---all",children:[]},{value:"Limited occurrences - <code>only()</code>",id:"limited-occurrences---only",children:[]}]},{value:"Regular expression references",id:"regular-expression-references",children:[]},{value:"Intentional references",id:"intentional-references",children:[]}],p={rightToc:o};function s({components:e,...t}){return Object(r.b)("wrapper",Object(n.a)({},p,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,"After ",Object(r.b)("inlineCode",{parentName:"p"},"replace()"),", you need to explicitly use one of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-first"}),Object(r.b)("inlineCode",{parentName:"a"},"first()")),"/",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match#many"}),Object(r.b)("inlineCode",{parentName:"a"},"all()")),"/",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match#many"}),Object(r.b)("inlineCode",{parentName:"a"},"only(int)"))," methods, to express how many\nreplacements should be done."),Object(r.b)("p",null,"Specifying limits is done to relieve you from ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"overview.md#brain-strain"}),Object(r.b)("strong",{parentName:"a"},"brain strain"))," - so you can immediately\nrecognize author's intentions."),Object(r.b)("h2",{id:"limits"},"Limits"),Object(r.b)("p",null,"Using ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-first"}),Object(r.b)("inlineCode",{parentName:"a"},"first()")),"/",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match#many"}),Object(r.b)("inlineCode",{parentName:"a"},"all()")),"/",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match#many"}),Object(r.b)("inlineCode",{parentName:"a"},"only(int)"))," is semantically identical to passing ",Object(r.b)("inlineCode",{parentName:"p"},"$limit")," argument to\n","[",Object(r.b)("inlineCode",{parentName:"p"},"preg::replace()"),"]","/","[",Object(r.b)("inlineCode",{parentName:"p"},"preg::replace_callback()"),"]","."),Object(r.b)("p",null,"Neither of methods ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-first"}),Object(r.b)("inlineCode",{parentName:"a"},"first()")),"/",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match#many"}),Object(r.b)("inlineCode",{parentName:"a"},"all()")),"/",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match#many"}),Object(r.b)("inlineCode",{parentName:"a"},"only(int)"))," modify the subject if it wasn't matched by a pattern."),Object(r.b)("h3",{id:"first-occurrence---first"},"First occurrence - ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"/docs/match-first"}),Object(r.b)("inlineCode",{parentName:"a"},"first()"))),Object(r.b)(c.a,{tregx:"$subject = 'I like scandinavia: Sweden, Norway and Denmark';\n\npattern('[A-Z][a-z]+')->replace($subject)->first()->with('___');",php:"$subject = 'I like scandinavia: Sweden, Norway and Denmark';\n\npreg_replace('/[A-Z][a-z]+/', '___', $subject, 1);",mdxType:"CodeTabs"}),Object(r.b)(c.b,{mdxType:"Result"},"'I like scandinavia: ___, Norway and Denmark'"),Object(r.b)("h3",{id:"all-occurrences---all"},"All occurrences - ",Object(r.b)("inlineCode",{parentName:"h3"},"all()")),Object(r.b)(c.a,{tregx:"$subject = 'I like scandinavia: Sweden, Norway and Denmark';\n\npattern('[A-Z][a-z]+')->replace($subject)->all()->with('___');",php:"$subject = 'I like scandinavia: Sweden, Norway and Denmark';\n\npreg::replace('/[A-Z][a-z]+/', '___', $subject);",mdxType:"CodeTabs"}),Object(r.b)(c.b,{mdxType:"Result"},"'I like scandinavia: ___, ___ and ___'"),Object(r.b)("h3",{id:"limited-occurrences---only"},"Limited occurrences - ",Object(r.b)("inlineCode",{parentName:"h3"},"only()")),Object(r.b)(c.a,{tregx:"$subject = 'I like scandinavia: Sweden, Norway and Denmark';\n\npattern('[A-Z][a-z]+')->replace($subject)->only(2)->with('___');",php:"$subject = 'I like scandinavia: Sweden, Norway and Denmark';\n\npreg::replace('/[A-Z][a-z]+/', '___', $subject, 2);",mdxType:"CodeTabs"}),Object(r.b)(c.b,{mdxType:"Result"},"'I like scandinavia: ___, ___ and Denmark'"),Object(r.b)("p",null,"Read on to learn more about replacing with ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"replace-callback.md"}),"a callback"),"."),Object(r.b)("h2",{id:"regular-expression-references"},"Regular expression references"),Object(r.b)("p",null,"Normally, had you passed a replacement to ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.php.net/manual/en/function.preg-replace.php"}),Object(r.b)("inlineCode",{parentName:"a"},"preg_replace()")),", that contains a backslash or a dollar sign followed by a\nnumber (eg. ",Object(r.b)("inlineCode",{parentName:"p"},"\\1")," or ",Object(r.b)("inlineCode",{parentName:"p"},"$2"),") - that reference would be replaced by a corresponding capturing group (or by an empty string,\nif the group wasn't matched)."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-php"}),"preg::replace('/(\\d+)cm/', '<$1>', 'I have 15cm and 192cm');\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"I have <15> and <192>\n")),Object(r.b)("p",null,"Resolving such references won't happen with T-Regx."),Object(r.b)("p",null,"This is done to relieve you from the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"overview.md#brain-strain"}),Object(r.b)("strong",{parentName:"a"},"brain strain")),". A programmer should be able to merely\nreplace a string with a constant value without ","[cognitive load]"," about possible ",Object(r.b)("inlineCode",{parentName:"p"},"\\")," or ",Object(r.b)("inlineCode",{parentName:"p"},"$")," hiding somewhere."),Object(r.b)(c.a,{tregx:"pattern('(\\d+)cm')->replace('I have 15cm and 192cm')->all()->with('<$1>');",php:"preg::replace('/(\\d+)cm/', '<\\$1>', 'I have 15cm and 192cm');\n//                            \u2191\n// in T-Regx, special function is used to quote all references",mdxType:"CodeTabs"}),Object(r.b)(c.b,{text:!0,mdxType:"Result"},"I have <$1> and <$1>"),Object(r.b)("p",null,"You can be sure, what's put into ",Object(r.b)("inlineCode",{parentName:"p"},"with()")," will certainly be present unchanged in your final result."),Object(r.b)("p",null,"Some replacement strings containing a backslash or a dollar sign (like file system paths, URL addresses or even user input)\nmight interfere with logic and cause bugs that are very hard to find."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Neither of types of references are resolved: ",Object(r.b)("inlineCode",{parentName:"p"},"$12"),", ",Object(r.b)("inlineCode",{parentName:"p"},"\\12")," nor ",Object(r.b)("inlineCode",{parentName:"p"},"${12}"),".")),Object(r.b)("h2",{id:"intentional-references"},"Intentional references"),Object(r.b)("p",null,"If you, however, would like to intentionally use regular expression references and have validated your input\nagainst ",Object(r.b)("em",{parentName:"p"},"an unexpected")," ",Object(r.b)("inlineCode",{parentName:"p"},"\\")," or ",Object(r.b)("inlineCode",{parentName:"p"},"$")," - feel free to use ",Object(r.b)("inlineCode",{parentName:"p"},"withReferences()")," which ",Object(r.b)("strong",{parentName:"p"},"will")," resolve replacement references."),Object(r.b)(c.a,{tregx:"pattern('(\\d+)cm')->replace('I have 15cm and 192cm')->all()->withReferences('<$1>');",php:"preg::replace('/(\\d+)cm/', '<$1>', 'I have 15cm and 192cm');\n//                            \u2191\n// using withReferences(), back references are preserved",mdxType:"CodeTabs"}),Object(r.b)(c.b,{text:!0,mdxType:"Result"},"I have <15> and <192>"))}s.isMDXComponent=!0},204:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l({},t,{},e)),a},b=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),b=s(a),d=n,m=b["".concat(i,".").concat(d)]||b[d]||u[d]||c;return a?r.a.createElement(m,l({ref:t},p,{components:a})):r.a.createElement(m,l({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,i=new Array(c);i[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<c;p++)i[p]=a[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},206:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){return r.a.createElement("div",null,e.children)}},207:function(e,t,a){"use strict";var n=a(0),r=a.n(n),c=a(210);var i=function(){return Object(n.useContext)(c.a)},l=a(205),o=a.n(l),p=a(93),s=a.n(p);const b=37,u=39;t.a=function(e){const{block:t,children:a,defaultValue:c,values:l,groupId:p}=e,{tabGroupChoices:d,setTabGroupChoices:m}=i(),[h,f]=Object(n.useState)(c);if(null!=p){const e=d[p];null!=e&&e!==h&&f(e)}const j=e=>{f(e),null!=p&&m(p,e)},O=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:o()("tabs",{"tabs--block":t})},l.map(({value:e,label:t})=>r.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":h===e,className:o()("tab-item",s.a.tabItem,{"tab-item--active":h===e}),key:e,ref:e=>O.push(e),onKeyDown:e=>((e,t,a)=>{switch(a.keyCode){case u:((e,t)=>{const a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()})(e,t);break;case b:((e,t)=>{const a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()})(e,t)}})(O,e.target,e),onFocus:()=>j(e),onClick:()=>j(e)},t))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter(e=>e.props.value===h)[0]))}},208:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return m}));a(12);var n=a(0),r=a.n(n),c=a(207),i=a(206),l=a(211),o=a(94),p=a.n(o);class s extends r.a.Component{render(){return r.a.createElement("div",{className:p.a.code},r.a.createElement(l.a,{className:"language-"+this.language},this.code))}get language(){return this.props.language||"php"}get code(){let e=this.props.children;if("string"==typeof e)return e;if(Array.isArray(e)&&e.every(e=>"string"==typeof e))return e.join("");throw console.log(this.props.children),"Unexpected child of <Code>"}}class b extends r.a.Component{render(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(c.a,{defaultValue:"t-regx",values:this.values},this.props.tregx&&r.a.createElement(i.a,{value:"t-regx"},r.a.createElement(s,null,this.props.tregx)),this.props.php&&r.a.createElement(i.a,{value:"php"},r.a.createElement(s,null,this.props.php))))}get values(){return[this.props.tregx?{label:"T-Regx",value:"t-regx"}:{},this.props.php?{label:"PHP",value:"php"}:{}].filter(e=>e.value)}}var u=a(95),d=a.n(u),m=({text:e,children:t})=>r.a.createElement("div",{className:d.a.result},r.a.createElement(s,{language:e?"text":"php"},t))}}]);