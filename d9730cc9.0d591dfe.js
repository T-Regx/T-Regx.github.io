(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{190:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));n(233),n(238),n(229),n(246),n(248),n(217);var r=n(209);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var i={id:"whats-the-point",title:"What's the point?",sidebar_label:"Why would I use T-Regx?"},l=[{value:"What's wrong with PHP Regular Expressions:",id:"whats-wrong-with-php-regular-expressions",children:[{value:"PHP is Implicit",id:"php-is-implicit",children:[]},{value:"PHP is Unintuitive",id:"php-is-unintuitive",children:[]},{value:"PHP is Messy",id:"php-is-messy",children:[]},{value:"PHP is Inconsistent",id:"php-is-inconsistent",children:[]},{value:"PHP is Deliberately buggy",id:"php-is-deliberately-buggy",children:[]}]},{value:"T-Regx to the rescue",id:"t-regx-to-the-rescue",children:[{value:"T-Regx is descriptive",id:"t-regx-is-descriptive",children:[]},{value:"T-Regx is for developers (it's reliable)",id:"t-regx-is-for-developers-its-reliable",children:[]},{value:"T-Regx is explicit",id:"t-regx-is-explicit",children:[]},{value:"T-Regx is really smart with its exceptions",id:"t-regx-is-really-smart-with-its-exceptions",children:[]}]}],o={rightToc:l},c="wrapper";function p(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(r.b)(c,a({},o,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Here is a few reasons why one might consider using T-Regx. Main of which are:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"It's ",Object(r.b)("strong",{parentName:"li"},"bulletproof")),Object(r.b)("li",{parentName:"ul"},"It's ",Object(r.b)("strong",{parentName:"li"},"reliable")),Object(r.b)("li",{parentName:"ul"},"It's ",Object(r.b)("strong",{parentName:"li"},"readable"))),Object(r.b)("h2",{id:"whats-wrong-with-php-regular-expressions"},"What's wrong with PHP Regular Expressions:"),Object(r.b)("p",null,"PHP regular expressions API is far from perfect. Here's only a handful of what's wrong with it:"),Object(r.b)("h3",{id:"php-is-implicit"},"PHP is Implicit"),Object(r.b)("p",null,"You are probably a PHP developer. I would like to get ",Object(r.b)("inlineCode",{parentName:"p"},"'Robert likes apples'"),". Can you tell me which is the correct signature\nfor this task?"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-php"}),"preg_replace('/Bob/', 'Robert', 'Bob likes apples');    // pattern, replacement, subject\n// or\npreg_replace('/Bob/', 'Bob likes apples', 'Robert');    // pattern, subject, replacement\n// ??\n")),Object(r.b)("p",null,"Another try. Let's say you'd like to limit replacements. But you remember that there's a reference parameter ",Object(r.b)("inlineCode",{parentName:"p"},"&$count"),"\nsomewhere. Again, which is the correct signature?"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-php"}),"$limit = 1;\n\npreg_replace(?, ?, ?, $limit, $count);\n// or\npreg_replace(?, ?, ?, $count, $limit);\n// ??\n")),Object(r.b)("h3",{id:"php-is-unintuitive"},"PHP is Unintuitive"),Object(r.b)("p",null,"Programming languages are ",Object(r.b)("strong",{parentName:"p"},"tools")," created to solve problems. An experienced programmer ",Object(r.b)("strong",{parentName:"p"},"should")," be able to look\nat the code and tell what it does. With PHP ",Object(r.b)("inlineCode",{parentName:"p"},"preg_*")," functions it's just. not. possible."),Object(r.b)("p",null,"Someone who doesn't know PHP regular expressions, can probably ask themselves:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"preg_replace('//', $r, $s)")," - will this replace all occurrences? Or just one?"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"preg_match('//', $subject)")," - will ",Object(r.b)("em",{parentName:"li"},"this")," match the first occurrence? Or all?"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"preg_match_all('//', $subject);")," Ok, this will find all matches, so preg_match() only finds the first."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"preg_filter('//', $replacements, $subject)")," - who needs ",Object(r.b)("inlineCode",{parentName:"li"},"$replacements")," in ",Object(r.b)("inlineCode",{parentName:"li"},"filter")," method?")),Object(r.b)("h4",{id:"whats-more"},"What's more"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Parameters:"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Functions with 4 or 5 parameters (3 of which are optional)."),Object(r.b)("p",{parentName:"li"},"It means that, whoever looks at the code has to ",Object(r.b)("strong",{parentName:"p"},"remember")," (or to look up) what those optional values are and in which order.")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Return types:"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Array of arrays, which contain either a ",Object(r.b)("inlineCode",{parentName:"li"},"string"),", ",Object(r.b)("inlineCode",{parentName:"li"},"null"),", or an array of ",Object(r.b)("inlineCode",{parentName:"li"},"null"),"s, ",Object(r.b)("inlineCode",{parentName:"li"},"strings")," and ",Object(r.b)("inlineCode",{parentName:"li"},"int"),"s.")))),Object(r.b)("h3",{id:"php-is-messy"},"PHP is Messy"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"PREG_OFFSET_CAPTURE"),' is a nightmare! It changes return type from "an array of arrays" to "an array of arrays of arrays".'),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"PREG_SET_ORDER")," / ",Object(r.b)("inlineCode",{parentName:"li"},"PREG_PATTERN_ORDER"),' change return values. It\'s either "groups of matches" or "matches of groups",\ndepending on the flag.')),Object(r.b)("p",null,"The worst part? You find yourself looking at this code"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-php"}),"return $match[1][0];\n")),Object(r.b)("p",null,"having no idea what. it. does. You have to see whether you're using ",Object(r.b)("inlineCode",{parentName:"p"},"preg_match()")," or ",Object(r.b)("inlineCode",{parentName:"p"},"preg_match_all()")," and\nwhether any of ",Object(r.b)("inlineCode",{parentName:"p"},"PREG_SET_ORDER"),"/",Object(r.b)("inlineCode",{parentName:"p"},"PREG_PATTERN_ORDER"),"/",Object(r.b)("inlineCode",{parentName:"p"},"PREG_OFFSET_CAPTURE")," were used."),Object(r.b)("h3",{id:"php-is-inconsistent"},"PHP is Inconsistent"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"How do you get results and the count of the results?"),Object(r.b)("table",{parentName:"li"},Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",a({parentName:"tr"},{align:null}),"Value"),Object(r.b)("th",a({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"th"},"preg_match()")),Object(r.b)("th",a({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"th"},"preg_replace()")))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",a({parentName:"tr"},{align:null}),"Count"),Object(r.b)("td",a({parentName:"tr"},{align:null}),"Return type"),Object(r.b)("td",a({parentName:"tr"},{align:null}),"Argument reference")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",a({parentName:"tr"},{align:null}),"Values"),Object(r.b)("td",a({parentName:"tr"},{align:null}),"Argument reference"),Object(r.b)("td",a({parentName:"tr"},{align:null}),"Return type")))),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",a({parentName:"pre"},{className:"language-php"}),"$replaced = preg_replace($p, $r, $s, $count);\n$count    = preg_match($p, $s, $matched);\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"If you use ",Object(r.b)("inlineCode",{parentName:"p"},"PREG_OFFSET_CAPTURE")," and your subject isn't matched with the pattern; these are the results:"),Object(r.b)("table",{parentName:"li"},Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",a({parentName:"tr"},{align:null}),"Success"),Object(r.b)("th",a({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"th"},"preg_match()")),Object(r.b)("th",a({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"th"},"preg_match_all()")))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",a({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"true")),Object(r.b)("td",a({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"['match', 2]")),Object(r.b)("td",a({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"['match', 2']"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",a({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",a({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"''")),Object(r.b)("td",a({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"[null, -1]")))))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"preg_quote()")," quotes different characters for different PHP versions.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"PHP ",Object(r.b)("a",a({parentName:"p"},{href:"http://php.net/manual/en/function.preg-filter.php"}),"documentation")," promises that"),Object(r.b)("blockquote",{parentName:"li"},Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("inlineCode",{parentName:"p"},"preg_filter()")," is identical to ",Object(r.b)("inlineCode",{parentName:"p"},"preg_replace()")," except it only returns the (possibly transformed) subjects...")),Object(r.b)("p",{parentName:"li"},"but ",Object(r.b)("inlineCode",{parentName:"p"},"preg_filter()")," and ",Object(r.b)("inlineCode",{parentName:"p"},"preg_replace()")," actually return ",Object(r.b)("em",{parentName:"p"},"completely")," different values for ",Object(r.b)("strong",{parentName:"p"},"the same")," parameters.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Found ",Object(r.b)("inlineCode",{parentName:"p"},"$matches")," received from ",Object(r.b)("inlineCode",{parentName:"p"},"preg_match()")," have completely difference structure than those from ",Object(r.b)("inlineCode",{parentName:"p"},"preg_replace_callback()"),"."))),Object(r.b)("h3",{id:"php-is-deliberately-buggy"},"PHP is Deliberately buggy"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"preg_match")," and ",Object(r.b)("inlineCode",{parentName:"p"},"preg_match_all")," return either:"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"(int) x")," - a number of matches, if a match is found"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"(int) 0")," - if no matches are found"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"(bool) false")," - if a runtime error occurred")),Object(r.b)("p",{parentName:"li"},"So if you do just this:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",a({parentName:"pre"},{className:"language-php"}),"if (preg_match('//', '')) {\n")))),Object(r.b)("p",null,"there's no way of knowing whether your pattern is incorrect or whether it's correct but your subject isn't matched by\nyour pattern. You need to ",Object(r.b)("strong",{parentName:"p"},"remember")," to add an explicit ",Object(r.b)("inlineCode",{parentName:"p"},"false")," check each time you use it."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"All ",Object(r.b)("inlineCode",{parentName:"li"},"preg_*")," functions only return ",Object(r.b)("inlineCode",{parentName:"li"},"false"),"/",Object(r.b)("inlineCode",{parentName:"li"},"null"),"/",Object(r.b)("inlineCode",{parentName:"li"},"[]")," on error. You have to remember to call ",Object(r.b)("inlineCode",{parentName:"li"},"preg_last_error()")," to get\nsome insight in the nature of your error. Of course it only returns ",Object(r.b)("inlineCode",{parentName:"li"},"int"),"! So you have to look up that ",Object(r.b)("inlineCode",{parentName:"li"},"4"),' is\n"invalid utf8 sequence" and ',Object(r.b)("inlineCode",{parentName:"li"},"2"),' is "backtrack limit exceeded".'),Object(r.b)("li",{parentName:"ul"},"However, ",Object(r.b)("inlineCode",{parentName:"li"},"false"),"-check and ",Object(r.b)("inlineCode",{parentName:"li"},"preg_last_error()")," can only save you from runtime errors. So called compile errors don't\nwork that way and require either setting a custom error handler (bad idea) or read and clear just one of those errors\n(good luck with errors in ",Object(r.b)("inlineCode",{parentName:"li"},"preg_replace_callback()")," for example)."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"preg_filter()")," for arrays returns ",Object(r.b)("inlineCode",{parentName:"li"},"[]")," if an error occurred; even though ",Object(r.b)("inlineCode",{parentName:"li"},"[]")," is the perfectly valid result for this\nfunction. For example, it could have filtered out all values or its input was an empty array right from the beginning."),Object(r.b)("li",{parentName:"ul"},"For certain parameter types, some PCRE methods (e.g. ",Object(r.b)("inlineCode",{parentName:"li"},"preg_filter()"),") raise ",Object(r.b)("strong",{parentName:"li"},"fatal errors")," terminating the application.")),Object(r.b)("h2",{id:"t-regx-to-the-rescue"},"T-Regx to the rescue"),Object(r.b)("p",null,"That's why T-Regx happened. It addresses all of PHP regular expressions flaws:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",a({parentName:"li"},{href:"#its-descriptive"}),"It's descriptive")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",a({parentName:"li"},{href:"#its-for-developers-its-reliable"}),"It's for developers")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",a({parentName:"li"},{href:"#its-explicit"}),"It's explicit"))),Object(r.b)("h3",{id:"t-regx-is-descriptive"},"T-Regx is descriptive"),Object(r.b)("p",null,"What about now? Is the task easier?"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-php"}),"pattern('Bob')->replace('Bob likes applees')->first()->with('Robert');\n")),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-php"}),"pattern('Bob')->replace('Bob likes applees')->only($limit)->with('Robert');\n")),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-php"}),"pattern('Bob')->count('Bob likes applees');\n")),Object(r.b)("h3",{id:"t-regx-is-for-developers-its-reliable"},"T-Regx is for developers (it's reliable)"),Object(r.b)("p",null,"If you try to use an invalid regular expression in Java or JavaScript, you would probably get a ",Object(r.b)("inlineCode",{parentName:"p"},"SyntaxError")," exception\nand you'd be forced to handle it. Such things don't happen in PHP regular expressions."),Object(r.b)("p",null,"T-Regx always throws an exception and never issues any warnings, fatals, errors or notices."),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-php"}),"try {\n    return pattern('Foo')->match('Bar')->all();\n}\ncatch (CleanRegexException $exception) {\n    // handle the error\n}\n")),Object(r.b)("p",null,"Furthermore, T-Regx throws different exceptions for different errors:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"SubjectNotMatchedException"),Object(r.b)("li",{parentName:"ul"},"MalformedPatternException"),Object(r.b)("li",{parentName:"ul"},"FlagNotAllowedException"),Object(r.b)("li",{parentName:"ul"},"GroupNotMatchedException"),Object(r.b)("li",{parentName:"ul"},"NonexistentGroupException"),Object(r.b)("li",{parentName:"ul"},"InvalidReplacementException"),Object(r.b)("li",{parentName:"ul"},"InvalidReturnValueException"),Object(r.b)("li",{parentName:"ul"},"MissingSplitDelimiterGroupException"),Object(r.b)("li",{parentName:"ul"},"InternalCleanRegexException")),Object(r.b)("p",null,"They all extend ",Object(r.b)("inlineCode",{parentName:"p"},"CleanRegexException")," though."),Object(r.b)("p",null,"Further, furthermore, if you pass an invalid data type to any of the T-Regx methods, ",Object(r.b)("inlineCode",{parentName:"p"},"\\InvalidArgumentException")," is thrown."),Object(r.b)("h3",{id:"t-regx-is-explicit"},"T-Regx is explicit"),Object(r.b)("p",null,"Looking at T-Regx code, everyone can immediately see author's intentions and will be able to recognize what\nthe code ",Object(r.b)("strong",{parentName:"p"},"exactly")," does, right away."),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-php"}),"pattern('[A-Z]+')->match($subject)->all();\n// or\npattern('[A-Z]+')->replace($subject)->first()->with('word');\n")),Object(r.b)("p",null,"Looking at this code is like reading a book."),Object(r.b)("hr",null),Object(r.b)("p",null,"You will not find arrays of arrays of arrays in T-Regx API. Each functionality has a dedicated set of methods."),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-php"}),"pattern($pattern)->match($subject)->first(function (Match $match) {\n\n    $match->offset();           // offset of a matched occurrence\n\n    $match->group(2)->offset(); // offset of a matched capturing group\n\n    $match->hasGroup('uri');    // group validation\n\n    $match->hasGroup('2asd');   // throws \\InvalidArgumentException\n});\n")),Object(r.b)("p",null,"Read more about ",Object(r.b)("a",a({parentName:"p"},{href:"/docs/match-details"}),Object(r.b)("inlineCode",{parentName:"a"},"Match")," details"),"."),Object(r.b)("h3",{id:"t-regx-is-really-smart-with-its-exceptions"},"T-Regx is really smart with its exceptions"),Object(r.b)("p",null,"We really did put a lot of thoughts to make T-Regx secure, so for example these code snippets aren't a big deal:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-php"}),"pattern('\\w+')->replace($subject)->all()->callback(function (Match $match) {\n    try {\n        return pattern('intentionally (( invalid {{ pattern ')->match('Foo')->first();\n    }\n    catch (MalformedPatternException $ex) {\n        // it's all good and dandy with the catching of this exception :)\n        return $match;\n    }\n});\n")),Object(r.b)("p",null,"In other words, warnings and flags raised and set by the first ",Object(r.b)("inlineCode",{parentName:"p"},"pattern()->match()")," invalid call will be represented as\n",Object(r.b)("inlineCode",{parentName:"p"},"MalformedPatternException")," and won't interfere with the upper ",Object(r.b)("inlineCode",{parentName:"p"},"pattern()->replace()"),"."))}p.isMDXComponent=!0},210:function(e,t,n){var r=n(240)("wks"),a=n(224),i=n(212).Symbol;e.exports=function(e){return r[e]||(r[e]=i&&i[e]||(i||a)("Symbol."+e))}},211:function(e,t,n){var r=n(213),a=n(223);e.exports=n(234)?function(e,t,n){return r.setDesc(e,t,a(1,n))}:function(e,t,n){return e[t]=n,e}},212:function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},213:function(e,t){var n=Object;e.exports={create:n.create,getProto:n.getPrototypeOf,isEnum:{}.propertyIsEnumerable,getDesc:n.getOwnPropertyDescriptor,setDesc:n.defineProperty,setDescs:n.defineProperties,getKeys:n.keys,getNames:n.getOwnPropertyNames,getSymbols:n.getOwnPropertySymbols,each:[].forEach}},218:function(e,t,n){var r=n(212),a=n(219),i=n(211),l=n(221),o=n(235),c=function(e,t,n){var p,b,s,u,m=e&c.F,h=e&c.G,d=e&c.S,j=e&c.P,O=e&c.B,f=h?r:d?r[t]||(r[t]={}):(r[t]||{}).prototype,g=h?a:a[t]||(a[t]={}),N=g.prototype||(g.prototype={});for(p in h&&(n=t),n)s=((b=!m&&f&&p in f)?f:n)[p],u=O&&b?o(s,r):j&&"function"==typeof s?o(Function.call,s):s,f&&!b&&l(f,p,s),g[p]!=s&&i(g,p,u),j&&N[p]!=s&&(N[p]=s)};r.core=a,c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,e.exports=c},219:function(e,t){var n=e.exports={version:"1.2.6"};"number"==typeof __e&&(__e=n)},220:function(e,t){e.exports=function(e){try{return!!e()}catch(t){return!0}}},221:function(e,t,n){var r=n(212),a=n(211),i=n(224)("src"),l=Function.toString,o=(""+l).split("toString");n(219).inspectSource=function(e){return l.call(e)},(e.exports=function(e,t,n,l){"function"==typeof n&&(n.hasOwnProperty(i)||a(n,i,e[t]?""+e[t]:o.join(String(t))),n.hasOwnProperty("name")||a(n,"name",t)),e===r?e[t]=n:(l||delete e[t],a(e,t,n))})(Function.prototype,"toString",(function(){return"function"==typeof this&&this[i]||l.call(this)}))},222:function(e,t){e.exports={}},223:function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},224:function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},225:function(e,t,n){var r=n(226);e.exports=function(e){return Object(r(e))}},226:function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},227:function(e,t,n){var r=n(228);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},228:function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},229:function(e,t,n){"use strict";var r=n(239),a=n(241),i=n(222),l=n(242);e.exports=n(243)(Array,"Array",(function(e,t){this._t=l(e),this._i=0,this._k=t}),(function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,a(1)):a(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])}),"values"),i.Arguments=i.Array,r("keys"),r("values"),r("entries")},230:function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},231:function(e,t,n){var r=n(213).setDesc,a=n(230),i=n(210)("toStringTag");e.exports=function(e,t,n){e&&!a(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},233:function(e,t,n){var r=n(218);r(r.S+r.F,"Object",{assign:n(237)})},234:function(e,t,n){e.exports=!n(220)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},235:function(e,t,n){var r=n(236);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,a){return e.call(t,n,r,a)}}return function(){return e.apply(t,arguments)}}},236:function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},237:function(e,t,n){var r=n(213),a=n(225),i=n(227);e.exports=n(220)((function(){var e=Object.assign,t={},n={},r=Symbol(),a="abcdefghijklmnopqrst";return t[r]=7,a.split("").forEach((function(e){n[e]=e})),7!=e({},t)[r]||Object.keys(e({},n)).join("")!=a}))?function(e,t){for(var n=a(e),l=arguments,o=l.length,c=1,p=r.getKeys,b=r.getSymbols,s=r.isEnum;o>c;)for(var u,m=i(l[c++]),h=b?p(m).concat(b(m)):p(m),d=h.length,j=0;d>j;)s.call(m,u=h[j++])&&(n[u]=m[u]);return n}:Object.assign},238:function(e,t,n){n(229);var r=n(212),a=n(211),i=n(222),l=n(210)("iterator"),o=r.NodeList,c=r.HTMLCollection,p=o&&o.prototype,b=c&&c.prototype,s=i.NodeList=i.HTMLCollection=i.Array;p&&!p[l]&&a(p,l,s),b&&!b[l]&&a(b,l,s)},239:function(e,t,n){var r=n(210)("unscopables"),a=Array.prototype;null==a[r]&&n(211)(a,r,{}),e.exports=function(e){a[r][e]=!0}},240:function(e,t,n){var r=n(212),a=r["__core-js_shared__"]||(r["__core-js_shared__"]={});e.exports=function(e){return a[e]||(a[e]={})}},241:function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},242:function(e,t,n){var r=n(227),a=n(226);e.exports=function(e){return r(a(e))}},243:function(e,t,n){"use strict";var r=n(244),a=n(218),i=n(221),l=n(211),o=n(230),c=n(222),p=n(245),b=n(231),s=n(213).getProto,u=n(210)("iterator"),m=!([].keys&&"next"in[].keys()),h=function(){return this};e.exports=function(e,t,n,d,j,O,f){p(n,t,d);var g,N,y=function(e){if(!m&&e in _)return _[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},v=t+" Iterator",x="values"==j,w=!1,_=e.prototype,C=_[u]||_["@@iterator"]||j&&_[j],P=C||y(j);if(C){var R=s(P.call(new e));b(R,v,!0),!r&&o(_,"@@iterator")&&l(R,u,h),x&&"values"!==C.name&&(w=!0,P=function(){return C.call(this)})}if(r&&!f||!m&&!w&&_[u]||l(_,u,P),c[t]=P,c[v]=h,j)if(g={values:x?P:y("values"),keys:O?P:y("keys"),entries:x?y("entries"):P},f)for(N in g)N in _||i(_,N,g[N]);else a(a.P+a.F*(m||w),t,g);return g}},244:function(e,t){e.exports=!1},245:function(e,t,n){"use strict";var r=n(213),a=n(223),i=n(231),l={};n(211)(l,n(210)("iterator"),(function(){return this})),e.exports=function(e,t,n){e.prototype=r.create(l,{next:a(1,n)}),i(e,t+" Iterator")}},246:function(e,t,n){"use strict";var r=n(247),a={};a[n(210)("toStringTag")]="z",a+""!="[object z]"&&n(221)(Object.prototype,"toString",(function(){return"[object "+r(this)+"]"}),!0)},247:function(e,t,n){var r=n(228),a=n(210)("toStringTag"),i="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,l;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=(t=Object(e))[a])?n:i?r(t):"Object"==(l=r(t))&&"function"==typeof t.callee?"Arguments":l}},248:function(e,t,n){var r=n(225);n(249)("keys",(function(e){return function(t){return e(r(t))}}))},249:function(e,t,n){var r=n(218),a=n(219),i=n(220);e.exports=function(e,t){var n=(a.Object||{})[e]||Object[e],l={};l[e]=t(n),r(r.S+r.F*i((function(){n(1)})),"Object",l)}}}]);