(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{163:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return j}));var n=a(162),r=a(3),i=a(0),l=a.n(i),c=a(166),o=a(167),p=a(165),s=a(47),b=a.n(s),u=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t.prototype.render=function(){return l.a.createElement("div",{className:b.a.code},l.a.createElement(p.a,{className:"language-"+this.language},this.code))},Object(n.a)(t,[{key:"language",get:function(){return this.props.language||"php"}},{key:"code",get:function(){var e=this.props.children;if("string"==typeof e)return e;if(Array.isArray(e)&&e.every((function(e){return"string"==typeof e})))return e.join("");throw console.log(this.props.children),"Unexpected child of <Code>"}}]),t}(l.a.Component),m=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t.prototype.render=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(c.a,{defaultValue:"t-regx",values:this.values},this.props.tregx&&l.a.createElement(o.a,{value:"t-regx"},l.a.createElement(u,null,this.props.tregx)),this.props.php&&l.a.createElement(o.a,{value:"php"},l.a.createElement(u,null,this.props.php))))},Object(n.a)(t,[{key:"values",get:function(){return[this.props.tregx?{label:"T-Regx",value:"t-regx"}:{},this.props.php?{label:"PHP",value:"php"}:{}].filter((function(e){return e.value}))}}]),t}(l.a.Component),d=a(48),h=a.n(d),j=function(e){var t=e.text,a=e.children;return l.a.createElement("div",{className:h.a.result},l.a.createElement(u,{language:t?"text":"php"},a))}},91:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return b}));var n=a(2),r=a(6),i=(a(0),a(161)),l=a(163),c={id:"overview",title:"What's T-Regx?"},o={unversionedId:"overview",id:"overview",isDocsHomePage:!1,title:"What's T-Regx?",description:"T-Regx (T-Rex and RegExp) is a lightweight, high-level Regular Expressions library.",source:"@site/..\\docs\\overview.mdx",permalink:"/docs/overview",lastUpdatedAt:1586375884,sidebar:"docs",next:{title:"What's the point?",permalink:"/docs/whats-the-point"}},p=[{value:"Why is explicit interface so important?",id:"why-is-explicit-interface-so-important",children:[{value:"What&#39;s bad",id:"whats-bad",children:[]},{value:"What&#39;s good",id:"whats-good",children:[]}]},{value:"Brain Strain",id:"brain-strain",children:[]}],s={rightToc:p};function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"T-Regx (",Object(i.b)("em",{parentName:"p"},"T-Rex and RegExp"),") is a lightweight, high-level Regular Expressions library."),Object(i.b)("p",null,"Its main features are:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Being ",Object(i.b)("strong",{parentName:"p"},"made for developers"),":"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/delimiters"}),"Automatic delimiters")," for your patterns"),Object(i.b)("li",{parentName:"ul"},"Each and every unexpected situation ends in an exception"),Object(i.b)("li",{parentName:"ul"},"UTF-8 support out of the box"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/prepared-patterns"}),"Prepared Patterns")," handling unsafe characters (e.g. user-input)"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Cleaning the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/whats-the-point"}),"mess after PHP regular expressions API"),":"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"All false positives and false negatives are eliminated"),Object(i.b)("li",{parentName:"ul"},"Special values like ",Object(i.b)("inlineCode",{parentName:"li"},"null"),", ",Object(i.b)("inlineCode",{parentName:"li"},"false"),", ",Object(i.b)("inlineCode",{parentName:"li"},"''")," aren't used to indicate errors."),Object(i.b)("li",{parentName:"ul"},"Unifying differences between matching, replacing, splitting - all operations"),Object(i.b)("li",{parentName:"ul"},"Results aren't a dull ",Object(i.b)("inlineCode",{parentName:"li"},"string[][]")," array, but a dedicated ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/match-details"}),Object(i.b)("inlineCode",{parentName:"a"},"Match"))," details."),Object(i.b)("li",{parentName:"ul"},"Based on exceptions - Handles every warning, error, fatal error or notice."),Object(i.b)("li",{parentName:"ul"},"Relieving developers from ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#brain-strain"}),Object(i.b)("strong",{parentName:"a"},"brain strain")),":"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Being explicit and descriptive - (",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"#why-is-explicit-interface-so-important"}),"why is explicit interface so important?"),"):"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Each function obeys SRP"),Object(i.b)("li",{parentName:"ul"},"Functionalities are represented with methods (and not flags or default arguments)"),Object(i.b)("li",{parentName:"ul"},"No default parameters"),Object(i.b)("li",{parentName:"ul"},"No flags"),Object(i.b)("li",{parentName:"ul"},"No var-args")))),Object(i.b)("h2",{id:"why-is-explicit-interface-so-important"},"Why is explicit interface so important?"),Object(i.b)("p",null,"T-Regx' aim is to relieve programmers from ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"#brain-strain"}),Object(i.b)("strong",{parentName:"a"},"brain strain"))," while reading and writing code.\nOur mission is to make developers write/read a line and ",Object(i.b)("strong",{parentName:"p"},"immediately")," go on, without thinking about what it does or\nwhat side effects it may cause."),Object(i.b)("h3",{id:"whats-bad"},"What's bad"),Object(i.b)("p",null,"While reading this code..."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-php"}),"preg_match($pattern, $subject, $match);\n")),Object(i.b)("p",null,"...developers must stop for a moment and think:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Will this match the first occurrence? Or all of them?"),Object(i.b)("li",{parentName:"ul"},"Will the ",Object(i.b)("inlineCode",{parentName:"li"},"$subject")," match the pattern ",Object(i.b)("inlineCode",{parentName:"li"},"$pattern"),"?"),Object(i.b)("li",{parentName:"ul"},"Will this trigger a warning, if I mess up my regexp?"),Object(i.b)("li",{parentName:"ul"},"Will this return ",Object(i.b)("inlineCode",{parentName:"li"},"null"),"/",Object(i.b)("inlineCode",{parentName:"li"},"false")," or raise a warning, on error?"),Object(i.b)("li",{parentName:"ul"},"Will this return ",Object(i.b)("inlineCode",{parentName:"li"},"null"),"/",Object(i.b)("inlineCode",{parentName:"li"},"''"),", if the ",Object(i.b)("inlineCode",{parentName:"li"},"$subject")," doesn't match?"),Object(i.b)("li",{parentName:"ul"},"Is ",Object(i.b)("inlineCode",{parentName:"li"},"$match")," a ",Object(i.b)("inlineCode",{parentName:"li"},"string[]")," or a ",Object(i.b)("inlineCode",{parentName:"li"},"string[][]"),"?"),Object(i.b)("li",{parentName:"ul"},"Will this return ",Object(i.b)("strong",{parentName:"li"},"my value"),"? Or ",Object(i.b)("strong",{parentName:"li"},"my value")," nested in arrays?")),Object(i.b)("p",null,"What should be obvious, is now complicated and causes ",Object(i.b)("strong",{parentName:"p"},"many")," questions and assumptions for the reader."),Object(i.b)("h3",{id:"whats-good"},"What's good"),Object(i.b)("p",null,"While using T-Regx, some things are ",Object(i.b)("strong",{parentName:"p"},"obvious"),". For example:"),Object(i.b)(l.a,{tregx:"$result = pattern($pattern)->match($subject)->first();",php:'if (preg::match("/$pattern/", $subject, $match) === 1) {\n    $result = $match[0];\n} else {\n    throw new SubjectNotMatchedException();\n}',mdxType:"CodeTabs"}),Object(i.b)("p",null,"Here, ",Object(i.b)("inlineCode",{parentName:"p"},"$result")," ",Object(i.b)("strong",{parentName:"p"},"must")," contain the first occurrence. It must contain ",Object(i.b)("em",{parentName:"p"},"your value"),"."),Object(i.b)("p",null,"It will ",Object(i.b)("strong",{parentName:"p"},"never")," contain ",Object(i.b)("inlineCode",{parentName:"p"},"null"),", ",Object(i.b)("inlineCode",{parentName:"p"},"false")," or an empty array. ",Object(i.b)("inlineCode",{parentName:"p"},"MalformedPatternException")," would be thrown, if ",Object(i.b)("inlineCode",{parentName:"p"},"$pattern"),"\nis malformed. It would also throw ",Object(i.b)("inlineCode",{parentName:"p"},"SubjectNotMatchedException")," if the ",Object(i.b)("inlineCode",{parentName:"p"},"$pattern")," doesn't match the ",Object(i.b)("inlineCode",{parentName:"p"},"$subject"),".\nEven if ",Object(i.b)("inlineCode",{parentName:"p"},"first()")," does return ",Object(i.b)("inlineCode",{parentName:"p"},"''"),', it\'s only because it supposed to do that; that is "when a pattern matched\na string of length 0".'),Object(i.b)("p",null,"It also never raises any warnings or fatal errors."),Object(i.b)("h2",{id:"brain-strain"},"Brain Strain"))}b.isMDXComponent=!0}}]);