(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{179:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return r})),t.d(a,"rightToc",(function(){return p})),t.d(a,"default",(function(){return i}));t(217);var n=t(209),c=t(214),l=t(215);function b(){return(b=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}const r={id:"match",title:"Match a subject"},p=[{value:"Test a subject",id:"test-a-subject",children:[]},{value:"Retrieve matches",id:"retrieve-matches",children:[{value:"Many",id:"many",children:[]},{value:"One",id:"one",children:[]}]},{value:"Unmatched subject",id:"unmatched-subject",children:[{value:"<code>all()</code>/<code>only()</code>",id:"allonly",children:[]},{value:"<code>first()</code>",id:"first",children:[]}]},{value:"Protect the developer",id:"protect-the-developer",children:[]}],m={rightToc:p},o="wrapper";function i({components:e,...a}){return Object(n.b)(o,b({},m,a,{components:e,mdxType:"MDXLayout"}),Object(n.b)("p",null,"Using ",Object(n.b)("inlineCode",{parentName:"p"},"pattern()->match()")," you can:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Test a subject against a pattern: ",Object(n.b)("a",b({parentName:"li"},{href:"#test-a-subject"}),Object(n.b)("inlineCode",{parentName:"a"},"test()")),"/",Object(n.b)("a",b({parentName:"li"},{href:"#test-a-subject"}),Object(n.b)("inlineCode",{parentName:"a"},"fails()"))),Object(n.b)("li",{parentName:"ul"},"Retrieve matches from the subject: ",Object(n.b)("a",b({parentName:"li"},{href:"#one"}),Object(n.b)("inlineCode",{parentName:"a"},"first()")),"/",Object(n.b)("a",b({parentName:"li"},{href:"#many"}),Object(n.b)("inlineCode",{parentName:"a"},"all()")),"/",Object(n.b)("a",b({parentName:"li"},{href:"#many"}),Object(n.b)("inlineCode",{parentName:"a"},"only()"))),Object(n.b)("li",{parentName:"ul"},"Get capturing groups from matches: ",Object(n.b)("a",b({parentName:"li"},{href:"/docs/match-details"}),Object(n.b)("inlineCode",{parentName:"a"},"group()")),"/",Object(n.b)("a",b({parentName:"li"},{href:"/docs/match-details"}),Object(n.b)("inlineCode",{parentName:"a"},"Match.group()")),"/",Object(n.b)("a",b({parentName:"li"},{href:"/docs/match-details"}),Object(n.b)("inlineCode",{parentName:"a"},"groups()"))),Object(n.b)("li",{parentName:"ul"},"Invoke callbacks for matches: ",Object(n.b)("a",b({parentName:"li"},{href:"/docs/match-first#use-first-with-callback"}),Object(n.b)("inlineCode",{parentName:"a"},"first()")),"/",Object(n.b)("a",b({parentName:"li"},{href:"/docs/match-for-first"}),Object(n.b)("inlineCode",{parentName:"a"},"forFirst()")),"/",Object(n.b)("a",b({parentName:"li"},{href:"/docs/match-for-each"}),Object(n.b)("inlineCode",{parentName:"a"},"forEach()")),"/",Object(n.b)("a",b({parentName:"li"},{href:"/docs/match-map"}),Object(n.b)("inlineCode",{parentName:"a"},"map()")),"/",Object(n.b)("a",b({parentName:"li"},{href:"/docs/match-flat-map"}),Object(n.b)("inlineCode",{parentName:"a"},"flatMap()")))),Object(n.b)("h2",{id:"test-a-subject"},"Test a subject"),Object(n.b)("p",null,"If you only need to check whether a pattern matches a subject, use:"),Object(n.b)(c.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(l.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"pattern('[0-9]+')->test(\"I'm 19 years old\");\n"))),Object(n.b)(l.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"preg::match('/[0-9]+/', \"I'm 19 years old\") > 0;\n")))),Object(n.b)("p",null,"...or to check whether it doesn't:"),Object(n.b)(c.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(l.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"pattern('[0-9]{3}')->fails(\"I'm 19 years old\");\n"))),Object(n.b)(l.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"preg::match('/[0-9]{3}/', \"I'm 19 years old\") === 0;\n")))),Object(n.b)("p",null,"Of course ",Object(n.b)("inlineCode",{parentName:"p"},"pattern()->match()")," throws an exception if the pattern is invalid (or in case of any other error)."),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"You can also use ",Object(n.b)("inlineCode",{parentName:"p"},"pattern()->match()->test()")," and ",Object(n.b)("inlineCode",{parentName:"p"},"pattern()->match()->fails()"),".")),Object(n.b)("h2",{id:"retrieve-matches"},"Retrieve matches"),Object(n.b)("h3",{id:"many"},"Many"),Object(n.b)("p",null,"You can easily retrieve matched occurrences of a pattern in your subject."),Object(n.b)(c.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(l.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"pattern('[0-9]+')->match(\"I'm 19. I was born in 1999, on May 12\")->all();\n"))),Object(n.b)(l.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"preg::match_all('/[0-9]+/', \"I'm 19. I was born in 1999, on May 12\", $matches);\nreturn $matches[0];\n")))),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"['19', '1999', '12']\n")),Object(n.b)("p",null,"You can limit your matches with ",Object(n.b)("inlineCode",{parentName:"p"},"only(int)"),"."),Object(n.b)(c.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(l.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"pattern('[0-9]+')->match(\"I'm 19. I was born in 1999, on May 12\")->only(2);\n"))),Object(n.b)(l.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"preg::match_all('/[0-9]+/', \"I'm 19. I was born in 1999, on May 12\", $matches);\nreturn array_slice($matches[0], 0, 2);\n")))),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"['19', '1999']\n")),Object(n.b)("h3",{id:"one"},"One"),Object(n.b)("p",null,"To get the first occurrence of a matched pattern, call ",Object(n.b)("a",b({parentName:"p"},{href:"/docs/match-first"}),Object(n.b)("inlineCode",{parentName:"a"},"first()")),"."),Object(n.b)(c.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(l.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"pattern('[0-9]+')->match(\"I'm 19 years old. I was born in 1999\")->first();\n"))),Object(n.b)(l.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"if (preg::match('/[0-9]+/', \"I'm 19 years old. I was born in 1999\", $match)) {\n    return $match[0];\n}\nthrow new SubjectNotMatchedException();\n")))),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"'19'\n")),Object(n.b)("p",null,"Read on the ",Object(n.b)("a",b({parentName:"p"},{href:"/docs/match-first"}),"next page")," to learn more about ",Object(n.b)("a",b({parentName:"p"},{href:"/docs/match-first"}),Object(n.b)("inlineCode",{parentName:"a"},"first()")),"."),Object(n.b)("h2",{id:"unmatched-subject"},"Unmatched subject"),Object(n.b)("h3",{id:"allonly"},Object(n.b)("inlineCode",{parentName:"h3"},"all()"),"/",Object(n.b)("inlineCode",{parentName:"h3"},"only()")),Object(n.b)("p",null,"If you call ",Object(n.b)("inlineCode",{parentName:"p"},"all()")," or ",Object(n.b)("inlineCode",{parentName:"p"},"only()")," on a subject that doesn't match your pattern, you'll receive an empty array."),Object(n.b)(c.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(l.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"pattern('\\d+')->match('Word')->all();\n"))),Object(n.b)(l.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"preg::match_all('/\\d+/', 'Word', $match);\nreturn $match[0];\n")))),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"[]\n")),Object(n.b)("h3",{id:"first"},Object(n.b)("inlineCode",{parentName:"h3"},"first()")),Object(n.b)("p",null,"If, however, subject doesn't match your pattern and you use ",Object(n.b)("inlineCode",{parentName:"p"},"first()")," - ",Object(n.b)("inlineCode",{parentName:"p"},"SubjectNotMatchedException")," is thrown."),Object(n.b)(c.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(l.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"try {\n    return pattern('\\d+')->match('Word')->first();\n}\ncatch (SubjectNotMatchedException $e) {\n    // handle\n}\n"))),Object(n.b)(l.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"try {\n    if (preg::match('/\\d+/', 'Word', $match)) {\n        return $match[0];\n    }\n    throw new SubjectNotMatchedException();\n}\ncatch (SubjectNotMatchedException $e) {\n    // handle\n}\n")))),Object(n.b)("h2",{id:"protect-the-developer"},"Protect the developer"),Object(n.b)("p",null,"Please, keep in mind that T-Regx aims to relieve you (a programmer) from any ",Object(n.b)("a",b({parentName:"p"},{href:"/docs/overview#brain-strain"}),Object(n.b)("strong",{parentName:"a"},"brain strain")),",\ntherefore if you "))}i.isMDXComponent=!0},214:function(e,a,t){"use strict";var n=t(0),c=t.n(n),l=t(216),b=t.n(l);a.a=function(e){const{block:a,children:t,defaultValue:l,values:r}=e,[p,m]=Object(n.useState)(l);return c.a.createElement("div",null,c.a.createElement("ul",{className:b()("tabs",{"tabs--block":a})},r.map(({value:e,label:a})=>c.a.createElement("li",{className:b()("tab-item",{"tab-item--active":p===e}),key:e,onClick:()=>m(e)},a))),c.a.createElement("div",{className:"margin-vert--md"},n.Children.toArray(t).filter(e=>e.props.value===p)[0]))}},215:function(e,a,t){"use strict";var n=t(0),c=t.n(n);a.a=function(e){return c.a.createElement("div",null,e.children)}}}]);