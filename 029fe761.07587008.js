(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{89:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return p}));n(0);var a=n(207);function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}const r={title:"Support for PHP 5.3",author:"Daniel Wilkowski",authorFBID:0x5af34da0d14b},o=[],l={rightToc:o},c="wrapper";function p({components:e,...t}){return Object(a.b)(c,i({},l,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Hello there! Another update, this time there's more to it - much has changed."),Object(a.b)("p",null,"Here's a quick list:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"ReadMe.md is now more throughout"),Object(a.b)("li",{parentName:"ul"},"CleanRegex runs on ",Object(a.b)("a",i({parentName:"li"},{href:"https://travis-ci.org/T-Regx/T-Regx"}),"Travis")," and ",Object(a.b)("a",i({parentName:"li"},{href:"https://coveralls.io/github/T-Regx/T-Regx?branch=master"}),"Coveralls")),Object(a.b)("li",{parentName:"ul"},"The library can now be required using ",Object(a.b)("a",{href:"https://packagist.org/packages/rawr/t-regx",target:"_blank"},"Composer")),Object(a.b)("li",{parentName:"ul"},"CleanRegex supports ",Object(a.b)("inlineCode",{parentName:"li"},"PHP 5.3")),Object(a.b)("li",{parentName:"ul"},"Handling compile pattern exceptions and runtime pattern exceptions"),Object(a.b)("li",{parentName:"ul"},"Passing callbacks with detailed object parameters (",Object(a.b)("inlineCode",{parentName:"li"},"Match")," and ",Object(a.b)("inlineCode",{parentName:"li"},"ReplaceMatch"),")."),Object(a.b)("li",{parentName:"ul"},"Add a facade ",Object(a.b)("inlineCode",{parentName:"li"},"Pattern::of()"))),Object(a.b)("p",null,"In addition, I'd like to give a quick thanks to Bartek - my friend currently working at Thulium - for a nice suggestion :)"),Object(a.b)("p",null,"I plan on supporting older versions of PHP by maintaining two branches: ",Object(a.b)("inlineCode",{parentName:"p"},"master")," and ",Object(a.b)("inlineCode",{parentName:"p"},"master-php5.3"),". I will develop\nCleanRegex on ",Object(a.b)("inlineCode",{parentName:"p"},"master")," with PHP 7.1, and with each release, I will merge ",Object(a.b)("inlineCode",{parentName:"p"},"master")," to ",Object(a.b)("inlineCode",{parentName:"p"},"master-php5.3")," and remove any\nPHP 5.3 incompatibilities (type hints, scalar arguments, etc.)."),Object(a.b)("p",null,"I will not remove other incompatibilities, like missing constants, nonexistent methods, etc. because code on ",Object(a.b)("inlineCode",{parentName:"p"},"master"),"\nwill be developed not to relay on those that much. I will also write unit tests for breaking PHP changes. Some of them\nwill be skipped for PHP 7.1+, and some for PHP <7.1. "),Object(a.b)("p",null,"PS: Just letting you know that I plan on investing more time in maintaining CleanRegex now :)"))}p.isMDXComponent=!0}}]);