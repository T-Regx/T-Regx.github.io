(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{112:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return p}));var c=a(2),r=a(6),n=(a(0),a(167)),i=a(168),b={id:"match",title:"Match a subject"},l={unversionedId:"match",id:"match",isDocsHomePage:!1,title:"Match a subject",description:"Using pattern()->match() you can:",source:"@site/..\\docs\\match.mdx",permalink:"/docs/match",lastUpdatedAt:1599993422,sidebar:"docs",previous:{title:"What's the point?",permalink:"/docs/whats-the-point"},next:{title:"First occurrence",permalink:"/docs/match-first"}},s=[{value:"Test a subject",id:"test-a-subject",children:[]},{value:"Retrieve the first match",id:"retrieve-the-first-match",children:[]},{value:"Retrieve multiple matches",id:"retrieve-multiple-matches",children:[]}],o={rightToc:s};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(n.b)("wrapper",Object(c.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,"Using ",Object(n.b)("inlineCode",{parentName:"p"},"pattern()->match()")," you can:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Test a subject against a pattern: ",Object(n.b)("a",Object(c.a)({parentName:"li"},{href:"#test-a-subject"}),Object(n.b)("inlineCode",{parentName:"a"},"test()")),"/",Object(n.b)("a",Object(c.a)({parentName:"li"},{href:"#test-a-subject"}),Object(n.b)("inlineCode",{parentName:"a"},"fails()"))),Object(n.b)("li",{parentName:"ul"},"Retrieve matches from the subject: ",Object(n.b)("a",Object(c.a)({parentName:"li"},{href:"/docs/match-first#use-first-with-callback"}),Object(n.b)("inlineCode",{parentName:"a"},"first()")),"/",Object(n.b)("a",Object(c.a)({parentName:"li"},{href:"#many"}),Object(n.b)("inlineCode",{parentName:"a"},"all()")),"/",Object(n.b)("a",Object(c.a)({parentName:"li"},{href:"#many"}),Object(n.b)("inlineCode",{parentName:"a"},"only()"))),Object(n.b)("li",{parentName:"ul"},"Get capturing groups from matches: ",Object(n.b)("a",Object(c.a)({parentName:"li"},{href:"/docs/match-details"}),Object(n.b)("inlineCode",{parentName:"a"},"group()")),"/",Object(n.b)("a",Object(c.a)({parentName:"li"},{href:"/docs/match-details"}),Object(n.b)("inlineCode",{parentName:"a"},"Match.group()")),"/",Object(n.b)("a",Object(c.a)({parentName:"li"},{href:"/docs/match-details"}),Object(n.b)("inlineCode",{parentName:"a"},"groups()"))),Object(n.b)("li",{parentName:"ul"},"Invoke callbacks for matches: ",Object(n.b)("a",Object(c.a)({parentName:"li"},{href:"/docs/match-first#use-first-with-callback"}),Object(n.b)("inlineCode",{parentName:"a"},"first()")),"/",Object(n.b)("a",Object(c.a)({parentName:"li"},{href:"/docs/match-find-first"}),Object(n.b)("inlineCode",{parentName:"a"},"findFirst()")),"/",Object(n.b)("a",Object(c.a)({parentName:"li"},{href:"/docs/match-for-each"}),Object(n.b)("inlineCode",{parentName:"a"},"forEach()")),"/",Object(n.b)("a",Object(c.a)({parentName:"li"},{href:"/docs/match-map"}),Object(n.b)("inlineCode",{parentName:"a"},"map()")),"/",Object(n.b)("a",Object(c.a)({parentName:"li"},{href:"/docs/match-flat-map"}),Object(n.b)("inlineCode",{parentName:"a"},"flatMap()")))),Object(n.b)("h2",{id:"test-a-subject"},"Test a subject"),Object(n.b)("p",null,"If you only need to check whether a pattern matches a subject, use:"),Object(n.b)(i.a,{tregx:"pattern('[0-9]+')->test(\"I'm 19 years old\");",php:"preg::match('/[0-9]+/', \"I'm 19 years old\") > 0;",mdxType:"CodeTabs"}),Object(n.b)("p",null,"...or to check whether it doesn't:"),Object(n.b)(i.a,{tregx:"pattern('[0-9]{3}')->fails(\"I'm 19 years old\");",php:"preg::match('/[0-9]{3}/', \"I'm 19 years old\") === 0;",mdxType:"CodeTabs"}),Object(n.b)("p",null,"Of course ",Object(n.b)("inlineCode",{parentName:"p"},"pattern()->match()")," throws an exception if the pattern is invalid (or in case of any other error)."),Object(n.b)("h2",{id:"retrieve-the-first-match"},"Retrieve the first match"),Object(n.b)("p",null,"To get the first occurrence of a matched pattern, call ",Object(n.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/match-first#use-first-with-callback"}),Object(n.b)("inlineCode",{parentName:"a"},"first()")),"."),Object(n.b)(i.a,{tregx:"pattern('[0-9]+')->match(\"I'm 19 years old. I was born in 1999\")->first();",php:"if (preg::match('/[0-9]+/', \"I'm 19 years old. I was born in 1999\", $match)) {\n    return $match[0];\n}\nthrow new SubjectNotMatchedException();",mdxType:"CodeTabs"}),Object(n.b)(i.b,{mdxType:"Result"},"'19'"),Object(n.b)("p",null,"Read on the ",Object(n.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/match-first"}),"next page")," to learn more about ",Object(n.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/match-first#use-first-with-callback"}),Object(n.b)("inlineCode",{parentName:"a"},"first()")),"."),Object(n.b)("h2",{id:"retrieve-multiple-matches"},"Retrieve multiple matches"),Object(n.b)("p",null,"You can easily retrieve matched occurrences of a pattern in your subject."),Object(n.b)(i.a,{tregx:"pattern('[0-9]+')->match(\"I'm 19. I was born in 1999, on May 12\")->all();",php:"preg::match_all('/[0-9]+/', \"I'm 19. I was born in 1999, on May 12\", $matches);\nreturn $matches[0];",mdxType:"CodeTabs"}),Object(n.b)(i.b,{mdxType:"Result"},"['19', '1999', '12']"),Object(n.b)("p",null,"You can limit your matches with ",Object(n.b)("inlineCode",{parentName:"p"},"only(int)"),"."),Object(n.b)(i.a,{tregx:"pattern('[0-9]+')->match(\"I'm 19. I was born in 1999, on May 12\")->only(2);",php:"preg::match_all('/[0-9]+/', \"I'm 19. I was born in 1999, on May 12\", $matches);\nreturn array_slice($matches[0], 0, 2);",mdxType:"CodeTabs"}),Object(n.b)(i.b,{mdxType:"Result"},"['19', '1999']"))}p.isMDXComponent=!0},168:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return d}));var c=a(0),r=a.n(c),n=a(171),i=a(172),b=a(170),l=a(47),s=a.n(l);class o extends r.a.Component{render(){return r.a.createElement("div",{className:s.a.code},r.a.createElement(b.a,{className:"language-"+this.language},this.code))}get language(){return this.props.language||"php"}get code(){const e=this.props.children;if("string"==typeof e)return e;if(Array.isArray(e)&&e.every(e=>"string"==typeof e))return e.join("");throw console.log(this.props.children),"Unexpected child of <Code>"}}var p=({tregx:e,php:t})=>{const a=[e?{label:"T-Regx",value:"t-regx"}:{},t?{label:"PHP",value:"php"}:{}].filter(e=>e.value);return r.a.createElement(n.a,{defaultValue:"t-regx",values:a},e&&r.a.createElement(i.a,{value:"t-regx"},r.a.createElement(o,null,e)),t&&r.a.createElement(i.a,{value:"php"},r.a.createElement(o,null,t)))},m=a(48),h=a.n(m),d=({text:e,children:t})=>r.a.createElement("div",{className:h.a.result},r.a.createElement(o,{language:e?"text":"php"},t))}}]);