(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{200:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=r.a.createContext({}),b=function(e){var t=r.a.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=b(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=b(a),m=n,d=s["".concat(i,".").concat(m)]||s[m]||p[m]||c;return a?r.a.createElement(d,o(o({ref:t},u),{},{components:a})):r.a.createElement(d,o({ref:t},u))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,i=new Array(c);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var u=2;u<c;u++)i[u]=a[u];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},202:function(e,t,a){"use strict";a.d(t,"a",(function(){return j})),a.d(t,"b",(function(){return g}));var n=a(0),r=a.n(n),c=a(206),i=a(201),o=a(55),l=a.n(o),u=37,b=39;var s=function(e){var t=e.lazy,a=e.block,o=e.defaultValue,s=e.values,p=e.groupId,m=e.className,d=Object(c.a)(),f=d.tabGroupChoices,h=d.setTabGroupChoices,j=Object(n.useState)(o),O=j[0],y=j[1],v=n.Children.toArray(e.children);if(null!=p){var g=f[p];null!=g&&g!==O&&s.some((function(e){return e.value===g}))&&y(g)}var N=function(e){y(e),null!=p&&h(p,e)},x=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":a},m)},s.map((function(e){var t=e.value,a=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":O===t,className:Object(i.a)("tabs__item",l.a.tabItem,{"tabs__item--active":O===t}),key:t,ref:function(e){return x.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case b:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case u:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(x,e.target,e)},onFocus:function(){return N(t)},onClick:function(){N(t)}},a)}))),t?Object(n.cloneElement)(v.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return Object(n.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))};var p=function(e){var t=e.children,a=e.hidden,n=e.className;return r.a.createElement("div",{role:"tabpanel",hidden:a,className:n},t)},m=a(207),d=a(56),f=a.n(d),h=function(e){var t=e.children,a=e.language;return r.a.createElement("div",{className:f.a.code},r.a.createElement(m.a,{className:"language-"+(a||"php")},function(e){if("string"==typeof e)return e;if(!Array.isArray(e))throw console.log(this.props.children),"Unexpected child of <Code>";if(e.every((function(e){return"string"==typeof e})))return e.join("")}(t)))};var j=function(e){var t=e.tregx,a=e.php;return r.a.createElement(s,{defaultValue:"t-regx",values:O(t,a)},t&&r.a.createElement(p,{value:"t-regx"},r.a.createElement(h,null,t)),a&&r.a.createElement(p,{value:"php"},r.a.createElement(h,null,a)))};function O(e,t){return[e?{label:"T-Regx",value:"t-regx"}:{},t?{label:"PHP",value:"php"}:{}].filter((function(e){return e.value}))}var y=a(57),v=a.n(y),g=function(e){var t=e.text,a=e.children;return r.a.createElement("div",{className:v.a.result},r.a.createElement(h,{language:t?"text":"php"},a))}},79:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return u})),a.d(t,"default",(function(){return s}));var n=a(3),r=a(7),c=(a(0),a(200)),i=a(202),o={id:"match",title:"Match a subject"},l={unversionedId:"match",id:"match",isDocsHomePage:!1,title:"Match a subject",description:"Using pattern()->match() you can:",source:"@site/../docs/match.mdx",slug:"/match",permalink:"/docs/match",version:"current",lastUpdatedAt:1611615683,sidebar:"docs",previous:{title:"Migrate to T-Regx",permalink:"/docs/introduction-clean"},next:{title:"First occurrence",permalink:"/docs/match-first"}},u=[{value:"Test a subject",id:"test-a-subject",children:[]},{value:"Retrieve the first match",id:"retrieve-the-first-match",children:[]},{value:"Retrieve multiple matches",id:"retrieve-multiple-matches",children:[]}],b={toc:u};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Using ",Object(c.b)("inlineCode",{parentName:"p"},"pattern()->match()")," you can:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Test a subject against a pattern: ",Object(c.b)("a",{parentName:"li",href:"#test-a-subject"},Object(c.b)("inlineCode",{parentName:"a"},"test()")),"/",Object(c.b)("a",{parentName:"li",href:"#test-a-subject"},Object(c.b)("inlineCode",{parentName:"a"},"fails()"))),Object(c.b)("li",{parentName:"ul"},"Retrieve matches from the subject: ",Object(c.b)("a",{parentName:"li",href:"#one"},Object(c.b)("inlineCode",{parentName:"a"},"first()")),"/",Object(c.b)("a",{parentName:"li",href:"#many"},Object(c.b)("inlineCode",{parentName:"a"},"all()")),"/",Object(c.b)("a",{parentName:"li",href:"#many"},Object(c.b)("inlineCode",{parentName:"a"},"only()"))),Object(c.b)("li",{parentName:"ul"},"Get capturing groups from matches: ",Object(c.b)("a",{parentName:"li",href:"/docs/match-details"},Object(c.b)("inlineCode",{parentName:"a"},"group()")),"/",Object(c.b)("a",{parentName:"li",href:"/docs/match-details"},Object(c.b)("inlineCode",{parentName:"a"},"Detail.group()")),"/",Object(c.b)("a",{parentName:"li",href:"/docs/match-details"},Object(c.b)("inlineCode",{parentName:"a"},"groups()"))),Object(c.b)("li",{parentName:"ul"},"Invoke callbacks for matches: ",Object(c.b)("a",{parentName:"li",href:"#one"},Object(c.b)("inlineCode",{parentName:"a"},"first()")),"/",Object(c.b)("a",{parentName:"li",href:"/docs/match-find-first"},Object(c.b)("inlineCode",{parentName:"a"},"findFirst()")),"/",Object(c.b)("a",{parentName:"li",href:"/docs/match-for-each"},Object(c.b)("inlineCode",{parentName:"a"},"forEach()")),"/",Object(c.b)("a",{parentName:"li",href:"/docs/match-map"},Object(c.b)("inlineCode",{parentName:"a"},"map()")),"/",Object(c.b)("a",{parentName:"li",href:"/docs/match-flat-map"},Object(c.b)("inlineCode",{parentName:"a"},"flatMap()")))),Object(c.b)("h2",{id:"test-a-subject"},"Test a subject"),Object(c.b)("p",null,"If you only need to check whether a pattern matches a subject, use:"),Object(c.b)(i.a,{tregx:"pattern('[0-9]+')->test(\"I'm 19 years old\");",php:"preg::match('/[0-9]+/', \"I'm 19 years old\") > 0;",mdxType:"CodeTabs"}),Object(c.b)("p",null,"...or to check whether it doesn't:"),Object(c.b)(i.a,{tregx:"pattern('[0-9]{3}')->fails(\"I'm 19 years old\");",php:"preg::match('/[0-9]{3}/', \"I'm 19 years old\") === 0;",mdxType:"CodeTabs"}),Object(c.b)("p",null,"Of course ",Object(c.b)("inlineCode",{parentName:"p"},"pattern()->match()")," throws an exception if the pattern is invalid (or in case of any other error)."),Object(c.b)("h2",{id:"retrieve-the-first-match"},"Retrieve the first match"),Object(c.b)("p",null,"To get the first occurrence of a matched pattern, call ",Object(c.b)("a",{parentName:"p",href:"#one"},Object(c.b)("inlineCode",{parentName:"a"},"first()")),"."),Object(c.b)(i.a,{tregx:"pattern('[0-9]+')->match(\"I'm 19 years old. I was born in 1999\")->first();",php:"if (preg::match('/[0-9]+/', \"I'm 19 years old. I was born in 1999\", $match)) {\n    return $match[0];\n}\nthrow new SubjectNotMatchedException();",mdxType:"CodeTabs"}),Object(c.b)(i.b,{mdxType:"Result"},"'19'"),Object(c.b)("p",null,"Read on the ",Object(c.b)("a",{parentName:"p",href:"/docs/match-first"},"next page")," to learn more about ",Object(c.b)("a",{parentName:"p",href:"#one"},Object(c.b)("inlineCode",{parentName:"a"},"first()")),"."),Object(c.b)("h2",{id:"retrieve-multiple-matches"},"Retrieve multiple matches"),Object(c.b)("p",null,"You can easily retrieve matched occurrences of a pattern in your subject."),Object(c.b)(i.a,{tregx:"pattern('[0-9]+')->match(\"I'm 19. I was born in 1999, on May 12\")->all();",php:"preg::match_all('/[0-9]+/', \"I'm 19. I was born in 1999, on May 12\", $matches);\nreturn $matches[0];",mdxType:"CodeTabs"}),Object(c.b)(i.b,{mdxType:"Result"},"['19', '1999', '12']"),Object(c.b)("p",null,"You can limit your matches with ",Object(c.b)("inlineCode",{parentName:"p"},"only(int)"),"."),Object(c.b)(i.a,{tregx:"pattern('[0-9]+')->match(\"I'm 19. I was born in 1999, on May 12\")->only(2);",php:"preg::match_all('/[0-9]+/', \"I'm 19. I was born in 1999, on May 12\", $matches);\nreturn array_slice($matches[0], 0, 2);",mdxType:"CodeTabs"}),Object(c.b)(i.b,{mdxType:"Result"},"['19', '1999']"))}s.isMDXComponent=!0}}]);