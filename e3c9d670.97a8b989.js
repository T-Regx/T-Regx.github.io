(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{191:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return p})),t.d(a,"rightToc",(function(){return r})),t.d(a,"default",(function(){return m}));t(211);var n=t(207),l=t(208),c=t(209);function b(){return(b=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}const p={id:"count",title:"Count occurrences"},r=[{value:"Unmatched",id:"unmatched",children:[]},{value:"Invalid",id:"invalid",children:[]},{value:"Performance",id:"performance",children:[]}],u={rightToc:r},o="wrapper";function m({components:e,...a}){return Object(n.b)(o,b({},u,a,{components:e,mdxType:"MDXLayout"}),Object(n.b)("p",null,"Sometimes, you might stumble upon a situation where an amount of occurrences is needed, but not the occurrences\nthemselves. In that case, use ",Object(n.b)("inlineCode",{parentName:"p"},"pattern()->count()"),":"),Object(n.b)(l.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(c.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"return pattern('[aeiouy]')->count('Computer');\n"))),Object(n.b)(c.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"return preg::match_all('/[aeiouy]/', 'Computer');\n")))),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"3\n")),Object(n.b)("p",null,"Also, ",Object(n.b)("inlineCode",{parentName:"p"},"MatchPattern")," is ",Object(n.b)("a",b({parentName:"p"},{href:"https://www.php.net/manual/en/class.countable.php"}),Object(n.b)("inlineCode",{parentName:"a"},"\\Countable")),", so you can use PHP build-in methods, like ",Object(n.b)("inlineCode",{parentName:"p"},"count()"),":"),Object(n.b)(l.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(c.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"$match = pattern('[aeiouy]')->match('Computer');\n\ncount($match);\n"))),Object(n.b)(c.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"preg::match_all('/[aeiouy]/', 'Computer', $match);\n\ncount($match[0]);\n")))),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"3\n")),Object(n.b)("h2",{id:"unmatched"},"Unmatched"),Object(n.b)("p",null,"If your pattern does not match the subject, ",Object(n.b)("inlineCode",{parentName:"p"},"count()")," simply returns ",Object(n.b)("inlineCode",{parentName:"p"},"0"),"."),Object(n.b)(l.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(c.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"return pattern('[0-9]')->count('Computer');\n"))),Object(n.b)(c.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"return preg::match_all('/[0-9]/', 'Computer');\n")))),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"0\n")),Object(n.b)("h2",{id:"invalid"},"Invalid"),Object(n.b)("p",null,"Every use of ",Object(n.b)("inlineCode",{parentName:"p"},"pattern()")," with invalid pattern will cause ",Object(n.b)("inlineCode",{parentName:"p"},"CompileSafeRegexException"),"."),Object(n.b)(l.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(c.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"try {\n    pattern('[aeiouy')->count('Computer');       // malformed pattern\n}\ncatch (CompileSafeRegexException $ex) {\n    echo $ex->getMessage();\n}\n"))),Object(n.b)(c.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"try {\n    preg::match_all('/[aeiouy/', 'Computer');    // malformed pattern\n}\ncatch (CompileSafeRegexException $ex) {\n    echo $ex->getMessage();\n}\n")))),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-text"}),"preg_match_all(): Compilation failed: missing terminating ] for character class at offset 7\n")),Object(n.b)("p",null,"(caused by E_WARNING)"),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"In ",Object(n.b)("inlineCode",{parentName:"p"},"PHP")," snippet, ",Object(n.b)("inlineCode",{parentName:"p"},"CompileSafeRegexException")," is thrown because safe-regex ",Object(n.b)("inlineCode",{parentName:"p"},"preg::match_all()")," was used, instead\nof ",Object(n.b)("inlineCode",{parentName:"p"},"preg_match_all()"),". Vanilla PHP ",Object(n.b)("inlineCode",{parentName:"p"},"preg_*()")," method don't throw exceptions.")),Object(n.b)("h2",{id:"performance"},"Performance"),Object(n.b)("p",null,"You might be tempted to use ",Object(n.b)("inlineCode",{parentName:"p"},"count()")," to check whether your subject was matched by the pattern, since ",Object(n.b)("inlineCode",{parentName:"p"},"count()")," doesn't\nreturn any matches..."),Object(n.b)(l.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(c.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"$count = pattern('[aeiouy]')->count('Computer');\nreturn $count > 0;\n"))),Object(n.b)(c.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"$count = preg::match_all('/[aeiouy]/', 'Computer');\nreturn $count > 0;\n")))),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"true\n")),Object(n.b)("p",null,"...but that would be wasteful. You're much better off using\n",Object(n.b)("a",b({parentName:"p"},{href:"/docs/match#test-a-subject"}),Object(n.b)("inlineCode",{parentName:"a"},"test()")),"/",Object(n.b)("a",b({parentName:"p"},{href:"/docs/match#test-a-subject"}),Object(n.b)("inlineCode",{parentName:"a"},"fails()")),":"),Object(n.b)(l.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(c.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"return pattern('[aeiouy]')->test('Computer');\n"))),Object(n.b)(c.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"return preg::match('/[aeiouy]/', 'Computer') > 0;\n")))),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-php"}),"true\n")),Object(n.b)("p",null,"This is because ",Object(n.b)("inlineCode",{parentName:"p"},"count()")," will go through each occurrence of a pattern in a subject, counting it; whereas ",Object(n.b)("inlineCode",{parentName:"p"},"test()"),"\nwill return right after it finds the first occurrence."),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"Under the hood, ",Object(n.b)("inlineCode",{parentName:"p"},"count()")," uses ",Object(n.b)("inlineCode",{parentName:"p"},"preg::match_all()"),", whereas ",Object(n.b)("inlineCode",{parentName:"p"},"test()"),"/",Object(n.b)("inlineCode",{parentName:"p"},"fails()"),"/ use ",Object(n.b)("inlineCode",{parentName:"p"},"preg::match()"),".")))}m.isMDXComponent=!0},208:function(e,a,t){"use strict";var n=t(0),l=t.n(n),c=t(210),b=t.n(c);a.a=function(e){const{block:a,children:t,defaultValue:c,values:p}=e,[r,u]=Object(n.useState)(c);return l.a.createElement("div",null,l.a.createElement("ul",{className:b()("tabs",{"tabs--block":a})},p.map(({value:e,label:a})=>l.a.createElement("li",{className:b()("tab-item",{"tab-item--active":r===e}),key:e,onClick:()=>u(e)},a))),l.a.createElement("div",{className:"margin-vert--md"},n.Children.toArray(t).filter(e=>e.props.value===r)[0]))}},209:function(e,a,t){"use strict";var n=t(0),l=t.n(n);a.a=function(e){return l.a.createElement("div",null,e.children)}}}]);