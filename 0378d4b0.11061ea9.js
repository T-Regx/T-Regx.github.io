(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{180:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return g}));var n=a(0),r=a.n(n),i=a(183),c=a(184),o=a(185),l=a(4),p=a(181),u=a(48),s=a.n(u),b=function(e){function t(){return e.apply(this,arguments)||this}return Object(l.a)(t,e),t.prototype.render=function(){return r.a.createElement("div",{className:s.a.code},r.a.createElement(p.a,{className:"language-"+this.language},this.code))},Object(o.a)(t,[{key:"language",get:function(){return this.props.language||"php"}},{key:"code",get:function(){var e=this.props.children;if("string"==typeof e)return e;if(Array.isArray(e)&&e.every((function(e){return"string"==typeof e})))return e.join("");throw console.log(this.props.children),"Unexpected child of <Code>"}}]),t}(r.a.Component),d=function(e){var t=e.tregx,a=e.php,n=[t?{label:"T-Regx",value:"t-regx"}:{},a?{label:"PHP",value:"php"}:{}].filter((function(e){return e.value}));return r.a.createElement(i.a,{defaultValue:"t-regx",values:n},t&&r.a.createElement(c.a,{value:"t-regx"},r.a.createElement(b,null,t)),a&&r.a.createElement(c.a,{value:"php"},r.a.createElement(b,null,a)))},m=a(49),h=a.n(m),g=function(e){var t=e.text,a=e.children;return r.a.createElement("div",{className:h.a.result},r.a.createElement(b,{language:t?"text":"php"},a))}},65:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return s}));var n=a(2),r=a(6),i=(a(0),a(179)),c=a(180),o={id:"match-group",title:"Inline groups"},l={unversionedId:"match-group",id:"match-group",isDocsHomePage:!1,title:"Inline groups",description:"Method match()->group() behaves exactly like [Match.group(int|string)]:",source:"@site/../docs/match-group.mdx",slug:"/match-group",permalink:"/docs/match-group",version:"current",lastUpdatedAt:1611005578,sidebar:"docs",previous:{title:"Match offsets",permalink:"/docs/match-offsets"},next:{title:"Handling integers",permalink:"/docs/match-as-int"}},p=[{value:"Matched occurrences of a group",id:"matched-occurrences-of-a-group",children:[]},{value:"Optional groups",id:"optional-groups",children:[]},{value:"Missing or invalid groups",id:"missing-or-invalid-groups",children:[]}],u={rightToc:p};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Method ",Object(i.b)("inlineCode",{parentName:"p"},"match()->group()")," behaves exactly like ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/match-details"}),Object(i.b)("inlineCode",{parentName:"a"},"Match.group(int|string)")),":"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"accepts either a group index (where #0 is the whole match) or a group name (when a group is named)"),Object(i.b)("li",{parentName:"ul"},"throws ",Object(i.b)("inlineCode",{parentName:"li"},"NonexistentGroupException")," if ",Object(i.b)("inlineCode",{parentName:"li"},"group()")," is used with a non-existent group"),Object(i.b)("li",{parentName:"ul"},"throws ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.php.net/manual/en/class.invalidargumentexception.php"}),Object(i.b)("inlineCode",{parentName:"a"},"\\InvalidArgumentException"))," for an invalid index or an invalid group name (e.g. ",Object(i.b)("inlineCode",{parentName:"li"},'"2group"')," or ",Object(i.b)("inlineCode",{parentName:"li"},"-2"),")")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/replace-by-group"}),"Inline groups")," can be used with ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/replace-by-group"}),"replacements")," as well."))),Object(i.b)("h2",{id:"matched-occurrences-of-a-group"},"Matched occurrences of a group"),Object(i.b)("p",null,"Similarly to how you can retrieve all matched occurrences of pattern from subject:"),Object(i.b)(c.a,{tregx:'pattern("(?<capital>[A-Z])[a-z]+")->match("Hello there, General Kenobi")->all();',php:'preg::match_all("/(?<capital>[A-Z])[a-z]+/", "Hello there, General Kenobi", $matches);\nreturn $matches[0];',mdxType:"CodeTabs"}),Object(i.b)(c.b,{mdxType:"Result"},"['Hello', 'General', 'Kenobi']"),Object(i.b)("p",null,"...you can retrieve all matched occurrences of a capturing group in a subject:"),Object(i.b)(c.a,{tregx:'pattern("(?<capital>[A-Z])[a-z]+")->match("Hello there, General Kenobi")->group(\'capital\')->all();',php:"// possible invalid group, e.g. \"2group\" or -2\nvalidateGroupName('capital');\n\npreg::match_all(\"/(?<capital>[A-Z])[a-z]+/\", \"Hello there, General Kenobi\", $matches);\nif (validateGroupExists('capital', $matches)) {\n    return $matches['capital'];\n} else {\n    throw new NonexistentGroupException('capital');\n}",mdxType:"CodeTabs"}),Object(i.b)(c.b,{mdxType:"Result"},"['H', 'G', 'K']"),Object(i.b)("h2",{id:"optional-groups"},"Optional groups"),Object(i.b)("p",null,"Inline groups ",Object(i.b)("inlineCode",{parentName:"p"},"match()->group()->all()")," also handle optional capturing groups."),Object(i.b)("p",null,"In this example, we'll match words, with a pattern that specifies an optional capturing group named ",Object(i.b)("inlineCode",{parentName:"p"},"capital"),", which\nis supposed to match a capital letter. Not every word in the subject has a capital letter, so not every occurrence will\nhave group ",Object(i.b)("inlineCode",{parentName:"p"},"capital")," matched."),Object(i.b)(c.a,{tregx:'pattern("(?<capital>[A-Z])?[a-z]+")->match("Hello there, General kenobi")->group(\'capital\')->all();',php:"// possible invalid group, e.g. \"2group\" or -2\nvalidateGroupName('capital');\n\npreg::match_all(\"/(?<capital>[A-Z])?[a-z]+/\", \"Hello there, General kenobi\", $matches);\nif (validateGroupExists('capital', $matches)) {\n    return array_map(function ($match) {\n        if ($match === '') {\n            if (validateGroupMatched('capital', $match)) {\n                return '';  // group was indeed matched\n            }\n            return null;  // group was not matched and falsely represented as an empty string\n        }\n        return $match;\n    }, $matches['capital']);\n} else {\n    throw new NonexistentGroupException('capital');\n}",mdxType:"CodeTabs"}),Object(i.b)(c.b,{mdxType:"Result"},"['H', null, 'G', null]"),Object(i.b)("h2",{id:"missing-or-invalid-groups"},"Missing or invalid groups"),Object(i.b)("p",null,"When ",Object(i.b)("inlineCode",{parentName:"p"},"match()->group()")," is called with a group that wasn't used in pattern (for example ",Object(i.b)("inlineCode",{parentName:"p"},'"asd"')," or ",Object(i.b)("inlineCode",{parentName:"p"},"1200"),"), ",Object(i.b)("inlineCode",{parentName:"p"},"NonexistentGroupException")," is thrown.CodeTabs"),Object(i.b)("p",null,"If, however, an invalid group is used:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"group name starting with a number (e.g. ",Object(i.b)("inlineCode",{parentName:"li"},'"2asd"'),")"),Object(i.b)("li",{parentName:"ul"},"negative group index (e.g. ",Object(i.b)("inlineCode",{parentName:"li"},"-12"),")"),Object(i.b)("li",{parentName:"ul"},"group name containing invalid characters (e.g. ",Object(i.b)("inlineCode",{parentName:"li"},'"!@#"'),")")),Object(i.b)("p",null,"... then ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.php.net/manual/en/class.invalidargumentexception.php"}),Object(i.b)("inlineCode",{parentName:"a"},"\\InvalidArgumentException"))," is thrown."))}s.isMDXComponent=!0}}]);