(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{162:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return p})),t.d(a,"rightToc",(function(){return o})),t.d(a,"default",(function(){return b}));t(217);var n=t(209),l=t(214),r=t(215);function c(){return(c=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}const p={id:"match-group",title:"Inline groups"},o=[{value:"Matched occurrences of a group",id:"matched-occurrences-of-a-group",children:[]},{value:"Optional groups",id:"optional-groups",children:[]}],u={rightToc:o},i="wrapper";function b({components:e,...a}){return Object(n.b)(i,c({},u,a,{components:e,mdxType:"MDXLayout"}),Object(n.b)("p",null,"Apart from retrieving matched capturing groups, you can also replace by an ",Object(n.b)("a",c({parentName:"p"},{href:"/docs/replace-by-group"}),"inline group"),"."),Object(n.b)("p",null,"Method ",Object(n.b)("inlineCode",{parentName:"p"},"match()->group()")," behaves exactly like ",Object(n.b)("a",c({parentName:"p"},{href:"/docs/match-details"}),Object(n.b)("inlineCode",{parentName:"a"},"Match.group(int|string)")),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"it can accept either group index (where #0 is the whole match) or a group name (when a group is named)"),Object(n.b)("li",{parentName:"ul"},"it throws ",Object(n.b)("inlineCode",{parentName:"li"},"\\InvalidArgumentException"),' for an invalid index or an invalid group name (e.g. "2group" or -2)'),Object(n.b)("li",{parentName:"ul"},"and throws ",Object(n.b)("inlineCode",{parentName:"li"},"NonexistentGroupException")," if ",Object(n.b)("inlineCode",{parentName:"li"},"group()")," is used with a non-existent group")),Object(n.b)("h2",{id:"matched-occurrences-of-a-group"},"Matched occurrences of a group"),Object(n.b)("p",null,"Similarly to how you can retrieve all matched occurrences of pattern from subject:"),Object(n.b)(l.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(r.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),'pattern("(?<capital>[A-Z])[a-z]+")->match("Hello there, General Kenobi")->all();\n'))),Object(n.b)(r.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),'preg::match_all("/(?<capital>[A-Z])[a-z]+/", "Hello there, General Kenobi", $matches);\nreturn $matches[0];\n')))),Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),"['Hello', 'General', 'Kenobi']\n")),Object(n.b)("p",null,"...you can retrieve all matched occurrences of a capturing group in a subject:"),Object(n.b)(l.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(r.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),'pattern("(?<capital>[A-Z])[a-z]+")->match("Hello there, General Kenobi")->group(\'capital\')->all();\n'))),Object(n.b)(r.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),"// possible invalid group, e.g. \"2group\" or -2\nvalidateGroupName('capital');\n\npreg::match_all(\"/(?<capital>[A-Z])[a-z]+/\", \"Hello there, General Kenobi\", $matches);\nif (validateGroupExists('capital', $matches)) {\n    return $matches['capital'];\n} else {\n    throw new NonexistentGroupException('capital');\n}\n")))),Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),"['H', 'G', 'K']\n")),Object(n.b)("h2",{id:"optional-groups"},"Optional groups"),Object(n.b)("p",null,"What does ",Object(n.b)("inlineCode",{parentName:"p"},"match()->group()->all()")," for unmatched capturing group?"),Object(n.b)(l.a,{defaultValue:"T-Regx",values:[{label:"T-Regx",value:"T-Regx"},{label:"PHP",value:"PHP"}],mdxType:"Tabs"},Object(n.b)(r.a,{value:"T-Regx",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),'pattern("(?<capital>[A-Z])?[a-z]+")->match("Hello there, General Kenobi")->group(\'capital\')->all();\n'))),Object(n.b)(r.a,{value:"PHP",mdxType:"TabItem"},Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),"// possible invalid group, e.g. \"2group\" or -2\nvalidateGroupName('capital');\n\npreg::match_all(\"/(?<capital>[A-Z])?[a-z]+/\", \"Hello there, General Kenobi\", $matches);\nif (validateGroupExists('capital', $matches)) {\n    return $matches['capital'];\n} else {\n    throw new NonexistentGroupException('capital');\n}\n")))),Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-php"}),"['H', null, 'G', 'K']\n")),Object(n.b)("p",null,"You guess it :)"))}b.isMDXComponent=!0},214:function(e,a,t){"use strict";var n=t(0),l=t.n(n),r=t(216),c=t.n(r);a.a=function(e){const{block:a,children:t,defaultValue:r,values:p}=e,[o,u]=Object(n.useState)(r);return l.a.createElement("div",null,l.a.createElement("ul",{className:c()("tabs",{"tabs--block":a})},p.map(({value:e,label:a})=>l.a.createElement("li",{className:c()("tab-item",{"tab-item--active":o===e}),key:e,onClick:()=>u(e)},a))),l.a.createElement("div",{className:"margin-vert--md"},n.Children.toArray(t).filter(e=>e.props.value===o)[0]))}},215:function(e,a,t){"use strict";var n=t(0),l=t.n(n);a.a=function(e){return l.a.createElement("div",null,e.children)}}}]);