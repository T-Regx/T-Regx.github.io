(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{124:function(t,e,n){"use strict";n.r(e),n.d(e,"frontMatter",(function(){return o})),n.d(e,"rightToc",(function(){return s})),n.d(e,"default",(function(){return l}));n(211);var a=n(207);function r(){return(r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t}).apply(this,arguments)}const o={id:"introduction",title:"Introduction"},s=[{value:"Entry points",id:"entry-points",children:[]},{value:"Automatic delimiters",id:"automatic-delimiters",children:[{value:"Old-school patterns",id:"old-school-patterns",children:[]}]}],i={rightToc:s},c="wrapper";function l({components:t,...e}){return Object(a.b)(c,r({},i,e,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"There are two ways of instantiating a pattern for T-Regx. Each of them accepts an ",Object(a.b)("a",r({parentName:"p"},{href:"/docs/delimiters"}),"undelimited")," pattern\nas the first argument and optional flags as the second argument. "),Object(a.b)("h2",{id:"entry-points"},"Entry points"),Object(a.b)("h4",{id:"class-method-style"},"Class method style:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-php"}),"use TRegx\\CleanRegex\\Pattern;\n \nPattern::of('[A-Z][a-z]+')->test($subject);\n")),Object(a.b)("h4",{id:"global-function-style"},"Global function style:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-php"}),"pattern('[A-Z][a-z]+')->test($subject);\n")),Object(a.b)("h2",{id:"automatic-delimiters"},"Automatic delimiters"),Object(a.b)("p",null,"Notice, that these patterns ",Object(a.b)("strong",{parentName:"p"},"don't have to")," be delimited. Smart T-Regx will conveniently add them for you.\nYou can add flags to your regular expression by passing a second argument.```php\npattern('","[A-Z]","+', 'im')->test($subject);"),Object(a.b)("p",null,"To learn more, go to ",Object(a.b)("a",r({parentName:"p"},{href:"/docs/delimiters"}),"Automatic Delimiters"),"."),Object(a.b)("h3",{id:"old-school-patterns"},"Old-school patterns"),Object(a.b)("p",null,"Of course, you can still use delimited patterns with flags. Both versions are equal with each other."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-php"}),"pattern('/[A-Z]+/im')->test($subject);\n")))}l.isMDXComponent=!0}}]);