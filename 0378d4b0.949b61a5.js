(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{198:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),u=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=u(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=u(n),m=a,d=s["".concat(o,".").concat(m)]||s[m]||b[m]||i;return n?r.a.createElement(d,c(c({ref:t},p),{},{components:n})):r.a.createElement(d,c({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},200:function(e,t,n){"use strict";n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return y}));var a=n(0),r=n.n(a),i=n(204),o=n(199),c=n(53),l=n.n(c),p=37,u=39;var s=function(e){var t=e.lazy,n=e.block,c=e.defaultValue,s=e.values,b=e.groupId,m=e.className,d=Object(i.a)(),h=d.tabGroupChoices,g=d.setTabGroupChoices,f=Object(a.useState)(c),v=f[0],O=f[1],j=a.Children.toArray(e.children);if(null!=b){var y=h[b];null!=y&&y!==v&&s.some((function(e){return e.value===y}))&&O(y)}var w=function(e){O(e),null!=b&&g(b,e)},N=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":n},m)},s.map((function(e){var t=e.value,n=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":v===t,className:Object(o.a)("tabs__item",l.a.tabItem,{"tabs__item--active":v===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case u:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case p:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(N,e.target,e)},onFocus:function(){return w(t)},onClick:function(){w(t)}},n)}))),t?Object(a.cloneElement)(j.filter((function(e){return e.props.value===v}))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},j.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==v})}))))};var b=function(e){var t=e.children,n=e.hidden,a=e.className;return r.a.createElement("div",{role:"tabpanel",hidden:n,className:a},t)},m=n(205),d=n(54),h=n.n(d),g=function(e){var t=e.children,n=e.language;return r.a.createElement("div",{className:h.a.code},r.a.createElement(m.a,{className:"language-"+(n||"php")},function(e){if("string"==typeof e)return e;if(!Array.isArray(e))throw console.log(this.props.children),"Unexpected child of <Code>";if(e.every((function(e){return"string"==typeof e})))return e.join("")}(t)))};var f=function(e){var t=e.tregx,n=e.php;return r.a.createElement(s,{defaultValue:"t-regx",values:v(t,n)},t&&r.a.createElement(b,{value:"t-regx"},r.a.createElement(g,null,t)),n&&r.a.createElement(b,{value:"php"},r.a.createElement(g,null,n)))};function v(e,t){return[e?{label:"T-Regx",value:"t-regx"}:{},t?{label:"PHP",value:"php"}:{}].filter((function(e){return e.value}))}var O=n(55),j=n.n(O),y=function(e){var t=e.text,n=e.children;return r.a.createElement("div",{className:j.a.result},r.a.createElement(g,{language:t?"text":"php"},n))}},71:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),i=(n(0),n(198)),o=n(200),c={id:"match-group",title:"Inline groups"},l={unversionedId:"match-group",id:"match-group",isDocsHomePage:!1,title:"Inline groups",description:"Method match()->group() behaves exactly like [Detail.group(int|string)]:",source:"@site/../docs/match-group.mdx",slug:"/match-group",permalink:"/docs/match-group",version:"current",lastUpdatedAt:1611615683,sidebar:"docs",previous:{title:"Match offsets",permalink:"/docs/match-offsets"},next:{title:"Handling integers",permalink:"/docs/match-as-int"}},p=[{value:"Matched occurrences of a group",id:"matched-occurrences-of-a-group",children:[]},{value:"Optional groups",id:"optional-groups",children:[]},{value:"Missing or invalid groups",id:"missing-or-invalid-groups",children:[]}],u={toc:p};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Method ",Object(i.b)("inlineCode",{parentName:"p"},"match()->group()")," behaves exactly like ",Object(i.b)("a",{parentName:"p",href:"/docs/match-details"},Object(i.b)("inlineCode",{parentName:"a"},"Detail.group(int|string)")),":"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"accepts either a group index (where #0 is the whole match) or a group name (when a group is named)"),Object(i.b)("li",{parentName:"ul"},"throws ",Object(i.b)("inlineCode",{parentName:"li"},"NonexistentGroupException")," if ",Object(i.b)("inlineCode",{parentName:"li"},"group()")," is used with a non-existent group"),Object(i.b)("li",{parentName:"ul"},"throws ",Object(i.b)("a",{parentName:"li",href:"https://www.php.net/manual/en/class.invalidargumentexception.php"},Object(i.b)("inlineCode",{parentName:"a"},"\\InvalidArgumentException"))," for an invalid index or an invalid group name (e.g. ",Object(i.b)("inlineCode",{parentName:"li"},'"2group"')," or ",Object(i.b)("inlineCode",{parentName:"li"},"-2"),")")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},Object(i.b)("a",{parentName:"p",href:"/docs/replace-by-group"},"Inline groups")," can be used with ",Object(i.b)("a",{parentName:"p",href:"/docs/replace-by-group"},"replacements")," as well."))),Object(i.b)("h2",{id:"matched-occurrences-of-a-group"},"Matched occurrences of a group"),Object(i.b)("p",null,"Similarly to how you can retrieve all matched occurrences of pattern from subject:"),Object(i.b)(o.a,{tregx:'pattern("(?<capital>[A-Z])[a-z]+")->match("Hello there, General Kenobi")->all();',php:'preg::match_all("/(?<capital>[A-Z])[a-z]+/", "Hello there, General Kenobi", $matches);\nreturn $matches[0];',mdxType:"CodeTabs"}),Object(i.b)(o.b,{mdxType:"Result"},"['Hello', 'General', 'Kenobi']"),Object(i.b)("p",null,"...you can retrieve all matched occurrences of a capturing group in a subject:"),Object(i.b)(o.a,{tregx:'pattern("(?<capital>[A-Z])[a-z]+")->match("Hello there, General Kenobi")->group(\'capital\')->all();',php:"// possible invalid group, e.g. \"2group\" or -2\nvalidateGroupName('capital');\n\npreg::match_all(\"/(?<capital>[A-Z])[a-z]+/\", \"Hello there, General Kenobi\", $matches);\nif (validateGroupExists('capital', $matches)) {\n    return $matches['capital'];\n} else {\n    throw new NonexistentGroupException('capital');\n}",mdxType:"CodeTabs"}),Object(i.b)(o.b,{mdxType:"Result"},"['H', 'G', 'K']"),Object(i.b)("h2",{id:"optional-groups"},"Optional groups"),Object(i.b)("p",null,"Inline groups ",Object(i.b)("inlineCode",{parentName:"p"},"match()->group()->all()")," also handle optional capturing groups."),Object(i.b)("p",null,"In this example, we'll match words, with a pattern that specifies an optional capturing group named ",Object(i.b)("inlineCode",{parentName:"p"},"capital"),", which\nis supposed to match a capital letter. Not every word in the subject has a capital letter, so not every occurrence will\nhave group ",Object(i.b)("inlineCode",{parentName:"p"},"capital")," matched."),Object(i.b)(o.a,{tregx:'pattern("(?<capital>[A-Z])?[a-z]+")->match("Hello there, General kenobi")->group(\'capital\')->all();',php:"// possible invalid group, e.g. \"2group\" or -2\nvalidateGroupName('capital');\n\npreg::match_all(\"/(?<capital>[A-Z])?[a-z]+/\", \"Hello there, General kenobi\", $matches);\nif (validateGroupExists('capital', $matches)) {\n    return array_map(function ($match) {\n        if ($match === '') {\n            if (validateGroupMatched('capital', $match)) {\n                return '';  // group was indeed matched\n            }\n            return null;  // group was not matched and falsely represented as an empty string\n        }\n        return $match;\n    }, $matches['capital']);\n} else {\n    throw new NonexistentGroupException('capital');\n}",mdxType:"CodeTabs"}),Object(i.b)(o.b,{mdxType:"Result"},"['H', null, 'G', null]"),Object(i.b)("h2",{id:"missing-or-invalid-groups"},"Missing or invalid groups"),Object(i.b)("p",null,"When ",Object(i.b)("inlineCode",{parentName:"p"},"match()->group()")," is called with a group that wasn't used in pattern (for example ",Object(i.b)("inlineCode",{parentName:"p"},'"asd"')," or ",Object(i.b)("inlineCode",{parentName:"p"},"1200"),"), ",Object(i.b)("inlineCode",{parentName:"p"},"NonexistentGroupException")," is thrown.CodeTabs"),Object(i.b)("p",null,"If, however, an invalid group is used:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"group name starting with a number (e.g. ",Object(i.b)("inlineCode",{parentName:"li"},'"2asd"'),")"),Object(i.b)("li",{parentName:"ul"},"negative group index (e.g. ",Object(i.b)("inlineCode",{parentName:"li"},"-12"),")"),Object(i.b)("li",{parentName:"ul"},"group name containing invalid characters (e.g. ",Object(i.b)("inlineCode",{parentName:"li"},'"!@#"'),")")),Object(i.b)("p",null,"... then ",Object(i.b)("a",{parentName:"p",href:"https://www.php.net/manual/en/class.invalidargumentexception.php"},Object(i.b)("inlineCode",{parentName:"a"},"\\InvalidArgumentException"))," is thrown."))}s.isMDXComponent=!0}}]);